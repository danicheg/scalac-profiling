<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#e0e0ff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] (id 4800) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (21,862 Î¼s, 0.56%)</title><rect x="501.9" y="245" width="6.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="504.91" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7546) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (953 Î¼s, 0.02%)</title><rect x="1044.1" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1047.14" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (4,234 Î¼s, 0.11%)</title><rect x="1055.0" y="133" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.99" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 2460) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,461 Î¼s, 0.04%)</title><rect x="856.7" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="859.67" y="159.5" ></text>
</g>
<g >
<title>groupedDependencies.type =&gt; ?{def traverse: ?} (expanded macros 0)  (446 Î¼s, 0.01%)</title><rect x="283.4" y="245" width="0.1" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="286.36" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]] (expanded macros 0)  (4,983 Î¼s, 0.13%)</title><rect x="322.6" y="245" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="325.58" y="255.5" ></text>
</g>
<g >
<title>org.typelevel.log4cats.Logger[F] (expanded macros 0)  (1,058 Î¼s, 0.03%)</title><rect x="348.0" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="351.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,272 Î¼s, 0.03%)</title><rect x="955.1" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="958.12" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] (expanded macros 0)  (907 Î¼s, 0.02%)</title><rect x="728.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.93" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (939 Î¼s, 0.02%)</title><rect x="1143.9" y="197" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1146.85" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)],String] :: shapeless.HNil] (id 3653) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (1,934 Î¼s, 0.05%)</title><rect x="422.0" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="425.02" y="207.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Update.Single] (expanded macros 0)  (952 Î¼s, 0.02%)</title><rect x="147.6" y="245" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="150.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,534 Î¼s, 0.04%)</title><rect x="896.2" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="899.23" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (521 Î¼s, 0.01%)</title><rect x="50.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="53.63" y="239.5" ></text>
</g>
<g >
<title>Char =&gt; ?{def === : ?} (expanded macros 0)  (456 Î¼s, 0.01%)</title><rect x="23.6" y="245" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="26.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,455 Î¼s, 0.04%)</title><rect x="899.7" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="902.67" y="191.5" ></text>
</g>
<g >
<title>from.major.type =&gt; ?{def === : ?} (expanded macros 0)  (503 Î¼s, 0.01%)</title><rect x="276.6" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="279.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)]} (id 4974) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (410 Î¼s, 0.01%)</title><rect x="888.7" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="891.70" y="127.5" ></text>
</g>
<g >
<title>cats.Traverse[Seq] (expanded macros 0)  (365 Î¼s, 0.01%)</title><rect x="266.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="269.31" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],String] :: shapeless.HNil]] (id 3419) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,778 Î¼s, 0.05%)</title><rect x="862.0" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="865.02" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = R} (expanded macros 0)  (2,761 Î¼s, 0.07%)</title><rect x="995.4" y="213" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="998.41" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (599 Î¼s, 0.02%)</title><rect x="1072.6" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.64" y="175.5" ></text>
</g>
<g >
<title>F[(Unit, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,014 Î¼s, 0.03%)</title><rect x="35.6" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="38.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2074) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (863 Î¼s, 0.02%)</title><rect x="974.8" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="977.77" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,182 Î¼s, 0.11%)</title><rect x="916.8" y="197" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="919.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.RepositoriesOut]] (id 5314) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,883 Î¼s, 0.20%)</title><rect x="780.4" y="245" width="2.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="783.40" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,473 Î¼s, 0.04%)</title><rect x="1161.7" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1164.68" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.CrossDependency] (expanded macros 0)   (616 Î¼s, 0.02%)</title><rect x="844.4" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="847.38" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (9,981 Î¼s, 0.26%)</title><rect x="403.9" y="229" width="3.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="406.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5457) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (588 Î¼s, 0.02%)</title><rect x="792.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (id 2404) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,465 Î¼s, 0.04%)</title><rect x="847.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="850.74" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (350 Î¼s, 0.01%)</title><rect x="434.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="437.88" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 1682) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (955 Î¼s, 0.02%)</title><rect x="930.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="933.27" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8248) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,077 Î¼s, 0.03%)</title><rect x="1110.1" y="117" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1113.14" y="127.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.forge.github.Repository] =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (464 Î¼s, 0.01%)</title><rect x="143.4" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="146.43" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (477 Î¼s, 0.01%)</title><rect x="479.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="482.78" y="191.5" ></text>
</g>
<g >
<title>F[coursier.core.Repository] =&gt; ?{def attempt: ?} (expanded macros 0)  (790 Î¼s, 0.02%)</title><rect x="109.6" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="112.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,277 Î¼s, 0.06%)</title><rect x="966.2" y="133" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="969.22" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (id 8844) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (401 Î¼s, 0.01%)</title><rect x="1169.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1172.12" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.ForkPayload] (expanded macros 0)  (9,213 Î¼s, 0.24%)</title><rect x="897.9" y="229" width="2.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="900.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,517 Î¼s, 0.12%)</title><rect x="874.5" y="133" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="877.52" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sourceRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: shapeless.HNil] (id 3403) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,456 Î¼s, 0.06%)</title><rect x="869.0" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="872.01" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (378 Î¼s, 0.01%)</title><rect x="778.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="781.09" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)]} (id 4560) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,097 Î¼s, 0.03%)</title><rect x="542.2" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="545.20" y="159.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 2027) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (786 Î¼s, 0.02%)</title><rect x="982.2" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="985.22" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: org.scalasteward.core.data.ArtifactId :: org.scalasteward.core.data.Version :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,624 Î¼s, 0.14%)</title><rect x="397.2" y="197" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="400.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,String :: Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,923 Î¼s, 0.15%)</title><rect x="552.2" y="197" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="555.17" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (841 Î¼s, 0.02%)</title><rect x="1189.1" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1192.06" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = R} (expanded macros 0)   (9,404 Î¼s, 0.24%)</title><rect x="1002.7" y="213" width="2.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1005.74" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = K} (id 8130) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (349 Î¼s, 0.01%)</title><rect x="1089.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1092.72" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (880 Î¼s, 0.02%)</title><rect x="977.7" y="101" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="980.72" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)] :: shapeless.HNil,Int :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,196 Î¼s, 0.03%)</title><rect x="864.3" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="867.30" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: Option[List[String]] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,305 Î¼s, 0.06%)</title><rect x="868.2" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="871.20" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (id 2301) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,910 Î¼s, 0.05%)</title><rect x="837.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="840.36" y="207.5" ></text>
</g>
<g >
<title>seconds.type =&gt; ?{def seconds: ?} (expanded macros 0)  (704 Î¼s, 0.02%)</title><rect x="355.9" y="245" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="358.95" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Vector[String]]] (expanded macros 0)  (749 Î¼s, 0.02%)</title><rect x="495.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.60" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]] (id 6800) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (14,792 Î¼s, 0.38%)</title><rect x="574.2" y="245" width="4.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="577.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.UpdatePattern with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.repoconfig.UpdatePattern] :: shapeless.HNil]] (id 7118) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,559 Î¼s, 0.14%)</title><rect x="591.4" y="213" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="594.39" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.github.Repository] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,260 Î¼s, 0.03%)</title><rect x="781.7" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="784.72" y="207.5" ></text>
</g>
<g >
<title>String =&gt; ?{def toInt: ?} (expanded macros 0)  (596 Î¼s, 0.02%)</title><rect x="153.8" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="156.81" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.Dependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.data.Dependency] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)],List[String]] :: shapeless.HNil] (id 1603) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (6,411 Î¼s, 0.16%)</title><rect x="391.2" y="197" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="394.23" y="207.5" ></text>
</g>
<g >
<title>names.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (821 Î¼s, 0.02%)</title><rect x="333.8" y="245" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="336.83" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] (expanded macros 0)  (1,100 Î¼s, 0.03%)</title><rect x="1071.6" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1074.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8267) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,104 Î¼s, 0.03%)</title><rect x="1116.8" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1119.81" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,083 Î¼s, 0.16%)</title><rect x="530.9" y="133" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="533.93" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (822 Î¼s, 0.02%)</title><rect x="1015.0" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.97" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = Labels} (id 8771) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (540 Î¼s, 0.01%)</title><rect x="1157.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1160.83" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.Page[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def map: ?} (expanded macros 0)  (622 Î¼s, 0.02%)</title><rect x="113.8" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="116.84" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (12,552 Î¼s, 0.32%)</title><rect x="829.5" y="229" width="3.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="832.50" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Greater['f']]{type R = R} (expanded macros 0)  (1,991 Î¼s, 0.05%)</title><rect x="268.0" y="149" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="271.00" y="159.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def last: ?} (expanded macros 0)  (729 Î¼s, 0.02%)</title><rect x="20.5" y="245" width="0.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="23.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8327) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,152 Î¼s, 0.03%)</title><rect x="1098.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1101.05" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] (expanded macros 0)  (1,461 Î¼s, 0.04%)</title><rect x="728.5" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.48" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (908 Î¼s, 0.02%)</title><rect x="1161.9" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1164.85" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Repr = R} (expanded macros 0)  (35,135 Î¼s, 0.90%)</title><rect x="482.7" y="213" width="10.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="485.67" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubAssignees] (expanded macros 0)  (6,067 Î¼s, 0.16%)</title><rect x="890.3" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="893.27" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Repr = V} (id 4212) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (512 Î¼s, 0.01%)</title><rect x="436.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="439.21" y="207.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.http4s.Uri] &lt;:&lt; cats.data.NonEmptyList[org.http4s.Uri] (expanded macros 0)  (612 Î¼s, 0.02%)</title><rect x="221.8" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="224.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigrations]] (id 2843) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (19,749 Î¼s, 0.51%)</title><rect x="1149.1" y="245" width="6.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1152.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,405 Î¼s, 0.09%)</title><rect x="1117.1" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1120.14" y="127.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7286) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (700 Î¼s, 0.02%)</title><rect x="1001.0" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1004.04" y="223.5" ></text>
</g>
<g >
<title>cats.Functor[List] (expanded macros 0)  (1,112 Î¼s, 0.03%)</title><rect x="282.3" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="285.31" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.GroupRepoConfig] (expanded macros 0)  (11,000 Î¼s, 0.28%)</title><rect x="589.7" y="229" width="3.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="592.75" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.coursier.VersionsCache.Value]{type Repr = V} (id 1321) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,904 Î¼s, 0.05%)</title><rect x="363.5" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="366.48" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,String :: Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (11,371 Î¼s, 0.29%)</title><rect x="623.7" y="197" width="3.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="626.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.TokenOut]] (id 5351) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,515 Î¼s, 0.19%)</title><rect x="784.8" y="245" width="2.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="787.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[Vector[String]] :: Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (23,089 Î¼s, 0.59%)</title><rect x="486.3" y="197" width="7.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="489.31" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,308 Î¼s, 0.08%)</title><rect x="984.1" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="987.07" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (623 Î¼s, 0.02%)</title><rect x="947.1" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="950.05" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7876) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (523 Î¼s, 0.01%)</title><rect x="1085.1" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1088.11" y="127.5" ></text>
</g>
<g >
<title>failuresSummaryOpt.type =&gt; ?{def toSeq: ?} (expanded macros 0)  (686 Î¼s, 0.02%)</title><rect x="275.8" y="245" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="278.81" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.PullRequestOut] =&gt; ?{def map: ?} (expanded macros 0)  (641 Î¼s, 0.02%)</title><rect x="116.9" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="119.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.PullRequestsConfig] :: Some[org.scalasteward.core.repoconfig.ScalafmtConfig] :: Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (6,470 Î¼s, 0.17%)</title><rect x="1054.3" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.31" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,321 Î¼s, 0.16%)</title><rect x="874.0" y="165" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="876.97" y="175.5" ></text>
</g>
<g >
<title>PostUpdateHook.this.command.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;\'&quot;), x$2: ? &gt;: String(&quot; &quot;), x$3: ? &gt;: String(&quot;\'&quot;)): ?} (expanded macros 0)  (543 Î¼s, 0.01%)</title><rect x="148.5" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="151.53" y="255.5" ></text>
</g>
<g >
<title>fs2.Compiler[[x]F[x],G] (expanded macros 0)  (8,911 Î¼s, 0.23%)</title><rect x="277.5" y="245" width="2.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="280.53" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Condition] (expanded macros 0)  (6,455 Î¼s, 0.17%)</title><rect x="737.2" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="740.16" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (6,511 Î¼s, 0.17%)</title><rect x="1042.5" y="213" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1045.51" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version] (expanded macros 0)  (1,576 Î¼s, 0.04%)</title><rect x="344.4" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="347.39" y="239.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (661 Î¼s, 0.02%)</title><rect x="54.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="57.83" y="239.5" ></text>
</g>
<g >
<title>F[Option[org.http4s.Uri]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (981 Î¼s, 0.03%)</title><rect x="66.6" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="69.58" y="255.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[List[org.http4s.Uri]], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (2,374 Î¼s, 0.06%)</title><rect x="15.3" y="245" width="0.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="18.35" y="255.5" ></text>
</g>
<g >
<title>((Nothing, Nothing, Nothing)) =&gt; String (expanded macros 0)   (974 Î¼s, 0.02%)</title><rect x="13.8" y="245" width="0.3" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="16.84" y="255.5" ></text>
</g>
<g >
<title>F[org.http4s.Uri] =&gt; ?{def flatMap: ?} (expanded macros 0)  (381 Î¼s, 0.01%)</title><rect x="111.7" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="114.67" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil] (id 5379) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,328 Î¼s, 0.03%)</title><rect x="896.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="899.78" y="207.5" ></text>
</g>
<g >
<title>scopes.type =&gt; ?{def groupByNel: ?} (expanded macros 0)  (1,740 Î¼s, 0.04%)</title><rect x="355.4" y="245" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="358.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8491) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (845 Î¼s, 0.02%)</title><rect x="915.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="918.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Repr = V} (expanded macros 3)   (733 Î¼s, 0.02%)</title><rect x="433.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="436.67" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.data.PullRequestOut]] (expanded macros 0)  (1,591 Î¼s, 0.04%)</title><rect x="287.1" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="290.06" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (1,473 Î¼s, 0.04%)</title><rect x="134.8" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="137.75" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp] (expanded macros 0)  (18,030 Î¼s, 0.46%)</title><rect x="449.6" y="229" width="5.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="452.56" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,852 Î¼s, 0.05%)</title><rect x="974.2" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="977.17" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,745 Î¼s, 0.04%)</title><rect x="1007.5" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1010.52" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4775) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,269 Î¼s, 0.03%)</title><rect x="471.5" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="474.54" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7882) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (540 Î¼s, 0.01%)</title><rect x="1086.2" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1089.15" y="79.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1765) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (705 Î¼s, 0.02%)</title><rect x="969.2" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="972.19" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,702 Î¼s, 0.04%)</title><rect x="984.6" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="987.56" y="111.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[org.scalasteward.core.forge.ForgeType], com.monovore.decline.Opts[org.http4s.Uri], com.monovore.decline.Opts[String], com.monovore.decline.Opts[Boolean], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (619 Î¼s, 0.02%)</title><rect x="16.9" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="19.94" y="255.5" ></text>
</g>
<g >
<title>p1.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (2,696 Î¼s, 0.07%)</title><rect x="348.8" y="245" width="0.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="351.79" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.bitbucket.Reviewer] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,274 Î¼s, 0.03%)</title><rect x="426.3" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="429.27" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[io.circe.Json] (expanded macros 0)  (637 Î¼s, 0.02%)</title><rect x="308.3" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="311.34" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Less[shapeless._0]]{type R = R} (expanded macros 0)  (3,023 Î¼s, 0.08%)</title><rect x="1120.9" y="133" width="0.9" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1123.91" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil]] (id 4109) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,987 Î¼s, 0.23%)</title><rect x="748.5" y="213" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="751.48" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (3,504 Î¼s, 0.09%)</title><rect x="1051.3" y="117" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1054.27" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (643 Î¼s, 0.02%)</title><rect x="891.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="894.91" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (917 Î¼s, 0.02%)</title><rect x="1154.8" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1157.84" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)],org.scalasteward.core.util.Timestamp] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],String] :: shapeless.HNil]] (id 6813) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,654 Î¼s, 0.12%)</title><rect x="577.3" y="213" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="580.26" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (1,274 Î¼s, 0.03%)</title><rect x="977.6" y="117" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="980.60" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,585 Î¼s, 0.12%)</title><rect x="908.0" y="85" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="910.95" y="95.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = R} (expanded macros 0)  (1,718 Î¼s, 0.04%)</title><rect x="1102.8" y="213" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1105.83" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (517 Î¼s, 0.01%)</title><rect x="979.8" y="117" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.76" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.ScalafmtConfig] (expanded macros 0)  (528 Î¼s, 0.01%)</title><rect x="1075.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1078.06" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (575 Î¼s, 0.01%)</title><rect x="750.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="753.38" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Host]] (expanded macros 0)  (378 Î¼s, 0.01%)</title><rect x="233.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="236.59" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.MergeRequestOut] =&gt; ?{def map: ?} (expanded macros 0)  (2,298 Î¼s, 0.06%)</title><rect x="120.6" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="123.62" y="255.5" ></text>
</g>
<g >
<title>fa.type =&gt; ?{def exists: ?} (expanded macros 0)  (353 Î¼s, 0.01%)</title><rect x="275.5" y="245" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="278.53" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (id 4268) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (563 Î¼s, 0.01%)</title><rect x="758.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="761.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.CommitId]{type Out = K} (id 5520) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (679 Î¼s, 0.02%)</title><rect x="788.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="791.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.RepoConfig]{type Out = D} (expanded macros 0)  (11,893 Î¼s, 0.30%)</title><rect x="1053.6" y="213" width="3.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1056.57" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.UpdatePullRequestPayload]] (id 5365) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,986 Î¼s, 0.20%)</title><rect x="894.8" y="245" width="2.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="897.77" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,519 Î¼s, 0.04%)</title><rect x="380.7" y="165" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="383.70" y="175.5" ></text>
</g>
<g >
<title>String =&gt; ?{def filterNot: ?} (expanded macros 0)  (371 Î¼s, 0.01%)</title><rect x="151.8" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="154.80" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.mill.MillModule] (expanded macros 0)  (908 Î¼s, 0.02%)</title><rect x="286.0" y="229" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="289.03" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,274 Î¼s, 0.08%)</title><rect x="1004.6" y="181" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1007.60" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[String]] (expanded macros 0)  (737 Î¼s, 0.02%)</title><rect x="241.9" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="244.93" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.InstallationOut] (expanded macros 0)  (735 Î¼s, 0.02%)</title><rect x="287.7" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="290.68" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.BuildRootConfig] (expanded macros 0)  (765 Î¼s, 0.02%)</title><rect x="1072.1" y="149" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.08" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (600 Î¼s, 0.02%)</title><rect x="251.1" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="254.07" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)],Option[org.scalasteward.core.data.GroupId]] :: org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (2,639 Î¼s, 0.07%)</title><rect x="1165.3" y="213" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1168.33" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[String]] (expanded macros 0)  (1,145 Î¼s, 0.03%)</title><rect x="256.0" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="258.96" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.GitHubLabels] (expanded macros 0)  (659 Î¼s, 0.02%)</title><rect x="329.2" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="332.16" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: Some[List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Some[Option[scala.util.matching.Regex]] :: Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (5,282 Î¼s, 0.14%)</title><rect x="1021.5" y="197" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1024.54" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,754 Î¼s, 0.10%)</title><rect x="1062.7" y="85" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1065.74" y="95.5" ></text>
</g>
<g >
<title>Int(2) =&gt; ?{def hours: ?} (expanded macros 0)  (445 Î¼s, 0.01%)</title><rect x="130.4" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="133.38" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[org.http4s.headers.Link] (expanded macros 0)  (2,607 Î¼s, 0.07%)</title><rect x="336.3" y="229" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="339.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = R} (expanded macros 0)  (1,113 Î¼s, 0.03%)</title><rect x="1002.4" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1005.41" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: cats.data.NonEmptyList[String] :: org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (305,678 Î¼s, 7.83%)</title><rect x="634.2" y="197" width="92.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="637.17" y="207.5" >shapeless.o..</text>
</g>
<g >
<title>io.circe.Decoder[Vector[Int]] (expanded macros 0)  (461 Î¼s, 0.01%)</title><rect x="495.5" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.46" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 3936) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (5,254 Î¼s, 0.13%)</title><rect x="732.8" y="197" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="735.79" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (2,994 Î¼s, 0.08%)</title><rect x="978.3" y="149" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="981.34" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (2,781 Î¼s, 0.07%)</title><rect x="988.7" y="149" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="991.74" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)],Option[List[Int]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)],Option[List[Int]]] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)],Long] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)],Option[Boolean]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)],org.scalasteward.core.git.Branch] :: shapeless.HNil] (id 5492) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (5,382 Î¼s, 0.14%)</title><rect x="909.5" y="197" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="912.50" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 4321) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,207 Î¼s, 0.06%)</title><rect x="765.2" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="768.23" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1698) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,184 Î¼s, 0.03%)</title><rect x="958.1" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="961.06" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (1,097 Î¼s, 0.03%)</title><rect x="592.2" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="595.24" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] (expanded macros 0)  (1,080 Î¼s, 0.03%)</title><rect x="400.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="403.78" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.update.data.ModulePosition]] =&gt; ?{def map: ?} (expanded macros 0)  (436 Î¼s, 0.01%)</title><rect x="57.3" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="60.30" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Out = K} (id 4805) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,528 Î¼s, 0.04%)</title><rect x="503.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="506.91" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Repr = V} (id 6806) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (888 Î¼s, 0.02%)</title><rect x="576.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="579.14" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.Page[org.scalasteward.core.forge.data.PullRequestOut]] (expanded macros 0)  (1,227 Î¼s, 0.03%)</title><rect x="312.2" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="315.23" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.forge.data.PullRequestNumber]] (expanded macros 0)  (1,726 Î¼s, 0.04%)</title><rect x="566.9" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="569.95" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Branch] (expanded macros 0)   (583 Î¼s, 0.01%)</title><rect x="567.9" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="570.88" y="159.5" ></text>
</g>
<g >
<title>cats.Foldable[org.scalasteward.core.util.Nel] (expanded macros 0)  (1,448 Î¼s, 0.04%)</title><rect x="205.1" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="208.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 1727) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,841 Î¼s, 0.15%)</title><rect x="964.2" y="149" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="967.22" y="159.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def flatMap: ?} (expanded macros 0)  (29,178 Î¼s, 0.75%)</title><rect x="80.2" y="245" width="8.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="83.16" y="255.5" ></text>
</g>
<g >
<title>x$1.name.type =&gt; ?{def === : ?} (expanded macros 0)  (1,091 Î¼s, 0.03%)</title><rect x="1177.7" y="245" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1180.66" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.Grouped]] (id 2449) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (27,237 Î¼s, 0.70%)</title><rect x="850.3" y="245" width="8.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="853.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Repr = V} (expanded macros 3)   (3,538 Î¼s, 0.09%)</title><rect x="632.4" y="197" width="1.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="635.41" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] (id 3922) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,443 Î¼s, 0.40%)</title><rect x="729.7" y="245" width="4.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="732.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.CommitOut]{type Out = K} (id 4315) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (417 Î¼s, 0.01%)</title><rect x="764.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="767.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (expanded macros 3)   (2,726 Î¼s, 0.07%)</title><rect x="836.5" y="197" width="0.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="839.53" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (450 Î¼s, 0.01%)</title><rect x="60.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="63.29" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)]} (id 1680) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (353 Î¼s, 0.01%)</title><rect x="931.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="934.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,453 Î¼s, 0.06%)</title><rect x="984.3" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="987.33" y="127.5" ></text>
</g>
<g >
<title>String =&gt; ?{def stripMargin: ?} (expanded macros 0)  (3,377 Î¼s, 0.09%)</title><rect x="152.7" y="245" width="1.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="155.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7532) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,031 Î¼s, 0.03%)</title><rect x="1020.0" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1023.04" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (11,250 Î¼s, 0.29%)</title><rect x="825.2" y="229" width="3.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="828.23" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7333) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (672 Î¼s, 0.02%)</title><rect x="825.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="828.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubAssignees]{type Out = K} (id 5255) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (500 Î¼s, 0.01%)</title><rect x="890.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="893.54" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (1,018 Î¼s, 0.03%)</title><rect x="1051.5" y="69" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1054.54" y="79.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 5459) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,534 Î¼s, 0.04%)</title><rect x="792.7" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.74" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatePattern]{type Out = K} (id 8177) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (754 Î¼s, 0.02%)</title><rect x="594.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="597.32" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'a'} (id 5996) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (377 Î¼s, 0.01%)</title><rect x="269.2" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="272.24" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,980 Î¼s, 0.10%)</title><rect x="520.4" y="197" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="523.40" y="207.5" ></text>
</g>
<g >
<title>Seq[java.nio.file.LinkOption] (expanded macros 0)   (854 Î¼s, 0.02%)</title><rect x="150.9" y="245" width="0.3" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="153.91" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Less['a']]{type R = R} (expanded macros 0)  (2,776 Î¼s, 0.07%)</title><rect x="306.4" y="149" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="309.40" y="159.5" ></text>
</g>
<g >
<title>scala.collection.immutable.Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry] =&gt; ?{def some: ?} (expanded macros 0)  (451 Î¼s, 0.01%)</title><rect x="353.3" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="356.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Repr = V} (expanded macros 3)   (1,526 Î¼s, 0.04%)</title><rect x="519.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="522.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,072 Î¼s, 0.03%)</title><rect x="849.3" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="852.28" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.UpdatePullRequestPayload] (expanded macros 0)  (6,261 Î¼s, 0.16%)</title><rect x="895.3" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="898.29" y="239.5" ></text>
</g>
<g >
<title>v.alnumComponents.type =&gt; ?{def === : ?} (expanded macros 0)  (1,378 Î¼s, 0.04%)</title><rect x="1176.0" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1179.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.Repository]{type Out = K} (id 5342) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (393 Î¼s, 0.01%)</title><rect x="783.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="786.61" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (1,474 Î¼s, 0.04%)</title><rect x="1182.2" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1185.22" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (1,246 Î¼s, 0.03%)</title><rect x="972.9" y="133" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="975.90" y="143.5" ></text>
</g>
<g >
<title>label.type =&gt; ?{def nonEmpty: ?} (expanded macros 0)  (376 Î¼s, 0.01%)</title><rect x="331.8" y="245" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="334.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7361) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (607 Î¼s, 0.02%)</title><rect x="912.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="915.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.RepoOut]{type Out = K} (id 4421) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (969 Î¼s, 0.02%)</title><rect x="771.8" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="774.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = R} (expanded macros 0)  (40,655 Î¼s, 1.04%)</title><rect x="599.4" y="213" width="12.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="602.43" y="223.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.KeyValueStore[[_]F[_],org.scalasteward.core.data.Repo,Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,807 Î¼s, 0.05%)</title><rect x="124.6" y="245" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="127.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubAssignees]{type Out = K} (id 5257) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (456 Î¼s, 0.01%)</title><rect x="890.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="893.69" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (537 Î¼s, 0.01%)</title><rect x="346.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="349.65" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PostUpdateHookConfig] (expanded macros 0)  (540 Î¼s, 0.01%)</title><rect x="1072.4" y="149" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.42" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,704 Î¼s, 0.09%)</title><rect x="963.1" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="966.10" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.UpdatePullRequestPayload] (expanded macros 0)  (731 Î¼s, 0.02%)</title><rect x="329.6" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="332.58" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (790 Î¼s, 0.02%)</title><rect x="392.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="395.88" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestOut]{type Repr = V} (expanded macros 3)   (982 Î¼s, 0.03%)</title><rect x="767.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="770.57" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (530 Î¼s, 0.01%)</title><rect x="628.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="631.07" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (935 Î¼s, 0.02%)</title><rect x="750.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="753.56" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4792) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,321 Î¼s, 0.03%)</title><rect x="459.0" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="462.03" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (637 Î¼s, 0.02%)</title><rect x="586.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="589.69" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Scope[A]]{type Out = K} (id 2191) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,138 Î¼s, 0.05%)</title><rect x="412.5" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="415.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,448 Î¼s, 0.04%)</title><rect x="761.6" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="764.63" y="191.5" ></text>
</g>
<g >
<title>artifactIds.type =&gt; ?{def map: ?} (expanded macros 0)  (652 Î¼s, 0.02%)</title><rect x="192.7" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="195.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2454) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,671 Î¼s, 0.04%)</title><rect x="852.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="855.52" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (1,767 Î¼s, 0.05%)</title><rect x="843.6" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="846.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Lub0] (expanded macros 0)  (449 Î¼s, 0.01%)</title><rect x="1129.1" y="133" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1132.06" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.RepositoriesOut]{type Out = K} (id 5317) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (483 Î¼s, 0.01%)</title><rect x="781.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="784.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,359 Î¼s, 0.19%)</title><rect x="1027.5" y="181" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1030.51" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (15,335 Î¼s, 0.39%)</title><rect x="1106.8" y="197" width="4.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1109.83" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)   (623 Î¼s, 0.02%)</title><rect x="572.1" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="575.14" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (4,946 Î¼s, 0.13%)</title><rect x="1085.3" y="117" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.27" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)],String] :: shapeless.HNil]] (id 5406) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,057 Î¼s, 0.05%)</title><rect x="900.1" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="903.11" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,196 Î¼s, 0.03%)</title><rect x="572.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="575.35" y="191.5" ></text>
</g>
<g >
<title>x$4.type =&gt; ?{def map: ?} (expanded macros 0)  (1,011 Î¼s, 0.03%)</title><rect x="1185.6" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1188.64" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil] (id 4276) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,530 Î¼s, 0.06%)</title><rect x="758.8" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="761.75" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (expanded macros 3)   (1,078 Î¼s, 0.03%)</title><rect x="916.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="919.19" y="207.5" ></text>
</g>
<g >
<title>cats.TraverseFilter[List] (expanded macros 0)  (488 Î¼s, 0.01%)</title><rect x="218.0" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="220.99" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.ProjectId] (expanded macros 0)  (7,170 Î¼s, 0.18%)</title><rect x="791.0" y="229" width="2.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="794.03" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.BranchOut]{type Repr = R} (expanded macros 0)  (4,881 Î¼s, 0.13%)</title><rect x="757.2" y="213" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="760.19" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Repr = V} (id 4173) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (613 Î¼s, 0.02%)</title><rect x="754.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="757.90" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil]] (id 8273) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,462 Î¼s, 0.40%)</title><rect x="1118.2" y="213" width="4.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1121.17" y="223.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.PR] =&gt; ?{def flatMap: ?} (expanded macros 0)  (982 Î¼s, 0.03%)</title><rect x="115.1" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="118.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1846) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (513 Î¼s, 0.01%)</title><rect x="944.7" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="947.66" y="79.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (expanded macros 3)   (2,589 Î¼s, 0.07%)</title><rect x="1105.4" y="197" width="0.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1108.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Out = K} (id 4784) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,659 Î¼s, 0.04%)</title><rect x="456.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="459.51" y="207.5" ></text>
</g>
<g >
<title>creates.type =&gt; ?{def map: ?} (expanded macros 0)  (1,055 Î¼s, 0.03%)</title><rect x="262.5" y="245" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="265.53" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (373 Î¼s, 0.01%)</title><rect x="769.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="772.55" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (870 Î¼s, 0.02%)</title><rect x="421.7" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="424.67" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]] (id 4075) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,576 Î¼s, 0.19%)</title><rect x="751.2" y="245" width="2.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="754.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,255 Î¼s, 0.26%)</title><rect x="543.2" y="133" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="546.21" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.ArtifactId]{type Repr = V} (id 1387) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (844 Î¼s, 0.02%)</title><rect x="384.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="387.31" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Long] (expanded macros 0)  (463 Î¼s, 0.01%)</title><rect x="554.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="557.85" y="191.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.scalasteward.core.data.ArtifactId] =&gt; ?{def contains_: ?} (expanded macros 0)  (410 Î¼s, 0.01%)</title><rect x="222.8" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="225.77" y="255.5" ></text>
</g>
<g >
<title>scala.collection.Factory[T,List[T]] (expanded macros 0)  (2,544 Î¼s, 0.07%)</title><rect x="1012.8" y="133" width="0.8" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1015.80" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)]} (id 7254) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (379 Î¼s, 0.01%)</title><rect x="1015.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1018.74" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.io.FileAlg[F] (expanded macros 0)  (1,493 Î¼s, 0.04%)</title><rect x="345.7" y="245" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="348.72" y="255.5" ></text>
</g>
<g >
<title>F[Either[Throwable,coursier.Fetch.Result]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (706 Î¼s, 0.02%)</title><rect x="43.6" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="46.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,292 Î¼s, 0.26%)</title><rect x="490.2" y="117" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="493.17" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,650 Î¼s, 0.09%)</title><rect x="477.7" y="181" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="480.68" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2846) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (567 Î¼s, 0.01%)</title><rect x="1151.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1154.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (519 Î¼s, 0.01%)</title><rect x="993.6" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="996.58" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.RepositoryResponse] =&gt; ?{def flatMap: ?} (expanded macros 0)  (894 Î¼s, 0.02%)</title><rect x="114.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="117.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2140) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (875 Î¼s, 0.02%)</title><rect x="971.3" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="974.26" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User] (expanded macros 0)  (6,455 Î¼s, 0.17%)</title><rect x="437.6" y="229" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="440.65" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (id 7609) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,391 Î¼s, 0.04%)</title><rect x="1059.6" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1062.61" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Resolver] (expanded macros 0)   (596 Î¼s, 0.02%)</title><rect x="419.5" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="422.52" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Update.Single] (expanded macros 0)  (1,309 Î¼s, 0.03%)</title><rect x="239.8" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="242.77" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (964 Î¼s, 0.02%)</title><rect x="194.4" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="197.41" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)]} (id 5483) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (556 Î¼s, 0.01%)</title><rect x="907.8" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="910.79" y="95.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,646 Î¼s, 0.04%)</title><rect x="517.1" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="520.10" y="191.5" ></text>
</g>
<g >
<title>F[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,452 Î¼s, 0.04%)</title><rect x="103.2" y="245" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="106.17" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8266) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,256 Î¼s, 0.03%)</title><rect x="1117.5" y="101" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1120.48" y="111.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenConcurrent[[x]F[x],Throwable] (expanded macros 0)  (1,383 Î¼s, 0.04%)</title><rect x="279.5" y="213" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="282.52" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (2,058 Î¼s, 0.05%)</title><rect x="1148.5" y="229" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1151.52" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.forge.data.PullRequestNumber :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,163 Î¼s, 0.06%)</title><rect x="768.3" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="771.33" y="191.5" ></text>
</g>
<g >
<title>x$1.type =&gt; ?{def === : ?} (expanded macros 0)  (1,741 Î¼s, 0.04%)</title><rect x="1178.4" y="245" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1181.37" y="255.5" ></text>
</g>
<g >
<title>io.circe.KeyEncoder[org.scalasteward.core.coursier.VersionsCache.Key] (expanded macros 0)  (2,665 Î¼s, 0.07%)</title><rect x="330.8" y="245" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="333.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.Version]] (id 2540) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,906 Î¼s, 0.18%)</title><rect x="1145.1" y="245" width="2.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1148.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]] (id 4766) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,052 Î¼s, 0.44%)</title><rect x="468.0" y="245" width="5.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="470.98" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (550 Î¼s, 0.01%)</title><rect x="1164.0" y="165" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.98" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 4049) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (514 Î¼s, 0.01%)</title><rect x="875.7" y="53" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.65" y="63.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (id 1675) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,581 Î¼s, 0.04%)</title><rect x="930.8" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="933.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (id 7636) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,450 Î¼s, 0.04%)</title><rect x="1065.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1068.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Repr = V} (expanded macros 3)   (715 Î¼s, 0.02%)</title><rect x="590.4" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="593.38" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil] (id 4235) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (1,931 Î¼s, 0.05%)</title><rect x="439.0" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="442.02" y="207.5" ></text>
</g>
<g >
<title>Int(10) =&gt; ?{def minutes: ?} (expanded macros 0)  (489 Î¼s, 0.01%)</title><rect x="130.2" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="133.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (id 7364) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (669 Î¼s, 0.02%)</title><rect x="912.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="915.69" y="207.5" ></text>
</g>
<g >
<title>x.assignees.type =&gt; ?{def |+| : ?} (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="1186.9" y="245" width="0.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1189.95" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (405 Î¼s, 0.01%)</title><rect x="439.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="442.36" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ForkPayload]{type Repr = V} (id 5399) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (747 Î¼s, 0.02%)</title><rect x="899.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="902.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,795 Î¼s, 0.05%)</title><rect x="1164.8" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1167.79" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Update.Single] (expanded macros 0)  (1,413 Î¼s, 0.04%)</title><rect x="343.0" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="346.01" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4304) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,119 Î¼s, 0.03%)</title><rect x="441.1" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="444.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'a'} (id 5995) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (599 Î¼s, 0.02%)</title><rect x="269.1" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="272.06" y="127.5" ></text>
</g>
<g >
<title>org.scalasteward.core.git.GenGitAlg[F,org.scalasteward.core.data.Repo] (expanded macros 0)  (1,543 Î¼s, 0.04%)</title><rect x="345.3" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="348.26" y="255.5" ></text>
</g>
<g >
<title>F[List[Either[(org.scalasteward.core.data.Repo, Throwable),org.scalasteward.core.data.Repo]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (524 Î¼s, 0.01%)</title><rect x="45.6" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="48.65" y="255.5" ></text>
</g>
<g >
<title>F[Either[org.http4s.DecodeFailure,A]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (584 Î¼s, 0.01%)</title><rect x="44.1" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="47.11" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UpdateState]{type Repr = V} (id 4470) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (469 Î¼s, 0.01%)</title><rect x="883.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="886.76" y="207.5" ></text>
</g>
<g >
<title>F[_1] =&gt; ?{def flatMap: ?} (expanded macros 0)  (852 Î¼s, 0.02%)</title><rect x="103.9" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="106.90" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (442 Î¼s, 0.01%)</title><rect x="58.4" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (474 Î¼s, 0.01%)</title><rect x="508.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="511.18" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,530 Î¼s, 0.04%)</title><rect x="970.2" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="973.22" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2857) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (363 Î¼s, 0.01%)</title><rect x="1152.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1155.81" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (1,374 Î¼s, 0.04%)</title><rect x="844.2" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="847.18" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq] (expanded macros 0)  (17,963 Î¼s, 0.46%)</title><rect x="443.4" y="229" width="5.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="446.39" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.ArtifactId]] (id 1381) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (14,522 Î¼s, 0.37%)</title><rect x="382.1" y="245" width="4.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="385.11" y="255.5" ></text>
</g>
<g >
<title>List[better.files.File] =&gt; ?{def filterA: ?} (expanded macros 0)  (441 Î¼s, 0.01%)</title><rect x="141.7" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="144.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,077 Î¼s, 0.05%)</title><rect x="979.9" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.92" y="127.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Repr = R} (expanded macros 0)  (26,075 Î¼s, 0.67%)</title><rect x="524.9" y="213" width="7.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="527.89" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7652) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (459 Î¼s, 0.01%)</title><rect x="1067.6" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1070.61" y="111.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.data.Repo,org.scalasteward.core.repocache.RefreshErrorAlg.Entry]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,755 Î¼s, 0.04%)</title><rect x="123.6" y="245" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="126.65" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.GitHubReviewers] (expanded macros 0)  (707 Î¼s, 0.02%)</title><rect x="329.4" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="332.36" y="255.5" ></text>
</g>
<g >
<title>RunResults.this.results.type =&gt; ?{def separate: ?} (expanded macros 0)  (1,134 Î¼s, 0.03%)</title><rect x="149.5" y="245" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="152.46" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption] (expanded macros 0)  (15,357 Î¼s, 0.39%)</title><rect x="497.3" y="229" width="4.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="500.27" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (expanded macros 3)   (1,101 Î¼s, 0.03%)</title><rect x="927.8" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="930.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Repr = R} (expanded macros 0)  (5,187 Î¼s, 0.13%)</title><rect x="880.5" y="213" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="883.47" y="223.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['a',Char] (expanded macros 0)  (2,090 Î¼s, 0.05%)</title><rect x="306.6" y="133" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="309.61" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.git.Sha1] (expanded macros 0)  (790 Î¼s, 0.02%)</title><rect x="241.5" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="244.48" y="255.5" ></text>
</g>
<g >
<title>String =&gt; Int (expanded macros 0)   (970 Î¼s, 0.02%)</title><rect x="154.0" y="245" width="0.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="157.05" y="255.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; String (expanded macros 0)   (589 Î¼s, 0.02%)</title><rect x="12.1" y="245" width="0.2" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.11" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.git.Author]] (expanded macros 0)  (1,387 Î¼s, 0.04%)</title><rect x="243.0" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="246.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.User :: String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (14,851 Î¼s, 0.38%)</title><rect x="541.8" y="165" width="4.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="544.82" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.CommitOut]{type Repr = V} (expanded macros 3)   (699 Î¼s, 0.02%)</title><rect x="764.5" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="767.48" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2477) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,641 Î¼s, 0.04%)</title><rect x="622.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="625.11" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (366 Î¼s, 0.01%)</title><rect x="729.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="732.20" y="191.5" ></text>
</g>
<g >
<title>F[io.circe.Json] =&gt; ?{def void: ?} (expanded macros 0)  (573 Î¼s, 0.01%)</title><rect x="110.3" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="113.30" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,804 Î¼s, 0.10%)</title><rect x="459.4" y="181" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="462.43" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil] (id 2864) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (2,640 Î¼s, 0.07%)</title><rect x="1153.7" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.68" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (584 Î¼s, 0.01%)</title><rect x="769.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="772.89" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.MergeRequestPayload] (expanded macros 0)  (29,270 Î¼s, 0.75%)</title><rect x="902.3" y="229" width="8.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="905.28" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)],Option[String]] :: Option[Vector[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Option[Vector[String]]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],Option[String]] :: Option[Vector[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[Vector[Int]]] :: Option[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)],Option[Int]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: shapeless.HNil] (id 4745) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (10,523 Î¼s, 0.27%)</title><rect x="493.5" y="197" width="3.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="496.47" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.CommitId] (expanded macros 0)  (9,813 Î¼s, 0.25%)</title><rect x="787.6" y="229" width="3.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="790.60" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[List[org.scalasteward.core.forge.bitbucket.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[org.scalasteward.core.forge.bitbucket.Reviewer]] :: shapeless.HNil] (id 3693) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,515 Î¼s, 0.09%)</title><rect x="426.7" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="429.75" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (872 Î¼s, 0.02%)</title><rect x="971.5" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="974.53" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (613 Î¼s, 0.02%)</title><rect x="264.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="267.72" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.RepositoriesOut] (expanded macros 0)  (858 Î¼s, 0.02%)</title><rect x="319.4" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="322.37" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (385 Î¼s, 0.01%)</title><rect x="310.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="313.93" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (id 7660) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (20,901 Î¼s, 0.54%)</title><rect x="1069.4" y="197" width="6.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1072.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (297,625 Î¼s, 7.62%)</title><rect x="636.6" y="165" width="90.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="639.60" y="175.5" >shapeless...</text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Repr = V} (id 3442) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (563 Î¼s, 0.01%)</title><rect x="863.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="866.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2401) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,545 Î¼s, 0.04%)</title><rect x="846.3" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="849.35" y="207.5" ></text>
</g>
<g >
<title>scala.math.Ordering[Long] (expanded macros 0)  (397 Î¼s, 0.01%)</title><rect x="353.9" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="356.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (3,927 Î¼s, 0.10%)</title><rect x="1164.1" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1167.14" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Repr = V} (expanded macros 3)   (1,913 Î¼s, 0.05%)</title><rect x="470.1" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="473.06" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (390 Î¼s, 0.01%)</title><rect x="1010.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1013.12" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: shapeless.HNil]] (id 4394) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,588 Î¼s, 0.09%)</title><rect x="769.0" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="771.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.ArtifactId]{type Repr = R} (expanded macros 0)  (6,652 Î¼s, 0.17%)</title><rect x="383.2" y="213" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="386.17" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] (expanded macros 0)  (349 Î¼s, 0.01%)</title><rect x="1188.2" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1191.21" y="239.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.buildtool.mill.MillModule], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def map: ?} (expanded macros 0)  (486 Î¼s, 0.01%)</title><rect x="33.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="36.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Out = K} (id 4841) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,470 Î¼s, 0.04%)</title><rect x="444.6" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="447.64" y="207.5" ></text>
</g>
<g >
<title>F[scala.collection.immutable.Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] =&gt; ?{def map: ?} (expanded macros 0)  (939 Î¼s, 0.02%)</title><rect x="128.2" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="131.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)] :: shapeless.HNil,List[A] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,130 Î¼s, 0.03%)</title><rect x="752.6" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="755.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)]} (id 4682) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,314 Î¼s, 0.03%)</title><rect x="531.3" y="117" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="534.28" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (665 Î¼s, 0.02%)</title><rect x="988.5" y="101" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="991.48" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,949 Î¼s, 0.10%)</title><rect x="625.9" y="165" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="628.93" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)],org.scalasteward.core.git.Sha1] :: org.scalasteward.core.data.Update with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)],org.scalasteward.core.data.Update] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: Option[org.scalasteward.core.forge.data.PullRequestNumber] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Option[org.scalasteward.core.forge.data.PullRequestNumber]] :: Option[org.scalasteward.core.git.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)],Option[org.scalasteward.core.git.Branch]] :: shapeless.HNil]] (id 6593) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,728 Î¼s, 0.74%)</title><rect x="565.5" y="213" width="8.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="568.52" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,307 Î¼s, 0.03%)</title><rect x="735.8" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="738.82" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Version]] =&gt; ?{def attempt: ?} (expanded macros 0)  (537 Î¼s, 0.01%)</title><rect x="55.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="58.03" y="255.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.forge.bitbucket.RepositoryResponse]] =&gt; ?{def map: ?} (expanded macros 0)  (1,266 Î¼s, 0.03%)</title><rect x="67.9" y="245" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="70.92" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (430 Î¼s, 0.01%)</title><rect x="879.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="882.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)]} (id 6856) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,015 Î¼s, 0.03%)</title><rect x="582.8" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="585.78" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.CreatePullRequestPayload] (expanded macros 0)  (12,431 Î¼s, 0.32%)</title><rect x="886.0" y="229" width="3.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="889.04" y="239.5" ></text>
</g>
<g >
<title>org.scalasteward.core.buildtool.scalacli.ScalaCliAlg.directives.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (403 Î¼s, 0.01%)</title><rect x="339.3" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="342.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1769) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (629 Î¼s, 0.02%)</title><rect x="970.5" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="973.45" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (748 Î¼s, 0.02%)</title><rect x="1078.0" y="69" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1080.98" y="79.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.BranchOut] =&gt; ?{def map: ?} (expanded macros 0)  (508 Î¼s, 0.01%)</title><rect x="115.9" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="118.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 1674) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (4,481 Î¼s, 0.11%)</title><rect x="928.9" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="931.91" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (9,219 Î¼s, 0.24%)</title><rect x="911.8" y="229" width="2.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="914.79" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,020 Î¼s, 0.13%)</title><rect x="1032.9" y="165" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1035.86" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (562 Î¼s, 0.01%)</title><rect x="833.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="836.12" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (expanded macros 3)   (940 Î¼s, 0.02%)</title><rect x="1159.1" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1162.15" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] (expanded macros 0)  (5,557 Î¼s, 0.14%)</title><rect x="435.5" y="229" width="1.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="438.47" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[org.scalasteward.core.data.Resolver.Header]]] (expanded macros 0)  (2,814 Î¼s, 0.07%)</title><rect x="296.3" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="299.32" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (1,180 Î¼s, 0.03%)</title><rect x="212.5" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="215.51" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,445 Î¼s, 0.04%)</title><rect x="53.4" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="56.39" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (879 Î¼s, 0.02%)</title><rect x="946.1" y="117" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="949.11" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (15,114 Î¼s, 0.39%)</title><rect x="1113.6" y="197" width="4.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1116.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Repr = V} (expanded macros 3)   (1,896 Î¼s, 0.05%)</title><rect x="504.4" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="507.37" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Dependency] (expanded macros 0)  (27,408 Î¼s, 0.70%)</title><rect x="394.9" y="229" width="8.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="397.91" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[String]] (expanded macros 0)  (496 Î¼s, 0.01%)</title><rect x="1120.5" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1123.50" y="175.5" ></text>
</g>
<g >
<title>F[Either[Throwable,Unit]] =&gt; ?{def map: ?} (expanded macros 0)  (1,064 Î¼s, 0.03%)</title><rect x="43.3" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="46.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7874) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (512 Î¼s, 0.01%)</title><rect x="1084.8" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1087.77" y="143.5" ></text>
</g>
<g >
<title>cats.Functor[Option] (expanded macros 0)  (338 Î¼s, 0.01%)</title><rect x="145.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="148.25" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,811 Î¼s, 0.15%)</title><rect x="724.8" y="101" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="727.80" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,033 Î¼s, 0.03%)</title><rect x="493.0" y="53" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="495.97" y="63.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Boolean]] (expanded macros 0)  (577 Î¼s, 0.01%)</title><rect x="1009.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1012.51" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.git.Branch]] (expanded macros 0)  (1,818 Î¼s, 0.05%)</title><rect x="571.0" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="573.97" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.DependencyInfo]] (id 1589) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,083 Î¼s, 0.57%)</title><rect x="386.5" y="245" width="6.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="389.50" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.forge.data.PullRequestNumber]] (id 4370) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,501 Î¼s, 0.09%)</title><rect x="1147.2" y="245" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1150.17" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (872 Î¼s, 0.02%)</title><rect x="888.6" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="891.62" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: List[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)],List[org.scalasteward.core.data.Version]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)],Option[String]] :: shapeless.HNil]] (id 1330) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,845 Î¼s, 0.74%)</title><rect x="373.4" y="213" width="8.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="376.39" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.UserOut]] (id 4486) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,501 Î¼s, 0.17%)</title><rect x="776.2" y="245" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="779.24" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7629) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (440 Î¼s, 0.01%)</title><rect x="1060.8" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1063.84" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (655 Î¼s, 0.02%)</title><rect x="1145.9" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1148.92" y="223.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; coursier.maven.MavenRepository (expanded macros 0)   (1,547 Î¼s, 0.04%)</title><rect x="12.4" y="245" width="0.5" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)],Option[String]] :: shapeless.HNil]] (id 4514) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,790 Î¼s, 0.10%)</title><rect x="466.8" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="469.83" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)]} (id 4144) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (355 Î¼s, 0.01%)</title><rect x="434.2" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="437.17" y="191.5" ></text>
</g>
<g >
<title>scala.math.Ordering[Int] (expanded macros 0)  (541 Î¼s, 0.01%)</title><rect x="353.7" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="356.69" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (638 Î¼s, 0.02%)</title><rect x="401.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="404.11" y="191.5" ></text>
</g>
<g >
<title>fa.type =&gt; ?{def attempt: ?} (expanded macros 0)  (478 Î¼s, 0.01%)</title><rect x="275.4" y="245" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="278.39" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)],String] :: shapeless.HNil] (id 1651) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (2,640 Î¼s, 0.07%)</title><rect x="406.2" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="409.16" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (2,672 Î¼s, 0.07%)</title><rect x="1051.4" y="101" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1054.37" y="111.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[scala.concurrent.duration.FiniteDuration] (expanded macros 0)  (1,868 Î¼s, 0.05%)</title><rect x="259.6" y="245" width="0.6" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="262.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (403 Î¼s, 0.01%)</title><rect x="1167.2" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1170.25" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.github.InstallationOut]] (expanded macros 0)  (1,212 Î¼s, 0.03%)</title><rect x="287.5" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="290.54" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (562 Î¼s, 0.01%)</title><rect x="569.0" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="572.02" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (948 Î¼s, 0.02%)</title><rect x="553.7" y="165" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="556.67" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Out = K} (id 4093) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (956 Î¼s, 0.02%)</title><rect x="746.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="749.00" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,005 Î¼s, 0.05%)</title><rect x="963.6" y="101" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="966.61" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubLabels] (expanded macros 0)  (7,129 Î¼s, 0.18%)</title><rect x="892.6" y="229" width="2.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="895.61" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[A with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],A] :: List[org.scalasteward.core.data.Resolver] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)],List[org.scalasteward.core.data.Resolver]] :: shapeless.HNil]] (id 2201) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,336 Î¼s, 0.19%)</title><rect x="418.2" y="213" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="421.17" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (394 Î¼s, 0.01%)</title><rect x="1010.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1013.80" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (expanded macros 3)   (639 Î¼s, 0.02%)</title><rect x="1168.1" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1171.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (expanded macros 3)   (705 Î¼s, 0.02%)</title><rect x="1151.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1154.93" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)   (2,871 Î¼s, 0.07%)</title><rect x="326.0" y="229" width="0.9" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="329.01" y="239.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1790) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (7,416 Î¼s, 0.19%)</title><rect x="952.5" y="149" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="955.50" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (7,975 Î¼s, 0.20%)</title><rect x="1096.0" y="213" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1098.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)]} (id 2776) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (882 Î¼s, 0.02%)</title><rect x="725.5" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="728.47" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (1,583 Î¼s, 0.04%)</title><rect x="1044.0" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1047.00" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.GitHubLabels]{type Repr = R} (expanded macros 0)  (4,733 Î¼s, 0.12%)</title><rect x="892.7" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="895.69" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (538 Î¼s, 0.01%)</title><rect x="472.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="475.83" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (2,288 Î¼s, 0.06%)</title><rect x="320.0" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="322.95" y="255.5" ></text>
</g>
<g >
<title>buildRoot.relativePath.type =&gt; ?{def dropWhile: ?} (expanded macros 0)  (896 Î¼s, 0.02%)</title><rect x="193.0" y="245" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="196.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7606) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,486 Î¼s, 0.04%)</title><rect x="1058.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1061.23" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (expanded macros 3)   (732 Î¼s, 0.02%)</title><rect x="930.6" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="933.56" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.repoconfig.RepoConfigAlg.ConfigParsingResult] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,091 Î¼s, 0.03%)</title><rect x="125.2" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig]] (id 7058) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (19,326 Î¼s, 0.50%)</title><rect x="992.0" y="245" width="5.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="995.04" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.edit.scalafix.ScalafixMigrations] =&gt; ?{def map: ?} (expanded macros 0)  (385 Î¼s, 0.01%)</title><rect x="113.0" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="115.96" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] (expanded macros 0)  (1,364 Î¼s, 0.03%)</title><rect x="1036.4" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1039.36" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,135 Î¼s, 0.03%)</title><rect x="952.2" y="149" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="955.15" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,807 Î¼s, 0.17%)</title><rect x="476.7" y="197" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="479.72" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.forge.data.RepoOut]] (expanded macros 0)  (669 Î¼s, 0.02%)</title><rect x="298.9" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="301.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.AzureComment]{type Repr = R} (expanded macros 0)  (3,460 Î¼s, 0.09%)</title><rect x="859.0" y="213" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="862.00" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (id 8239) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,056 Î¼s, 0.05%)</title><rect x="1106.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1109.21" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Out = K} (id 4720) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,172 Î¼s, 0.06%)</title><rect x="483.5" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="486.47" y="207.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[String] (expanded macros 0)  (1,315 Î¼s, 0.03%)</title><rect x="258.8" y="245" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="261.81" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.github.RepositoriesOut]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (547 Î¼s, 0.01%)</title><rect x="58.6" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.64" y="255.5" ></text>
</g>
<g >
<title>F[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]] =&gt; ?{def map: ?} (expanded macros 0)  (2,243 Î¼s, 0.06%)</title><rect x="61.7" y="245" width="0.7" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="64.75" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Dependency]] (id 1454) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (33,143 Î¼s, 0.85%)</title><rect x="393.2" y="245" width="10.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="396.17" y="255.5" ></text>
</g>
<g >
<title>updates.type =&gt; ?{def groupByNel: ?} (expanded macros 0)  (995 Î¼s, 0.03%)</title><rect x="1174.8" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1177.75" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Repo]] =&gt; ?{def map: ?} (expanded macros 0)  (505 Î¼s, 0.01%)</title><rect x="53.1" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="56.12" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,057 Î¼s, 0.03%)</title><rect x="944.6" y="85" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="947.56" y="95.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)]} (id 7076) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (372 Î¼s, 0.01%)</title><rect x="996.1" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="999.08" y="191.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (346 Î¼s, 0.01%)</title><rect x="103.5" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="106.50" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,518 Î¼s, 0.04%)</title><rect x="978.8" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="981.79" y="127.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[A,eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]{type R = R} (expanded macros 0)  (7,401 Î¼s, 0.19%)</title><rect x="267.4" y="197" width="2.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="270.44" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = Options} (id 1875) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (880 Î¼s, 0.02%)</title><rect x="939.8" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="942.83" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] (expanded macros 0)  (959 Î¼s, 0.02%)</title><rect x="401.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="404.89" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)],cats.data.NonEmptyList[String]] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)],org.scalasteward.core.data.Version] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)],cats.data.NonEmptyList[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)],Option[String]] :: Option[cats.data.NonEmptyList[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)],Option[cats.data.NonEmptyList[String]]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)],Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.data.GroupId :: cats.data.NonEmptyList[String] :: org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil) (expanded macros 0)  (385 Î¼s, 0.01%)</title><rect x="631.2" y="197" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="634.23" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Branch] (expanded macros 0)   (552 Î¼s, 0.01%)</title><rect x="571.3" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="574.33" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (803 Î¼s, 0.02%)</title><rect x="588.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="591.65" y="191.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (1,437 Î¼s, 0.04%)</title><rect x="134.3" y="197" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="137.32" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.Grouped]{type Repr = R} (expanded macros 0)  (19,973 Î¼s, 0.51%)</title><rect x="851.4" y="213" width="6.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="854.41" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.UpdatesConfig] (expanded macros 0)  (544 Î¼s, 0.01%)</title><rect x="1075.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1078.22" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;addToGitBlameIgnoreRevs&quot;) with String(&quot;commitMessage&quot;) &lt;: String],Lub0] (expanded macros 0)  (493 Î¼s, 0.01%)</title><rect x="1014.4" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.43" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sourceRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: shapeless.HNil]] (id 3402) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,819 Î¼s, 0.07%)</title><rect x="868.9" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="871.90" y="223.5" ></text>
</g>
<g >
<title>org.scalasteward.core.repoconfig.PullRequestUpdateStrategy =&gt; ?{def =!= : ?} (expanded macros 0)  (708 Î¼s, 0.02%)</title><rect x="346.6" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="349.60" y="255.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2891) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (419 Î¼s, 0.01%)</title><rect x="1150.5" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1153.52" y="223.5" ></text>
</g>
<g >
<title>F[(Unit, String, org.scalasteward.core.git.CommitMsg)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (424 Î¼s, 0.01%)</title><rect x="36.2" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="39.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2446) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,024 Î¼s, 0.05%)</title><rect x="619.4" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="622.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (399 Î¼s, 0.01%)</title><rect x="1063.8" y="37" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1066.75" y="47.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.ProjectId]{type Repr = R} (expanded macros 0)  (5,430 Î¼s, 0.14%)</title><rect x="791.1" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="794.09" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)  (1,286 Î¼s, 0.03%)</title><rect x="321.0" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="324.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (6,302 Î¼s, 0.16%)</title><rect x="1040.6" y="197" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1043.61" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (760 Î¼s, 0.02%)</title><rect x="1009.8" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1012.85" y="175.5" ></text>
</g>
<g >
<title>F[Option[cats.data.NonEmptyList[org.scalasteward.core.update.data.UpdateState.WithUpdate]]] =&gt; ?{def map: ?} (expanded macros 0)  (725 Î¼s, 0.02%)</title><rect x="66.4" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="69.36" y="255.5" ></text>
</g>
<g >
<title>String(&quot;─&quot;) =&gt; ?{def * : ?} (expanded macros 0)  (356 Î¼s, 0.01%)</title><rect x="165.4" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="168.36" y="255.5" ></text>
</g>
<g >
<title>F[List[(org.scalasteward.core.data.Dependency, org.scalasteward.core.coursier.DependencyMetadata)]] =&gt; ?{def map: ?} (expanded macros 0)  (709 Î¼s, 0.02%)</title><rect x="45.4" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="48.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (1,835 Î¼s, 0.05%)</title><rect x="954.9" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="957.95" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, String, org.scalasteward.core.data.Version)] (expanded macros 0)  (570 Î¼s, 0.01%)</title><rect x="249.8" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestNumber :: Int :: String :: org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,631 Î¼s, 0.12%)</title><rect x="747.1" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="750.08" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Repr = V} (id 4526) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,437 Î¼s, 0.04%)</title><rect x="551.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="554.74" y="207.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenConcurrent[[_]F[_],Throwable] (expanded macros 0)  (452 Î¼s, 0.01%)</title><rect x="227.9" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="230.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (1,021 Î¼s, 0.03%)</title><rect x="983.5" y="133" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="986.46" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8345) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (982 Î¼s, 0.03%)</title><rect x="1131.1" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1134.07" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForArtifactId] (expanded macros 0)  (50,473 Î¼s, 1.29%)</title><rect x="599.3" y="229" width="15.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="602.26" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Repository] (expanded macros 0)  (7,335 Î¼s, 0.19%)</title><rect x="880.4" y="229" width="2.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="883.40" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (444 Î¼s, 0.01%)</title><rect x="1142.3" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1145.29" y="223.5" ></text>
</g>
<g >
<title>Either.type =&gt; ?{def catchNonFatal: ?} (expanded macros 0)  (360 Î¼s, 0.01%)</title><rect x="29.5" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="32.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.CommitsConfig :: org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (12,014 Î¼s, 0.31%)</title><rect x="1065.6" y="197" width="3.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1068.57" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (4,174 Î¼s, 0.11%)</title><rect x="947.2" y="149" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="950.24" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7454) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (944 Î¼s, 0.02%)</title><rect x="1027.2" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1030.23" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)]} (id 2167) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (456 Î¼s, 0.01%)</title><rect x="928.7" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="931.73" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,440 Î¼s, 0.04%)</title><rect x="893.7" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="896.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,449 Î¼s, 0.09%)</title><rect x="979.5" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.50" y="143.5" ></text>
</g>
<g >
<title>F[(Unit, F[org.scalasteward.core.forge.data.AuthenticatedUser], org.scalasteward.core.update.artifact.ArtifactMigrationsLoader[F])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,502 Î¼s, 0.04%)</title><rect x="35.0" y="245" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="38.03" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2117) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (376 Î¼s, 0.01%)</title><rect x="981.2" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="984.24" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,304 Î¼s, 0.11%)</title><rect x="967.2" y="133" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="970.25" y="143.5" ></text>
</g>
<g >
<title>String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil &lt;:&lt; (String :: Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil) (expanded macros 0)  (408 Î¼s, 0.01%)</title><rect x="621.5" y="197" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="624.47" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,754 Î¼s, 0.17%)</title><rect x="513.5" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="516.51" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.CommitOut]{type Repr = V} (id 4316) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (503 Î¼s, 0.01%)</title><rect x="764.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="767.69" y="207.5" ></text>
</g>
<g >
<title>Option[org.http4s.Uri] =&gt; ?{def tupleLeft: ?} (expanded macros 0)  (481 Î¼s, 0.01%)</title><rect x="145.2" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="148.21" y="255.5" ></text>
</g>
<g >
<title>String =&gt; org.http4s.Header.ToRaw with org.http4s.Header.ToRaw.Primitive (expanded macros 0)   (1,007 Î¼s, 0.03%)</title><rect x="14.6" y="229" width="0.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="17.57" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)]} (id 2852) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (376 Î¼s, 0.01%)</title><rect x="1152.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1155.52" y="191.5" ></text>
</g>
<g >
<title>preCommit.type =&gt; ?{def map: ?} (expanded macros 0)  (497 Î¼s, 0.01%)</title><rect x="349.9" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="352.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7459) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,471 Î¼s, 0.04%)</title><rect x="1030.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1033.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (995 Î¼s, 0.03%)</title><rect x="984.8" y="85" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="987.77" y="95.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (793 Î¼s, 0.02%)</title><rect x="858.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="861.08" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (5,251 Î¼s, 0.13%)</title><rect x="1096.2" y="181" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1099.17" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Repr = R} (expanded macros 0)  (4,023 Î¼s, 0.10%)</title><rect x="430.6" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="433.63" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (id 2849) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (488 Î¼s, 0.01%)</title><rect x="1152.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1155.14" y="207.5" ></text>
</g>
<g >
<title>accu.type =&gt; ?{def pure: ?} (expanded macros 0)  (703 Î¼s, 0.02%)</title><rect x="192.3" y="245" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="195.33" y="255.5" ></text>
</g>
<g >
<title>String(&quot;|  ____            _         ____  _                             _\n         | / ___|  ___ __ _| | __ _  / ___|| |_ _____      ____ _ _ __ __| |\n         | \\___ \\ / __/ _` | |/ _` | \\___ \\| __/ _ \\ \\ /\\ / / _` | \'__/ _` |\n         |  ___) | (_| (_| | | (_| |  ___) | ||  __/\\ V  V / (_| | | | (_| |\n         | |____/ \\___\\__,_|_|\\__,_| |____/ \\__\\___| \\_/\\_/ \\__,_|_|  \\__,_|&quot;) =&gt; ?{def stripMargin: ?} (expanded macros 0)  (1,424 Î¼s, 0.04%)</title><rect x="164.9" y="245" width="0.4" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="167.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,751 Î¼s, 0.07%)</title><rect x="963.4" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="966.39" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1701) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,814 Î¼s, 0.05%)</title><rect x="959.3" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="962.26" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (943 Î¼s, 0.02%)</title><rect x="988.4" y="117" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="991.40" y="127.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.nurture.UpdateInfoUrl] =&gt; ?{def filterA: ?} (expanded macros 0)  (490 Î¼s, 0.01%)</title><rect x="143.6" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="146.57" y="255.5" ></text>
</g>
<g >
<title>update.type =&gt; ?{def asJson: ?} (expanded macros 0)  (885 Î¼s, 0.02%)</title><rect x="1174.0" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1176.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8255) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,592 Î¼s, 0.04%)</title><rect x="1111.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1114.54" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CreateComment] (expanded macros 0)  (5,633 Î¼s, 0.14%)</title><rect x="423.2" y="229" width="1.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="426.17" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)]} (id 4643) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,233 Î¼s, 0.03%)</title><rect x="513.1" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="516.13" y="191.5" ></text>
</g>
<g >
<title>F[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (969 Î¼s, 0.02%)</title><rect x="103.6" y="245" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="106.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,123 Î¼s, 0.03%)</title><rect x="1163.8" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.80" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (id 8124) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (421 Î¼s, 0.01%)</title><rect x="1089.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1092.33" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.AzureComment] (expanded macros 0)  (5,125 Î¼s, 0.13%)</title><rect x="858.9" y="229" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="861.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (5,431 Î¼s, 0.14%)</title><rect x="1100.2" y="165" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1103.22" y="175.5" ></text>
</g>
<g >
<title>((String, String)) =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (1,841 Î¼s, 0.05%)</title><rect x="14.4" y="245" width="0.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="17.42" y="255.5" ></text>
</g>
<g >
<title>x.dependencyOverrides.type =&gt; ?{def |+| : ?} (expanded macros 0)  (521 Î¼s, 0.01%)</title><rect x="1188.2" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1191.15" y="255.5" ></text>
</g>
<g >
<title>F[Either[Throwable,Unit]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (434 Î¼s, 0.01%)</title><rect x="43.2" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="46.19" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (524 Î¼s, 0.01%)</title><rect x="277.1" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="280.10" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (7,439 Î¼s, 0.19%)</title><rect x="1011.3" y="181" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1014.32" y="191.5" ></text>
</g>
<g >
<title>List[(org.scalasteward.core.data.Dependency, org.scalasteward.core.coursier.DependencyMetadata)] =&gt; ?{def mapFilter: ?} (expanded macros 0)  (550 Î¼s, 0.01%)</title><rect x="140.4" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="143.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Out = K} (id 4190) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (682 Î¼s, 0.02%)</title><rect x="880.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="883.72" y="207.5" ></text>
</g>
<g >
<title>NurtureAlg.this.logger.type =&gt; ?{def attemptWarn: ?} (expanded macros 0)  (343 Î¼s, 0.01%)</title><rect x="144.1" y="245" width="0.1" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="147.14" y="255.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenSpawn[[_]F[_],E] (expanded macros 0)  (589 Î¼s, 0.02%)</title><rect x="216.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="219.05" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.data.UserOut :: Option[org.scalasteward.core.forge.data.RepoOut] :: org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,209 Î¼s, 0.13%)</title><rect x="773.1" y="197" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="776.10" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)   (332 Î¼s, 0.01%)</title><rect x="323.9" y="213" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="326.90" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Boolean]] (expanded macros 0)  (556 Î¼s, 0.01%)</title><rect x="1091.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1093.99" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Repr = V} (id 4229) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (551 Î¼s, 0.01%)</title><rect x="438.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="441.44" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,588 Î¼s, 0.04%)</title><rect x="1063.4" y="53" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1066.39" y="63.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1946) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (785 Î¼s, 0.02%)</title><rect x="983.0" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="985.99" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, org.scalasteward.core.data.Version, cats.data.NonEmptyList[org.scalasteward.core.data.Version])] (expanded macros 0)  (1,299 Î¼s, 0.03%)</title><rect x="250.9" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="253.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,762 Î¼s, 0.12%)</title><rect x="1038.6" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1041.58" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7468) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (929 Î¼s, 0.02%)</title><rect x="1032.6" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1035.58" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,893 Î¼s, 0.13%)</title><rect x="1076.7" y="149" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1079.73" y="159.5" ></text>
</g>
<g >
<title>cats.Show[String] (expanded macros 0)  (4,110 Î¼s, 0.11%)</title><rect x="216.7" y="245" width="1.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="219.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Repr = V} (id 5468) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,589 Î¼s, 0.04%)</title><rect x="904.6" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="907.55" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Scheme]] (expanded macros 0)  (660 Î¼s, 0.02%)</title><rect x="350.9" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="353.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] (id 994) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,714 Î¼s, 0.74%)</title><rect x="1132.8" y="245" width="8.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1135.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)]} (id 1664) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (978 Î¼s, 0.03%)</title><rect x="409.7" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="412.66" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)]} (id 4051) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (370 Î¼s, 0.01%)</title><rect x="875.2" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.17" y="95.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.BranchOut] (expanded macros 0)  (785 Î¼s, 0.02%)</title><rect x="316.1" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="319.12" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Out = K} (id 3388) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (650 Î¼s, 0.02%)</title><rect x="866.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="869.81" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repocache.RepoCache]{type Repr = R} (expanded macros 0)  (12,046 Î¼s, 0.31%)</title><rect x="579.9" y="213" width="3.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="582.93" y="223.5" ></text>
</g>
<g >
<title>String(&quot;sbt.version\\s*=\\s*(\\S+)&quot;) =&gt; ?{def r: ?} (expanded macros 0)  (8,760 Î¼s, 0.22%)</title><rect x="162.0" y="245" width="2.6" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="164.96" y="255.5" ></text>
</g>
<g >
<title>F[(Unit, org.scalasteward.core.forge.bitbucketserver.Json.NewPR)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (414 Î¼s, 0.01%)</title><rect x="36.6" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="39.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.MavenRepository]] (id 1695) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (70,031 Î¼s, 1.79%)</title><rect x="949.5" y="181" width="21.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="952.51" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,233 Î¼s, 0.13%)</title><rect x="1028.2" y="165" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1031.15" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.Repository]{type Repr = V} (id 5343) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (480 Î¼s, 0.01%)</title><rect x="783.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="786.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Repr = V} (expanded macros 3)   (716 Î¼s, 0.02%)</title><rect x="740.1" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="743.11" y="207.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def mkString_: ?} (expanded macros 0)   (4,024 Î¼s, 0.10%)</title><rect x="220.6" y="245" width="1.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="223.60" y="255.5" ></text>
</g>
<g >
<title>Char('=') =&gt; String (expanded macros 0)   (10,367 Î¼s, 0.27%)</title><rect x="25.2" y="245" width="3.1" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="28.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = Labels} (id 1876) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (723 Î¼s, 0.02%)</title><rect x="939.6" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="942.61" y="143.5" ></text>
</g>
<g >
<title>fs2.compat.NotGiven[better.files.File &lt;:&lt; Nothing] (expanded macros 0)  (2,606 Î¼s, 0.07%)</title><rect x="281.4" y="245" width="0.8" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="284.44" y="255.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[Boolean], com.monovore.decline.Opts[Option[Int]], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (448 Î¼s, 0.01%)</title><rect x="15.1" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="18.10" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.bitbucketserver.Json.Condition]] (expanded macros 0)  (1,348 Î¼s, 0.03%)</title><rect x="286.6" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="289.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)]} (id 2309) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,231 Î¼s, 0.03%)</title><rect x="839.4" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="842.43" y="175.5" ></text>
</g>
<g >
<title>cats.Functor[cats.data.NonEmptyList] (expanded macros 0)  (390 Î¼s, 0.01%)</title><rect x="223.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="225.96" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,996 Î¼s, 0.15%)</title><rect x="1062.1" y="117" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1065.06" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)]} (id 4511) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,231 Î¼s, 0.03%)</title><rect x="466.2" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="469.18" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,054 Î¼s, 0.03%)</title><rect x="1005.3" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1008.27" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2410) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,909 Î¼s, 0.05%)</title><rect x="849.7" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="852.74" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] (expanded macros 0)  (599 Î¼s, 0.02%)</title><rect x="548.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="551.41" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,987 Î¼s, 0.13%)</title><rect x="1124.4" y="165" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1127.41" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)],Boolean] :: shapeless.HNil]] (id 4980) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,041 Î¼s, 0.08%)</title><rect x="888.9" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="891.88" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,023 Î¼s, 0.03%)</title><rect x="968.2" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="971.24" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)]} (id 3446) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (753 Î¼s, 0.02%)</title><rect x="864.4" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="867.38" y="175.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.data.Update.ForArtifactId])] =&gt; ?{def map: ?} (expanded macros 0)  (708 Î¼s, 0.02%)</title><rect x="33.6" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="36.61" y="255.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def parTraverse: ?} (expanded macros 0)  (382 Î¼s, 0.01%)</title><rect x="141.4" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="144.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] :: shapeless.HNil] (id 3997) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,310 Î¼s, 0.03%)</title><rect x="738.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="741.72" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,205 Î¼s, 0.08%)</title><rect x="1039.1" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1042.05" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatePattern]{type Repr = V} (expanded macros 3)   (1,045 Î¼s, 0.03%)</title><rect x="594.7" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="597.74" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (646 Î¼s, 0.02%)</title><rect x="324.1" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="327.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7630) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (412 Î¼s, 0.01%)</title><rect x="1060.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1063.48" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,250 Î¼s, 0.08%)</title><rect x="1007.1" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1010.06" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] (expanded macros 0)  (1,015 Î¼s, 0.03%)</title><rect x="402.2" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="405.18" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (521 Î¼s, 0.01%)</title><rect x="1073.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.97" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,224 Î¼s, 0.03%)</title><rect x="568.5" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="571.47" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = Labels} (id 7086) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (394 Î¼s, 0.01%)</title><rect x="993.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="996.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Repr = R} (expanded macros 0)  (11,500 Î¼s, 0.29%)</title><rect x="468.8" y="213" width="3.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="471.75" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)]} (id 7369) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (414 Î¼s, 0.01%)</title><rect x="913.4" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="916.45" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (331 Î¼s, 0.01%)</title><rect x="1009.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1012.69" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,088 Î¼s, 0.18%)</title><rect x="1067.1" y="133" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1070.06" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (570 Î¼s, 0.01%)</title><rect x="996.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="999.88" y="191.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[[+O]fs2.Stream[[_]F[_],O]] (expanded macros 0)  (1,222 Î¼s, 0.03%)</title><rect x="280.3" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="283.34" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,574 Î¼s, 0.04%)</title><rect x="576.8" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="579.79" y="191.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[F] (expanded macros 0)  (807 Î¼s, 0.02%)</title><rect x="223.3" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="226.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.CommitId]{type Repr = V} (id 5521) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (727 Î¼s, 0.02%)</title><rect x="789.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.08" y="207.5" ></text>
</g>
<g >
<title>fs2.Stream[[x]fs2.Pure[x],org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]] =&gt; ?{def toList: ?} (expanded macros 0)  (1,188 Î¼s, 0.03%)</title><rect x="280.7" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="283.71" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (2,047 Î¼s, 0.05%)</title><rect x="296.6" y="229" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="299.56" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[Vector[String]] :: Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (19,755 Î¼s, 0.51%)</title><rect x="487.3" y="181" width="6.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="490.31" y="191.5" ></text>
</g>
<g >
<title>x$10.asString.type =&gt; ?{def === : ?} (expanded macros 0)  (826 Î¼s, 0.02%)</title><rect x="1180.2" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1183.15" y="255.5" ></text>
</g>
<g >
<title>SelfCheckAlg.this.logger.type =&gt; ?{def attemptWarn: ?} (expanded macros 0)  (556 Î¼s, 0.01%)</title><rect x="150.6" y="245" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="153.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (530 Î¼s, 0.01%)</title><rect x="1150.8" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1153.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Repr = V} (id 4636) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,745 Î¼s, 0.04%)</title><rect x="512.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="515.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]] (id 4032) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (24,919 Î¼s, 0.64%)</title><rect x="869.8" y="245" width="7.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="872.75" y="255.5" ></text>
</g>
<g >
<title>Int(5) =&gt; eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[shapeless._0]] (expanded macros 0)  (30,931 Î¼s, 0.79%)</title><rect x="130.8" y="245" width="9.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="133.82" y="255.5" ></text>
</g>
<g >
<title>F[(org.typelevel.log4cats.SelfAwareStructuredLogger[F], org.scalasteward.core.io.FileAlg[[_]F[_]], org.scalasteward.core.application.ValidateRepoConfigContext[[_]F[_]])] =&gt; ?{def map: ?} (expanded macros 0)  (498 Î¼s, 0.01%)</title><rect x="40.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="43.09" y="255.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.data.Version]] =&gt; ?{def map: ?} (expanded macros 0)  (465 Î¼s, 0.01%)</title><rect x="67.7" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="70.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,060 Î¼s, 0.03%)</title><rect x="755.4" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="758.43" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,703 Î¼s, 0.12%)</title><rect x="848.2" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="851.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7880) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (536 Î¼s, 0.01%)</title><rect x="1085.8" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1088.81" y="95.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.edit.scalafix.ScalafixMigrationsFinder] =&gt; ?{def map: ?} (expanded macros 0)  (1,176 Î¼s, 0.03%)</title><rect x="112.5" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="115.53" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7061) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (514 Î¼s, 0.01%)</title><rect x="994.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="997.43" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (1,660 Î¼s, 0.04%)</title><rect x="302.7" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="305.74" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (606 Î¼s, 0.02%)</title><rect x="251.6" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="254.62" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (445 Î¼s, 0.01%)</title><rect x="534.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="537.40" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (id 8719) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (652 Î¼s, 0.02%)</title><rect x="1159.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1162.43" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (1,714 Î¼s, 0.04%)</title><rect x="298.0" y="229" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="301.03" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (996 Î¼s, 0.03%)</title><rect x="392.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="395.34" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Int] (expanded macros 0)  (380 Î¼s, 0.01%)</title><rect x="274.2" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="277.22" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RepoCache]{type Repr = V} (id 6849) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (964 Î¼s, 0.02%)</title><rect x="581.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="584.29" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)]} (id 3933) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (351 Î¼s, 0.01%)</title><rect x="732.3" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="735.30" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,247 Î¼s, 0.21%)</title><rect x="1066.7" y="149" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1069.70" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]] (id 4781) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,336 Î¼s, 0.57%)</title><rect x="455.0" y="245" width="6.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="458.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],String] :: shapeless.HNil]] (id 3433) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,457 Î¼s, 0.04%)</title><rect x="860.0" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="863.04" y="223.5" ></text>
</g>
<g >
<title>ScalafixMigration.this.rewriteRules.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;, &quot;)): ?} (expanded macros 0)  (355 Î¼s, 0.01%)</title><rect x="149.9" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="152.90" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)],org.scalasteward.core.git.Sha1] :: List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)],List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)],Option[org.scalasteward.core.repoconfig.RepoConfig]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)],Option[String]] :: shapeless.HNil] (id 6861) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (17,732 Î¼s, 0.45%)</title><rect x="583.7" y="197" width="5.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="586.72" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Branches] (expanded macros 0)  (865 Î¼s, 0.02%)</title><rect x="314.1" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="317.12" y="255.5" ></text>
</g>
<g >
<title>info.type =&gt; ?{def map: ?} (expanded macros 0)  (833 Î¼s, 0.02%)</title><rect x="284.7" y="245" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="287.75" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)]} (id 2861) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (468 Î¼s, 0.01%)</title><rect x="1153.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.38" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Repr = V} (expanded macros 3)   (2,955 Î¼s, 0.08%)</title><rect x="484.7" y="197" width="0.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="487.73" y="207.5" ></text>
</g>
<g >
<title>cats.ApplicativeError[F,E] (expanded macros 0)  (343 Î¼s, 0.01%)</title><rect x="195.0" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="198.03" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)  (33,614 Î¼s, 0.86%)</title><rect x="981.9" y="165" width="10.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="984.88" y="175.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (11,313 Î¼s, 0.29%)</title><rect x="198.0" y="245" width="3.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="201.04" y="255.5" ></text>
</g>
<g >
<title>F[java.util.concurrent.Executor] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,186 Î¼s, 0.03%)</title><rect x="110.9" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="113.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)]} (id 2778) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (659 Î¼s, 0.02%)</title><rect x="724.6" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="727.60" y="111.5" ></text>
</g>
<g >
<title>user.type =&gt; ?{def map: ?} (expanded macros 0)  (2,636 Î¼s, 0.07%)</title><rect x="1175.2" y="245" width="0.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1178.22" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (8,289 Î¼s, 0.21%)</title><rect x="1075.7" y="213" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1078.70" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Out = K} (id 5467) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,619 Î¼s, 0.04%)</title><rect x="903.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="906.54" y="207.5" ></text>
</g>
<g >
<title>org.http4s.QueryParamKeyLike[String] (expanded macros 0)  (766 Î¼s, 0.02%)</title><rect x="337.5" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="340.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.bitbucketserver.Json.Project :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,701 Î¼s, 0.04%)</title><rect x="881.5" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="884.53" y="207.5" ></text>
</g>
<g >
<title>F[Option[V]] =&gt; ?{def map: ?} (expanded macros 0)  (783 Î¼s, 0.02%)</title><rect x="65.8" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="68.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil]] (id 5550) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,409 Î¼s, 0.06%)</title><rect x="762.1" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="765.06" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Scope[A]] (expanded macros 0)  (28,319 Î¼s, 0.73%)</title><rect x="411.8" y="229" width="8.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="414.82" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.RepoOut]{type Repr = V} (expanded macros 3)   (1,167 Î¼s, 0.03%)</title><rect x="772.4" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="775.37" y="207.5" ></text>
</g>
<g >
<title>F[Option[String]] =&gt; ?{def map: ?} (expanded macros 0)  (3,256 Î¼s, 0.08%)</title><rect x="64.6" y="245" width="1.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="67.63" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,String :: Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,849 Î¼s, 0.18%)</title><rect x="458.5" y="197" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="461.51" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Repo] (expanded macros 0)  (4,359 Î¼s, 0.11%)</title><rect x="238.5" y="245" width="1.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="241.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7452) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (984 Î¼s, 0.03%)</title><rect x="1028.5" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1031.47" y="159.5" ></text>
</g>
<g >
<title>F[scala.collection.mutable.ListBuffer[String]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (581 Î¼s, 0.01%)</title><rect x="128.5" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="131.48" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (id 8492) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (860 Î¼s, 0.02%)</title><rect x="916.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="919.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.ScalafmtConfig]] (id 8118) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,007 Î¼s, 0.44%)</title><rect x="1086.8" y="245" width="5.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1089.76" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] (expanded macros 0)  (627 Î¼s, 0.02%)</title><rect x="876.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="879.79" y="191.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.scalasteward.core.application.Cli.EnvVar] &lt;:&lt; cats.data.NonEmptyList[org.scalasteward.core.application.Cli.EnvVar] (expanded macros 0)  (2,541 Î¼s, 0.07%)</title><rect x="222.0" y="245" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="225.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7070) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (434 Î¼s, 0.01%)</title><rect x="995.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="998.43" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 5542) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (626 Î¼s, 0.02%)</title><rect x="760.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="763.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 5488) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (504 Î¼s, 0.01%)</title><rect x="905.8" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="908.84" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (5,107 Î¼s, 0.13%)</title><rect x="1019.1" y="213" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1022.13" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,org.scalasteward.core.data.CrossDependency :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (12,956 Î¼s, 0.33%)</title><rect x="607.8" y="197" width="3.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="610.80" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)]} (id 3650) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (362 Î¼s, 0.01%)</title><rect x="421.8" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="424.78" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (754 Î¼s, 0.02%)</title><rect x="1144.3" y="197" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1147.30" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Branches] =&gt; ?{def map: ?} (expanded macros 0)  (736 Î¼s, 0.02%)</title><rect x="114.6" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="117.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 5290) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (558 Î¼s, 0.01%)</title><rect x="893.9" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="896.90" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Repr = V} (expanded macros 3)   (1,394 Î¼s, 0.04%)</title><rect x="872.5" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="875.45" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Repr = V} (expanded macros 3)   (707 Î¼s, 0.02%)</title><rect x="895.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="898.86" y="207.5" ></text>
</g>
<g >
<title>x$1.sha1.type =&gt; ?{def === : ?} (expanded macros 0)  (1,244 Î¼s, 0.03%)</title><rect x="1178.0" y="245" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1180.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'a'} (id 6027) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (460 Î¼s, 0.01%)</title><rect x="307.0" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="310.00" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7651) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (524 Î¼s, 0.01%)</title><rect x="1067.9" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1070.92" y="95.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.Repository]] (id 5337) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,715 Î¼s, 0.17%)</title><rect x="782.8" y="245" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="785.79" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (1,773 Î¼s, 0.05%)</title><rect x="1187.4" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1190.40" y="239.5" ></text>
</g>
<g >
<title>this.runSpecificFiles.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (450 Î¼s, 0.01%)</title><rect x="1172.7" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1175.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Repr = V} (id 4787) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,634 Î¼s, 0.04%)</title><rect x="458.0" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="461.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.TokenOut]{type Repr = V} (expanded macros 3)   (1,193 Î¼s, 0.03%)</title><rect x="785.8" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="788.80" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)]} (id 2881) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (355 Î¼s, 0.01%)</title><rect x="1150.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1153.42" y="207.5" ></text>
</g>
<g >
<title>Double =&gt; Int (expanded macros 0)   (1,540 Î¼s, 0.04%)</title><rect x="28.8" y="245" width="0.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="31.78" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (1,124 Î¼s, 0.03%)</title><rect x="286.3" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="289.31" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.forge.bitbucket.Reviewer]] (expanded macros 0)  (1,041 Î¼s, 0.03%)</title><rect x="427.5" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="430.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,198 Î¼s, 0.08%)</title><rect x="465.9" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="468.86" y="191.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[cats.effect.IO] (expanded macros 0)  (12,492 Î¼s, 0.32%)</title><rect x="223.7" y="245" width="3.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="226.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.forge.data.PullRequestNumber]{type Repr = R :: shapeless.HNil}] (id 4372) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,422 Î¼s, 0.04%)</title><rect x="1147.8" y="213" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1150.80" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (366 Î¼s, 0.01%)</title><rect x="577.2" y="165" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="580.15" y="175.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (345 Î¼s, 0.01%)</title><rect x="1157.7" y="149" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.73" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,189 Î¼s, 0.03%)</title><rect x="774.3" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="777.31" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)]} (id 4737) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,083 Î¼s, 0.03%)</title><rect x="490.5" y="101" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="493.54" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)]} (id 1469) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (427 Î¼s, 0.01%)</title><rect x="398.4" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="401.42" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Repr = V} (id 3961) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (536 Î¼s, 0.01%)</title><rect x="735.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="738.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.VersionPattern]] (id 8464) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,444 Î¼s, 0.40%)</title><rect x="828.6" y="245" width="4.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="831.63" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (841 Î¼s, 0.02%)</title><rect x="322.3" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="325.33" y="255.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (1,119 Î¼s, 0.03%)</title><rect x="77.0" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="80.00" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (924 Î¼s, 0.02%)</title><rect x="466.6" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="469.55" y="175.5" ></text>
</g>
<g >
<title>String(&quot;\\p{javaLowerCase}\\p{javaUpperCase}&quot;) =&gt; ?{def r: ?} (expanded macros 0)  (703 Î¼s, 0.02%)</title><rect x="155.3" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="158.30" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, org.scalasteward.core.data.ArtifactId, org.scalasteward.core.data.Version, Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion], Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion], Option[String])] (expanded macros 0)  (1,341 Î¼s, 0.03%)</title><rect x="250.5" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="253.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Version]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (1,621 Î¼s, 0.04%)</title><rect x="1146.7" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1149.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7870) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (495 Î¼s, 0.01%)</title><rect x="1084.1" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1087.07" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (1,550 Î¼s, 0.04%)</title><rect x="296.7" y="213" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="299.71" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Header]{type Out = K} (id 1657) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (791 Î¼s, 0.02%)</title><rect x="408.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="411.14" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2437) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,566 Î¼s, 0.04%)</title><rect x="615.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="618.88" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (566 Î¼s, 0.01%)</title><rect x="501.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="504.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;uuid&quot;)],String] :: shapeless.HNil]] (id 3725) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,151 Î¼s, 0.06%)</title><rect x="429.4" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="432.38" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.ForgeType] (expanded macros 0)  (484 Î¼s, 0.01%)</title><rect x="240.9" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="243.91" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] (expanded macros 0)  (1,108 Î¼s, 0.03%)</title><rect x="914.2" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="917.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]] (id 4819) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,489 Î¼s, 0.58%)</title><rect x="473.1" y="245" width="6.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="476.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (807 Î¼s, 0.02%)</title><rect x="966.7" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="969.66" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil] (id 2313) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (8,952 Î¼s, 0.23%)</title><rect x="842.0" y="197" width="2.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="845.05" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (882 Î¼s, 0.02%)</title><rect x="997.4" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1000.38" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)]} (id 4829) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,375 Î¼s, 0.04%)</title><rect x="478.0" y="165" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="481.04" y="175.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.coursier.VersionsCache.Key,org.scalasteward.core.coursier.VersionsCache.Value]] =&gt; ?{def map: ?} (expanded macros 0)  (1,659 Î¼s, 0.04%)</title><rect x="122.6" y="245" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="125.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,355 Î¼s, 0.09%)</title><rect x="1124.9" y="149" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1127.90" y="159.5" ></text>
</g>
<g >
<title>F[(Long, scala.concurrent.duration.FiniteDuration)] =&gt; ?{def map: ?} (expanded macros 0)  (482 Î¼s, 0.01%)</title><rect x="34.0" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="36.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: shapeless.HNil]] (id 5263) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,896 Î¼s, 0.05%)</title><rect x="891.5" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="894.53" y="223.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[String], com.monovore.decline.Opts[String], com.monovore.decline.Opts[Option[String]])) =&gt; ?{def mapN: ?} (expanded macros 0)  (653 Î¼s, 0.02%)</title><rect x="16.3" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="19.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)]} (id 4435) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (350 Î¼s, 0.01%)</title><rect x="773.7" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="776.75" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1723) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (401 Î¼s, 0.01%)</title><rect x="963.7" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="966.72" y="95.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8347) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (980 Î¼s, 0.03%)</title><rect x="1131.5" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1134.53" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)]} (id 4433) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (437 Î¼s, 0.01%)</title><rect x="774.2" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="777.18" y="127.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 2162) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,010 Î¼s, 0.03%)</title><rect x="927.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="930.23" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2300) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,082 Î¼s, 0.05%)</title><rect x="835.9" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="838.90" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (675 Î¼s, 0.02%)</title><rect x="257.0" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="259.97" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (5,146 Î¼s, 0.13%)</title><rect x="1051.1" y="149" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1054.08" y="159.5" ></text>
</g>
<g >
<title>all (3,904,090 Î¼s, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(110,255,110)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (901 Î¼s, 0.02%)</title><rect x="732.4" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="735.40" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1722) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (606 Î¼s, 0.02%)</title><rect x="964.0" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="966.95" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,553 Î¼s, 0.07%)</title><rect x="747.7" y="165" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="750.71" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: shapeless.HNil]] (id 4688) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,849 Î¼s, 0.18%)</title><rect x="532.8" y="213" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="535.77" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1961) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (765 Î¼s, 0.02%)</title><rect x="985.1" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="988.11" y="143.5" ></text>
</g>
<g >
<title>d.groupId.value.type =&gt; ?{def === : ?} (expanded macros 0)  (404 Î¼s, 0.01%)</title><rect x="263.2" y="245" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="266.17" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8329) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (965 Î¼s, 0.02%)</title><rect x="1097.8" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1100.76" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)]} (id 6855) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (688 Î¼s, 0.02%)</title><rect x="583.2" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="586.24" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,String :: Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (10,296 Î¼s, 0.26%)</title><rect x="854.3" y="197" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="857.33" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,162 Î¼s, 0.11%)</title><rect x="1006.8" y="197" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1009.79" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)   (1,107 Î¼s, 0.03%)</title><rect x="570.6" y="149" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="573.61" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (531 Î¼s, 0.01%)</title><rect x="1074.6" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.57" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 2170) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (997 Î¼s, 0.03%)</title><rect x="927.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="930.54" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (393 Î¼s, 0.01%)</title><rect x="862.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="865.44" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1891) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (358 Î¼s, 0.01%)</title><rect x="949.1" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="952.14" y="111.5" ></text>
</g>
<g >
<title>x.updates.type =&gt; ?{def |+| : ?} (expanded macros 0)  (416 Î¼s, 0.01%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1192.82" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Update] (expanded macros 0)   (562 Î¼s, 0.01%)</title><rect x="568.3" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="571.27" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 2062) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,259 Î¼s, 0.03%)</title><rect x="973.3" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="976.27" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (964 Î¼s, 0.02%)</title><rect x="734.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="737.08" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)]} (id 1468) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (609 Î¼s, 0.02%)</title><rect x="398.6" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="401.65" y="111.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Dependency] (expanded macros 0)  (526 Î¼s, 0.01%)</title><rect x="237.0" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="240.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (568 Î¼s, 0.01%)</title><rect x="955.3" y="85" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="958.33" y="95.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Comment] =&gt; ?{def map: ?} (expanded macros 0)  (763 Î¼s, 0.02%)</title><rect x="114.9" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="117.86" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Scope[A]]{type Repr = V} (expanded macros 3)   (2,166 Î¼s, 0.06%)</title><rect x="413.7" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="416.73" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.UserOut] (expanded macros 0)  (4,982 Î¼s, 0.13%)</title><rect x="776.7" y="229" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="779.70" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil]] (id 2365) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,248 Î¼s, 0.24%)</title><rect x="611.7" y="213" width="2.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="614.72" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UserOut]{type Repr = V} (id 4492) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (454 Î¼s, 0.01%)</title><rect x="777.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="780.38" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[String] (expanded macros 0)  (359 Î¼s, 0.01%)</title><rect x="192.2" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="195.22" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.UpdatePattern]] (expanded macros 0)  (1,449 Î¼s, 0.04%)</title><rect x="1121.9" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1124.88" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]] (expanded macros 0)  (16,434 Î¼s, 0.42%)</title><rect x="303.3" y="229" width="5.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="306.31" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7648) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (664 Î¼s, 0.02%)</title><rect x="1068.9" y="37" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1071.87" y="47.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (974 Î¼s, 0.02%)</title><rect x="943.3" y="133" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="946.26" y="143.5" ></text>
</g>
<g >
<title>List[(String, String)] =&gt; ?{def foldMap: ?} (expanded macros 0)  (433 Î¼s, 0.01%)</title><rect x="140.2" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="143.23" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Out = K} (id 4017) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (593 Î¼s, 0.02%)</title><rect x="742.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="745.25" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (572 Î¼s, 0.01%)</title><rect x="569.4" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="572.41" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,129 Î¼s, 0.05%)</title><rect x="1014.6" y="165" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.58" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (6,698 Î¼s, 0.17%)</title><rect x="1050.9" y="181" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1053.90" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Repr = R} (expanded macros 0)  (5,138 Î¼s, 0.13%)</title><rect x="589.8" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="592.84" y="223.5" ></text>
</g>
<g >
<title>F[Option[scala.concurrent.duration.FiniteDuration]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (590 Î¼s, 0.02%)</title><rect x="69.9" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="72.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.UserOut]{type Repr = R} (expanded macros 0)  (3,338 Î¼s, 0.09%)</title><rect x="776.8" y="213" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="779.76" y="223.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.bitbucket.RepositoryResponse] (expanded macros 0)   (382 Î¼s, 0.01%)</title><rect x="313.7" y="229" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="316.72" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, String, org.scalasteward.core.data.Version, cats.data.NonEmptyList[org.scalasteward.core.data.Version])] (expanded macros 0)  (1,871 Î¼s, 0.05%)</title><rect x="250.0" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.98" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Repr = V} (expanded macros 3)   (2,391 Î¼s, 0.06%)</title><rect x="538.9" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="541.92" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Out = K} (id 4078) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (547 Î¼s, 0.01%)</title><rect x="751.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="754.95" y="207.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]], Seq[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (630 Î¼s, 0.02%)</title><rect x="33.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="36.23" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ProjectId]{type Repr = V} (id 5454) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (687 Î¼s, 0.02%)</title><rect x="792.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.04" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8250) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (996 Î¼s, 0.03%)</title><rect x="1108.8" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1111.83" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (829 Î¼s, 0.02%)</title><rect x="758.4" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="761.42" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Vector[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Vector[Int]] :: shapeless.HNil] (id 4848) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,863 Î¼s, 0.10%)</title><rect x="447.7" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="450.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.RepoConfig] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,192 Î¼s, 0.08%)</title><rect x="582.6" y="165" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="585.61" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 4322) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,901 Î¼s, 0.05%)</title><rect x="765.3" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="768.33" y="207.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;\n&quot;), x$2: ? &gt;: String(&quot;\n&quot;), x$3: ? &gt;: String(&quot;\n&quot;)): ?} (expanded macros 0)  (340 Î¼s, 0.01%)</title><rect x="140.9" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="143.95" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (1,899 Î¼s, 0.05%)</title><rect x="316.8" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="319.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (id 7460) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,458 Î¼s, 0.04%)</title><rect x="1031.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1034.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Repr = R} (expanded macros 0)  (14,861 Î¼s, 0.38%)</title><rect x="502.9" y="213" width="4.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="505.90" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (713 Î¼s, 0.02%)</title><rect x="1165.1" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1168.11" y="175.5" ></text>
</g>
<g >
<title>v.type =&gt; ?{def &lt; : ?} (expanded macros 0)  (520 Î¼s, 0.01%)</title><rect x="1176.4" y="245" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1179.43" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.update.artifact.ArtifactChange]] (expanded macros 0)  (1,111 Î¼s, 0.03%)</title><rect x="1169.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1172.91" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7627) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (465 Î¼s, 0.01%)</title><rect x="1061.6" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1064.56" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (10,563 Î¼s, 0.27%)</title><rect x="407.7" y="229" width="3.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="410.74" y="239.5" ></text>
</g>
<g >
<title>names.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;(&quot;), x$2: ? &gt;: String(&quot;, &quot;), x$3: ? &gt;: String(&quot;)&quot;)): ?} (expanded macros 0)  (414 Î¼s, 0.01%)</title><rect x="333.7" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="336.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (id 8835) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (466 Î¼s, 0.01%)</title><rect x="1168.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1171.32" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (672 Î¼s, 0.02%)</title><rect x="1036.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1039.87" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[org.scalasteward.core.data.Scope] (expanded macros 0)  (768 Î¼s, 0.02%)</title><rect x="1185.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1188.72" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (expanded macros 3)   (1,656 Î¼s, 0.04%)</title><rect x="616.8" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="619.77" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (491 Î¼s, 0.01%)</title><rect x="1146.1" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1149.12" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7331) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (671 Î¼s, 0.02%)</title><rect x="825.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="828.63" y="207.5" ></text>
</g>
<g >
<title>update.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (437 Î¼s, 0.01%)</title><rect x="1174.2" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1177.24" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8271) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (940 Î¼s, 0.02%)</title><rect x="1114.1" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1117.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2351) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,859 Î¼s, 0.05%)</title><rect x="600.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="603.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,253 Î¼s, 0.26%)</title><rect x="1115.1" y="165" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1118.07" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.Comment] (expanded macros 0)  (1,408 Î¼s, 0.04%)</title><rect x="328.0" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="330.96" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (730 Î¼s, 0.02%)</title><rect x="402.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="405.70" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.ArtifactId]{type Out = K} (id 1384) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (800 Î¼s, 0.02%)</title><rect x="383.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="386.45" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = N} (expanded macros 0)  (469 Î¼s, 0.01%)</title><rect x="273.6" y="181" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="276.61" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] (expanded macros 0)  (506 Î¼s, 0.01%)</title><rect x="301.8" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="304.78" y="255.5" ></text>
</g>
<g >
<title>x$23.updates.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (422 Î¼s, 0.01%)</title><rect x="1183.1" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1186.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,863 Î¼s, 0.05%)</title><rect x="1041.9" y="165" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1044.95" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (830 Î¼s, 0.02%)</title><rect x="777.5" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="780.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (2,350 Î¼s, 0.06%)</title><rect x="1015.9" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubLabels]] (id 5281) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,805 Î¼s, 0.23%)</title><rect x="892.1" y="245" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="895.11" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7536) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,000 Î¼s, 0.03%)</title><rect x="1019.4" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1022.43" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = D} (expanded macros 0)  (9,554 Î¼s, 0.24%)</title><rect x="1021.1" y="213" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1024.10" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (721 Î¼s, 0.02%)</title><rect x="253.4" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.RepoOut]{type Repr = V} (id 4424) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,223 Î¼s, 0.03%)</title><rect x="772.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="775.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (1,099 Î¼s, 0.03%)</title><rect x="272.1" y="213" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="275.13" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.Reviewer] (expanded macros 0)  (702 Î¼s, 0.02%)</title><rect x="427.3" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="430.28" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PostUpdateHookConfig] (expanded macros 0)  (547 Î¼s, 0.01%)</title><rect x="1074.4" y="149" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.35" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 5460) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,254 Î¼s, 0.03%)</title><rect x="792.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.82" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Repr = R} (expanded macros 0)  (5,016 Î¼s, 0.13%)</title><rect x="877.8" y="213" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="880.82" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1708) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (783 Î¼s, 0.02%)</title><rect x="960.7" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="963.65" y="95.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (652 Î¼s, 0.02%)</title><rect x="946.2" y="101" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="949.18" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,435 Î¼s, 0.06%)</title><rect x="1077.5" y="101" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1080.47" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (596 Î¼s, 0.02%)</title><rect x="586.4" y="133" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="589.37" y="143.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)   (513 Î¼s, 0.01%)</title><rect x="1122.1" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1125.14" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1958) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (340 Î¼s, 0.01%)</title><rect x="984.2" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="987.23" y="127.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]{type R = RB} (expanded macros 0)  (2,435 Î¼s, 0.06%)</title><rect x="304.2" y="165" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="307.23" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Out = K} (id 3960) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (389 Î¼s, 0.01%)</title><rect x="735.3" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="738.32" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.RepositoriesOut]{type Repr = V} (id 5320) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (441 Î¼s, 0.01%)</title><rect x="781.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="784.58" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Link]] (id 4014) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,432 Î¼s, 0.27%)</title><rect x="741.3" y="245" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="744.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (1,160 Î¼s, 0.03%)</title><rect x="1157.5" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.48" y="207.5" ></text>
</g>
<g >
<title>cats.Contravariant[cats.kernel.Order] (expanded macros 0)  (567 Î¼s, 0.01%)</title><rect x="253.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.20" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil,List[org.scalasteward.core.update.artifact.ArtifactChange] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (722 Î¼s, 0.02%)</title><rect x="1169.2" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1172.25" y="207.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.coursier.DependencyMetadata] =&gt; ?{def traverse: ?} (expanded macros 0)  (434 Î¼s, 0.01%)</title><rect x="142.5" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="145.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: shapeless.HNil]] (id 4475) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,391 Î¼s, 0.06%)</title><rect x="884.5" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="887.49" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)]} (id 5481) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (579 Î¼s, 0.01%)</title><rect x="908.5" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="911.49" y="63.5" ></text>
</g>
<g >
<title>EditAlg.this.logger.type =&gt; ?{def attemptWarn: ?} (expanded macros 0)  (363 Î¼s, 0.01%)</title><rect x="29.3" y="245" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="32.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2487) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,882 Î¼s, 0.10%)</title><rect x="627.1" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="630.12" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (865 Î¼s, 0.02%)</title><rect x="768.7" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="771.72" y="159.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]]{type R = RA} (expanded macros 0)  (8,480 Î¼s, 0.22%)</title><rect x="267.1" y="213" width="2.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="270.12" y="223.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Scope[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (1,205 Î¼s, 0.03%)</title><rect x="147.2" y="245" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="150.19" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Long] (expanded macros 0)  (488 Î¼s, 0.01%)</title><rect x="461.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="464.34" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Repr = V} (expanded macros 3)   (753 Î¼s, 0.02%)</title><rect x="754.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="757.67" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (528 Î¼s, 0.01%)</title><rect x="276.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="279.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = Options} (id 7239) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (868 Î¼s, 0.02%)</title><rect x="1002.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1005.14" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Update.ForArtifactId]] =&gt; ?{def map: ?} (expanded macros 0)  (2,425 Î¼s, 0.06%)</title><rect x="54.3" y="245" width="0.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="57.30" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Repr = V} (id 4193) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (658 Î¼s, 0.02%)</title><rect x="881.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="884.33" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)]} (id 4434) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (364 Î¼s, 0.01%)</title><rect x="774.0" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="776.97" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Repo] (expanded macros 0)  (8,127 Î¼s, 0.21%)</title><rect x="754.1" y="229" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="757.06" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[40,Int] (expanded macros 0)  (1,436 Î¼s, 0.04%)</title><rect x="307.8" y="181" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.84" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 5261) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (387 Î¼s, 0.01%)</title><rect x="891.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="894.37" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (597 Î¼s, 0.02%)</title><rect x="844.0" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="846.97" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (676 Î¼s, 0.02%)</title><rect x="729.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="732.50" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (4,320 Î¼s, 0.11%)</title><rect x="1051.2" y="133" width="1.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1054.18" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = R} (expanded macros 0)   (20,569 Î¼s, 0.53%)</title><rect x="1057.7" y="213" width="6.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1060.65" y="223.5" ></text>
</g>
<g >
<title>cats.MonadError[F,Throwable] (expanded macros 0)  (3,016 Î¼s, 0.08%)</title><rect x="213.5" y="245" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="216.53" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.git.Branch]] (expanded macros 0)  (2,039 Î¼s, 0.05%)</title><rect x="567.5" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="570.47" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)]} (id 4684) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,263 Î¼s, 0.03%)</title><rect x="529.8" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="532.84" y="159.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.git.Branch, (List[org.scalasteward.core.data.Update.Grouped], List[org.scalasteward.core.data.Update.ForArtifactId]), List[Product with org.scalasteward.core.data.Update with java.io.Serializable])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (501 Î¼s, 0.01%)</title><rect x="39.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="42.08" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,407 Î¼s, 0.04%)</title><rect x="241.1" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="244.06" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,305 Î¼s, 0.08%)</title><rect x="1110.5" y="117" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1113.46" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 5375) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (364 Î¼s, 0.01%)</title><rect x="896.5" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="899.54" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: shapeless.HNil] (id 4147) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (1,874 Î¼s, 0.05%)</title><rect x="434.4" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="437.42" y="207.5" ></text>
</g>
<g >
<title>Either[io.circe.Error,org.scalasteward.core.buildtool.mill.Modules] =&gt; ?{def leftMap: ?} (expanded macros 0)  (2,186 Î¼s, 0.06%)</title><rect x="30.3" y="245" width="0.7" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="33.30" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (expanded macros 3)   (1,821 Î¼s, 0.05%)</title><rect x="622.6" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="625.61" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)  (1,410 Î¼s, 0.04%)</title><rect x="321.4" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="324.40" y="255.5" ></text>
</g>
<g >
<title>F[io.circe.Json] =&gt; ?{def flatMap: ?} (expanded macros 0)  (442 Î¼s, 0.01%)</title><rect x="110.2" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="113.16" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CommentContent]{type Out = K} (id 3646) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (344 Î¼s, 0.01%)</title><rect x="421.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="424.24" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (7,374 Î¼s, 0.19%)</title><rect x="1080.8" y="133" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1083.81" y="143.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.coursier.VersionsCache.Value]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (740 Î¼s, 0.02%)</title><rect x="67.0" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="70.02" y="255.5" ></text>
</g>
<g >
<title>dependenciesWithNextVersion.type =&gt; ?{def traverse: ?} (expanded macros 0)  (509 Î¼s, 0.01%)</title><rect x="264.3" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="267.29" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestFrequency] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (9,427 Î¼s, 0.24%)</title><rect x="1031.5" y="197" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1034.53" y="207.5" ></text>
</g>
<g >
<title>maybeRepoConfig.type =&gt; ?{def |+| : ?} (expanded macros 0)  (1,002 Î¼s, 0.03%)</title><rect x="332.1" y="245" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="335.13" y="255.5" ></text>
</g>
<g >
<title>from.patch.type =&gt; ?{def =!= : ?} (expanded macros 0)  (814 Î¼s, 0.02%)</title><rect x="277.0" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="280.01" y="255.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (482 Î¼s, 0.01%)</title><rect x="272.0" y="213" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="274.99" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil] (id 5551) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,100 Î¼s, 0.05%)</title><rect x="762.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="765.16" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] (expanded macros 0)  (6,911 Î¼s, 0.18%)</title><rect x="584.6" y="181" width="2.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="587.60" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7872) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (527 Î¼s, 0.01%)</title><rect x="1084.4" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1087.40" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,986 Î¼s, 0.20%)</title><rect x="490.9" y="101" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="493.87" y="111.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Branch] =&gt; ?{def flatMap: ?} (expanded macros 0)  (384 Î¼s, 0.01%)</title><rect x="121.5" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="124.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,700 Î¼s, 0.07%)</title><rect x="1159.6" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1162.63" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.TokenOut] (expanded macros 0)  (6,073 Î¼s, 0.16%)</title><rect x="785.3" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="788.25" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (526 Î¼s, 0.01%)</title><rect x="392.2" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="395.18" y="175.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7100) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (399 Î¼s, 0.01%)</title><rect x="993.3" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="996.34" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Repr = R} (expanded macros 0)  (7,398 Î¼s, 0.19%)</title><rect x="575.0" y="213" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="578.03" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (1,168 Î¼s, 0.03%)</title><rect x="1037.2" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1040.16" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]] (id 4520) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (21,138 Î¼s, 0.54%)</title><rect x="548.9" y="245" width="6.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="551.88" y="255.5" ></text>
</g>
<g >
<title>F[Option[String]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,007 Î¼s, 0.05%)</title><rect x="64.0" y="245" width="0.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="67.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2353) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (19,495 Î¼s, 0.50%)</title><rect x="600.6" y="197" width="5.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="603.64" y="207.5" ></text>
</g>
<g >
<title>recurse.type =&gt; ?{def &gt;&gt; : ?} (expanded macros 0)  (582 Î¼s, 0.01%)</title><rect x="350.2" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="353.22" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)]} (id 8740) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (489 Î¼s, 0.01%)</title><rect x="1161.9" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1164.93" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = Options} (id 2876) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (665 Î¼s, 0.02%)</title><rect x="1151.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1154.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = Options} (id 8145) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (448 Î¼s, 0.01%)</title><rect x="1088.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1091.43" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.InstallationOut]{type Repr = R} (expanded macros 0)  (3,862 Î¼s, 0.10%)</title><rect x="778.8" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="781.78" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] (id 7166) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (61,816 Î¼s, 1.58%)</title><rect x="997.9" y="245" width="18.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1000.88" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (1,490 Î¼s, 0.04%)</title><rect x="302.3" y="229" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="305.29" y="239.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[better.files.File], com.monovore.decline.Opts[cats.data.NonEmptyList[org.http4s.Uri]], com.monovore.decline.Opts[org.scalasteward.core.application.Config.GitCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ForgeCfg], com.monovore.decline.Opts[Boolean], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ProcessCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.RepoConfigCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ScalafixCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ArtifactCfg], com.monovore.decline.Opts[scala.concurrent.duration.FiniteDuration], com.monovore.decline.Opts[org.scalasteward.core.application.Config.BitbucketCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.BitbucketServerCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.GitLabCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.AzureReposCfg], com.monovore.decline.Opts[Option[org.scalasteward.core.forge.github.GitHubApp]], com.monovore.decline.Opts[cats.data.NonEmptyList[org.http4s.Uri]], com.monovore.decline.Opts[org.scalasteward.core.data.Resolver], com.monovore.decline.Opts[scala.concurrent.duration.FiniteDuration])) =&gt; ?{def mapN: ?} (expanded macros 0)  (1,389 Î¼s, 0.04%)</title><rect x="16.5" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="19.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Repr = R} (expanded macros 0)  (13,132 Î¼s, 0.34%)</title><rect x="443.5" y="213" width="4.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="446.53" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (1,260 Î¼s, 0.03%)</title><rect x="233.8" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="236.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,438 Î¼s, 0.24%)</title><rect x="1066.3" y="165" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1069.34" y="175.5" ></text>
</g>
<g >
<title>F[(Unit, String, String, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (457 Î¼s, 0.01%)</title><rect x="36.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="39.07" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[T,eu.timepit.refined.char.Digit]{type R = RA} (expanded macros 0)  (366 Î¼s, 0.01%)</title><rect x="269.6" y="181" width="0.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="272.57" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'f'} (id 6033) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (495 Î¼s, 0.01%)</title><rect x="304.6" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="307.64" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[N] (expanded macros 3)   (560 Î¼s, 0.01%)</title><rect x="273.7" y="181" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="276.75" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Boolean] (expanded macros 0)  (430 Î¼s, 0.01%)</title><rect x="775.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="778.54" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[A,eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]{type R = R} (expanded macros 0)  (11,971 Î¼s, 0.31%)</title><rect x="303.8" y="197" width="3.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="306.75" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (580 Î¼s, 0.01%)</title><rect x="587.8" y="133" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="590.83" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Out = K} (id 4544) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,027 Î¼s, 0.05%)</title><rect x="538.3" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="541.31" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Repr = V} (id 4842) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,669 Î¼s, 0.04%)</title><rect x="445.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="448.66" y="207.5" ></text>
</g>
<g >
<title>x.reviewers.type =&gt; ?{def |+| : ?} (expanded macros 0)  (517 Î¼s, 0.01%)</title><rect x="1189.4" y="245" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1192.44" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PostUpdateHookConfig] (expanded macros 0)  (53,927 Î¼s, 1.38%)</title><rect x="1000.3" y="229" width="16.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1003.27" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.NewPR] (expanded macros 0)  (20,428 Î¼s, 0.52%)</title><rect x="871.1" y="229" width="6.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="874.11" y="239.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Resolver] (expanded macros 0)   (623 Î¼s, 0.02%)</title><rect x="310.6" y="229" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="313.61" y="239.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.EditAttempt]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,277 Î¼s, 0.03%)</title><rect x="55.8" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="58.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (982 Î¼s, 0.03%)</title><rect x="991.7" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="994.75" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.CommitId]{type Repr = V} (expanded macros 3)   (2,488 Î¼s, 0.06%)</title><rect x="788.3" y="197" width="0.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="791.33" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Repr = V} (id 6578) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,246 Î¼s, 0.06%)</title><rect x="559.9" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="562.87" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 1848) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (352 Î¼s, 0.01%)</title><rect x="944.2" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="947.23" y="111.5" ></text>
</g>
<g >
<title>cats.Foldable[org.scalasteward.core.util.Nel] (expanded macros 0)  (534 Î¼s, 0.01%)</title><rect x="150.5" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="153.49" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Repr = R} (expanded macros 0)  (5,090 Î¼s, 0.13%)</title><rect x="863.1" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="866.12" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.ScalafmtConfig] :: Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (5,692 Î¼s, 0.15%)</title><rect x="1054.5" y="165" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.55" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.PullRequestOut]{type Repr = R} (expanded macros 0)  (7,011 Î¼s, 0.18%)</title><rect x="766.9" y="213" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="769.87" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,576 Î¼s, 0.04%)</title><rect x="966.4" y="117" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="969.43" y="127.5" ></text>
</g>
<g >
<title>dependencies.type =&gt; ?{def traverse: ?} (expanded macros 0)  (507 Î¼s, 0.01%)</title><rect x="264.0" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="267.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (791 Î¼s, 0.02%)</title><rect x="1121.5" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1124.47" y="111.5" ></text>
</g>
<g >
<title>up.version.type =&gt; ?{def === : ?} (expanded macros 0)  (1,939 Î¼s, 0.05%)</title><rect x="1173.4" y="245" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1176.39" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,619 Î¼s, 0.04%)</title><rect x="792.2" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="795.25" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.util.Timestamp]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (664 Î¼s, 0.02%)</title><rect x="1148.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1151.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (expanded macros 3)   (939 Î¼s, 0.02%)</title><rect x="826.0" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="829.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.Reviewer]{type Out = K} (id 3717) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (456 Î¼s, 0.01%)</title><rect x="428.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="431.55" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] (expanded macros 0)  (347 Î¼s, 0.01%)</title><rect x="132.3" y="229" width="0.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="135.26" y="239.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8382) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,427 Î¼s, 0.04%)</title><rect x="1098.4" y="213" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1101.40" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (591 Î¼s, 0.02%)</title><rect x="918.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="921.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 5540) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (733 Î¼s, 0.02%)</title><rect x="760.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="763.39" y="207.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil &lt;:&lt; (List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil) (expanded macros 0)  (342 Î¼s, 0.01%)</title><rect x="1103.9" y="197" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1106.94" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (2,556 Î¼s, 0.07%)</title><rect x="1019.3" y="181" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1022.27" y="191.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.edit.EditAttempt], List[org.scalasteward.core.git.Commit])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (619 Î¼s, 0.02%)</title><rect x="33.4" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="36.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,540 Î¼s, 0.07%)</title><rect x="1004.8" y="165" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1007.82" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (1,363 Î¼s, 0.03%)</title><rect x="614.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="617.10" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;fileExtensions&quot;) with String(&quot;limit&quot;) with String(&quot;ignore&quot;) &lt;: String],Lub0] (expanded macros 0)  (501 Î¼s, 0.01%)</title><rect x="1127.7" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1130.72" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;href&quot;)],org.http4s.Uri] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: shapeless.HNil] (id 4028) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,735 Î¼s, 0.04%)</title><rect x="743.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="746.91" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (702 Î¼s, 0.02%)</title><rect x="1001.7" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.72" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],org.scalasteward.core.forge.bitbucket.CommentContent] :: shapeless.HNil]] (id 3635) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,691 Î¼s, 0.04%)</title><rect x="424.4" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="427.36" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)],Option[org.scalasteward.core.data.GroupId]] :: org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (id 8746) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (4,084 Î¼s, 0.10%)</title><rect x="1162.2" y="197" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1165.25" y="207.5" ></text>
</g>
<g >
<title>cats.Foldable[List] (expanded macros 0)  (2,858 Î¼s, 0.07%)</title><rect x="203.7" y="245" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="206.70" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)]} (id 7090) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (339 Î¼s, 0.01%)</title><rect x="993.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="996.24" y="207.5" ></text>
</g>
<g >
<title>Option[String] =&gt; ?{def orEmpty: ?} (expanded macros 0)  (795 Î¼s, 0.02%)</title><rect x="144.7" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="147.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,088 Î¼s, 0.21%)</title><rect x="1011.1" y="197" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1014.12" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (384 Î¼s, 0.01%)</title><rect x="869.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="872.63" y="191.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (392 Î¼s, 0.01%)</title><rect x="72.9" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="75.93" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,305 Î¼s, 0.03%)</title><rect x="917.6" y="149" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="920.65" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RepoCache]{type Out = K} (id 6848) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (940 Î¼s, 0.02%)</title><rect x="580.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="583.62" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Branch] =&gt; ?{def map: ?} (expanded macros 0)  (1,339 Î¼s, 0.03%)</title><rect x="121.6" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="124.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (6,612 Î¼s, 0.17%)</title><rect x="1123.9" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1126.92" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.GroupId] (expanded macros 0)   (602 Î¼s, 0.02%)</title><rect x="613.3" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="616.33" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (699 Î¼s, 0.02%)</title><rect x="402.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="405.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (4,240 Î¼s, 0.11%)</title><rect x="1100.6" y="149" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1103.58" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,597 Î¼s, 0.04%)</title><rect x="1039.5" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1042.54" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8341) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (955 Î¼s, 0.02%)</title><rect x="1130.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1133.16" y="207.5" ></text>
</g>
<g >
<title>StewardAlg.this.logger.type =&gt; ?{def infoTotalTime: ?} (expanded macros 0)  (450 Î¼s, 0.01%)</title><rect x="151.4" y="245" width="0.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="154.39" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (614 Î¼s, 0.02%)</title><rect x="249.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.62" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (16,429 Î¼s, 0.42%)</title><rect x="992.9" y="229" width="5.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="995.92" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] (expanded macros 0)  (967 Î¼s, 0.02%)</title><rect x="400.5" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="403.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)]} (id 8186) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (428 Î¼s, 0.01%)</title><rect x="595.8" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="598.83" y="175.5" ></text>
</g>
<g >
<title>F[(better.files.File, org.http4s.Uri.UserInfo, String, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (533 Î¼s, 0.01%)</title><rect x="37.8" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="40.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Ref]] (id 4150) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,571 Î¼s, 0.22%)</title><rect x="877.3" y="245" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="880.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8467) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (936 Î¼s, 0.02%)</title><rect x="829.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="832.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;customLabels&quot;) with String(&quot;includeMatchedLabels&quot;) &lt;: String],Lub0] (expanded macros 0)  (514 Î¼s, 0.01%)</title><rect x="1041.1" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1044.12" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestNumber] (id 4374) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (405 Î¼s, 0.01%)</title><rect x="1147.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1150.88" y="207.5" ></text>
</g>
<g >
<title>x$1.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (2,326 Î¼s, 0.06%)</title><rect x="1177.0" y="245" width="0.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1179.96" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 1728) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (5,324 Î¼s, 0.14%)</title><rect x="964.4" y="133" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="967.37" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.UpdatesConfig] (expanded macros 0)  (124,476 Î¼s, 3.19%)</title><rect x="1095.2" y="229" width="37.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1098.18" y="239.5" >io...</text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)]} (id 2360) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,550 Î¼s, 0.04%)</title><rect x="610.9" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="613.91" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (1,384 Î¼s, 0.04%)</title><rect x="567.1" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="570.05" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.ForgeType] (expanded macros 0)  (589 Î¼s, 0.02%)</title><rect x="129.3" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="132.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (4,306 Î¼s, 0.11%)</title><rect x="979.2" y="149" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.24" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = Labels} (id 7523) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,278 Î¼s, 0.03%)</title><rect x="1023.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1026.14" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForGroupId]] (id 2398) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,391 Î¼s, 0.47%)</title><rect x="844.8" y="245" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="847.76" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (703 Î¼s, 0.02%)</title><rect x="256.5" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="259.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)]} (id 4084) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (367 Î¼s, 0.01%)</title><rect x="752.8" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="755.83" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5309) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (373 Î¼s, 0.01%)</title><rect x="779.8" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="782.78" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)]} (id 4056) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (390 Î¼s, 0.01%)</title><rect x="873.9" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="876.85" y="175.5" ></text>
</g>
<g >
<title>ScalafixMigration.this.rewriteRules.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,326 Î¼s, 0.03%)</title><rect x="150.0" y="245" width="0.4" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="153.00" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (1,268 Î¼s, 0.03%)</title><rect x="1036.0" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1038.98" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[Int]] (expanded macros 0)  (401 Î¼s, 0.01%)</title><rect x="910.4" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="913.45" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (12,316 Î¼s, 0.32%)</title><rect x="1083.0" y="213" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1086.04" y="223.5" ></text>
</g>
<g >
<title>F[org.http4s.Status] =&gt; ?{def map: ?} (expanded macros 0)  (532 Î¼s, 0.01%)</title><rect x="111.5" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="114.50" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7621) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (647 Î¼s, 0.02%)</title><rect x="1063.6" y="37" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1066.55" y="47.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = Labels} (id 7240) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (699 Î¼s, 0.02%)</title><rect x="1001.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1004.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.CommitOut]{type Repr = R} (expanded macros 0)  (4,157 Î¼s, 0.11%)</title><rect x="764.0" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="766.98" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (710 Î¼s, 0.02%)</title><rect x="889.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="892.58" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Repr = V} (expanded macros 3)   (702 Î¼s, 0.02%)</title><rect x="438.2" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="441.23" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (783 Î¼s, 0.02%)</title><rect x="997.6" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1000.65" y="223.5" ></text>
</g>
<g >
<title>cats.Foldable[F] (expanded macros 0)   (875 Î¼s, 0.02%)</title><rect x="335.8" y="229" width="0.3" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="338.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Out = K} (id 4170) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (538 Î¼s, 0.01%)</title><rect x="754.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="757.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (853 Î¼s, 0.02%)</title><rect x="940.1" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="943.10" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil]] (id 7471) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (12,122 Î¼s, 0.31%)</title><rect x="1034.4" y="213" width="3.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1037.38" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Out = K} (id 7108) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (557 Î¼s, 0.01%)</title><rect x="590.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="593.06" y="207.5" ></text>
</g>
<g >
<title>cats.Foldable[Option] (expanded macros 0)  (422 Î¼s, 0.01%)</title><rect x="204.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="207.56" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (1,767 Î¼s, 0.05%)</title><rect x="585.7" y="149" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="588.69" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,String :: Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,116 Î¼s, 0.08%)</title><rect x="826.5" y="197" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="829.54" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Int] (expanded macros 0)  (513 Î¼s, 0.01%)</title><rect x="285.4" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="288.40" y="255.5" ></text>
</g>
<g >
<title>String =&gt; ?{def forall: ?} (expanded macros 0)  (951 Î¼s, 0.02%)</title><rect x="151.9" y="245" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="154.91" y="255.5" ></text>
</g>
<g >
<title>F[(Unit, better.files.File, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (714 Î¼s, 0.02%)</title><rect x="36.3" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="39.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Comment]] (id 3970) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,411 Î¼s, 0.22%)</title><rect x="430.0" y="245" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="433.03" y="255.5" ></text>
</g>
<g >
<title>to.patch.type =&gt; ?{def =!= : ?} (expanded macros 0)  (390 Î¼s, 0.01%)</title><rect x="1173.1" y="245" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1176.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)]} (id 3633) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (462 Î¼s, 0.01%)</title><rect x="424.2" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="427.18" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (7,392 Î¼s, 0.19%)</title><rect x="1050.8" y="197" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1053.83" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.Repository] (expanded macros 0)  (5,307 Î¼s, 0.14%)</title><rect x="783.2" y="229" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="786.21" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,659 Î¼s, 0.14%)</title><rect x="1116.5" y="133" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1119.46" y="143.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['f',Char] (expanded macros 0)  (1,412 Î¼s, 0.04%)</title><rect x="268.2" y="133" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="271.17" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,245 Î¼s, 0.08%)</title><rect x="1077.2" y="117" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1080.22" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (6,776 Î¼s, 0.17%)</title><rect x="1011.5" y="165" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1014.52" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Out = K} (id 3973) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (561 Î¼s, 0.01%)</title><rect x="430.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="433.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,049 Î¼s, 0.08%)</title><rect x="1033.5" y="149" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1036.45" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.bitbucket.Reviewer]] (expanded macros 0)  (1,163 Î¼s, 0.03%)</title><rect x="427.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="430.14" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Vector[Int]] (expanded macros 0)  (547 Î¼s, 0.01%)</title><rect x="496.2" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="499.24" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)]} (id 1326) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (11,863 Î¼s, 0.30%)</title><rect x="369.4" y="149" width="3.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="372.39" y="159.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (381 Î¼s, 0.01%)</title><rect x="342.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="345.68" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4055) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (368 Î¼s, 0.01%)</title><rect x="874.1" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="877.14" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (386 Î¼s, 0.01%)</title><rect x="442.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="445.16" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (413 Î¼s, 0.01%)</title><rect x="442.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="445.03" y="191.5" ></text>
</g>
<g >
<title>x$7.type =&gt; ?{def traverse: ?} (expanded macros 0)  (334 Î¼s, 0.01%)</title><rect x="1186.3" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1189.30" y="255.5" ></text>
</g>
<g >
<title>x$48.updates.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (461 Î¼s, 0.01%)</title><rect x="1185.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1188.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8716) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (848 Î¼s, 0.02%)</title><rect x="1158.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1161.73" y="207.5" ></text>
</g>
<g >
<title>cats.MonadError[[_]F[_],Throwable] (expanded macros 0)  (1,891 Î¼s, 0.05%)</title><rect x="214.4" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="217.44" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,208 Î¼s, 0.03%)</title><rect x="320.6" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="323.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1837) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (736 Î¼s, 0.02%)</title><rect x="942.8" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="945.81" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChange] (expanded macros 0)  (31,068 Î¼s, 0.80%)</title><rect x="1156.7" y="229" width="9.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1159.74" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Out = K} (id 4153) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (539 Î¼s, 0.01%)</title><rect x="878.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="881.04" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (3,779 Î¼s, 0.10%)</title><rect x="271.8" y="229" width="1.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="274.78" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)]} (id 4052) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (414 Î¼s, 0.01%)</title><rect x="874.9" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="877.91" y="111.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.CreatePullRequestRequest] =&gt; ?{def flatMap: ?} (expanded macros 0)  (403 Î¼s, 0.01%)</title><rect x="113.5" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="116.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = R} (expanded macros 0)  (24,004 Î¼s, 0.61%)</title><rect x="834.5" y="213" width="7.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="837.54" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4232) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (471 Î¼s, 0.01%)</title><rect x="438.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="441.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = R} (expanded macros 0)  (5,810 Î¼s, 0.15%)</title><rect x="911.9" y="213" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="914.86" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (6,956 Î¼s, 0.18%)</title><rect x="942.8" y="149" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="945.77" y="159.5" ></text>
</g>
<g >
<title>Either[io.circe.Error,Either[org.scalasteward.core.data.Dependency,org.scalasteward.core.data.Resolver]] =&gt; ?{def toList: ?} (expanded macros 0)  (1,111 Î¼s, 0.03%)</title><rect x="30.0" y="245" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="32.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (id 2440) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,599 Î¼s, 0.04%)</title><rect x="617.3" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="620.27" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 5548) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (528 Î¼s, 0.01%)</title><rect x="761.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="764.47" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8333) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (981 Î¼s, 0.03%)</title><rect x="1097.2" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1100.17" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.DependencyInfo]{type Repr = R} (expanded macros 0)  (11,284 Î¼s, 0.29%)</title><rect x="387.5" y="213" width="3.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="390.54" y="223.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (353 Î¼s, 0.01%)</title><rect x="126.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="129.92" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)]} (id 4495) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (334 Î¼s, 0.01%)</title><rect x="777.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="780.63" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,616 Î¼s, 0.09%)</title><rect x="564.4" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="567.42" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (934 Î¼s, 0.02%)</title><rect x="434.0" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="437.05" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (1,203 Î¼s, 0.03%)</title><rect x="588.1" y="133" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="591.14" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7363) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (531 Î¼s, 0.01%)</title><rect x="912.3" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="915.29" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Out = K} (id 4005) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (395 Î¼s, 0.01%)</title><rect x="740.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="742.99" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (921 Î¼s, 0.02%)</title><rect x="1029.5" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1032.46" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]] (id 4630) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (30,024 Î¼s, 0.77%)</title><rect x="508.5" y="245" width="9.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="511.52" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (123,230 Î¼s, 3.16%)</title><rect x="1049.5" y="229" width="37.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1052.52" y="239.5" >io...</text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Out = K} (id 4670) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,845 Î¼s, 0.05%)</title><rect x="525.5" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="528.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = R} (expanded macros 0)   (17,619 Î¼s, 0.45%)</title><rect x="1024.4" y="213" width="5.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1027.41" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (id 8258) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,797 Î¼s, 0.05%)</title><rect x="1113.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1116.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (id 2478) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,744 Î¼s, 0.04%)</title><rect x="623.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="626.16" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (351 Î¼s, 0.01%)</title><rect x="1178.5" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1181.52" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil] (id 4181) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,200 Î¼s, 0.06%)</title><rect x="755.8" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="758.85" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (520 Î¼s, 0.01%)</title><rect x="598.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="601.06" y="191.5" ></text>
</g>
<g >
<title>strings.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (650 Î¼s, 0.02%)</title><rect x="1172.5" y="245" width="0.2" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="1175.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7453) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (988 Î¼s, 0.03%)</title><rect x="1027.9" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1030.86" y="175.5" ></text>
</g>
<g >
<title>F[Boolean] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,241 Î¼s, 0.06%)</title><rect x="40.5" y="245" width="0.7" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="43.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)]} (id 4432) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (611 Î¼s, 0.02%)</title><rect x="774.4" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="777.42" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,058 Î¼s, 0.10%)</title><rect x="1128.5" y="149" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1131.53" y="159.5" ></text>
</g>
<g >
<title>exitValue.type =&gt; ?{def === : ?} (expanded macros 0)  (523 Î¼s, 0.01%)</title><rect x="274.2" y="245" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="277.17" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Repr = R} (expanded macros 0)  (22,871 Î¼s, 0.59%)</title><rect x="902.4" y="213" width="6.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="905.43" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (id 998) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (918 Î¼s, 0.02%)</title><rect x="1138.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1141.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,785 Î¼s, 0.15%)</title><rect x="907.6" y="101" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="910.59" y="111.5" ></text>
</g>
<g >
<title>F[Vector[Int]] =&gt; ?{def map: ?} (expanded macros 0)  (1,230 Î¼s, 0.03%)</title><rect x="102.4" y="245" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="105.39" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucketserver.Json.Comment] (expanded macros 0)  (994 Î¼s, 0.03%)</title><rect x="327.5" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="330.46" y="255.5" ></text>
</g>
<g >
<title>cats.FlatMap[Option] (expanded macros 0)  (797 Î¼s, 0.02%)</title><rect x="203.4" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="206.43" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[String]] (expanded macros 0)  (474 Î¼s, 0.01%)</title><rect x="495.7" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.68" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Repr = V} (expanded macros 3)   (1,904 Î¼s, 0.05%)</title><rect x="445.1" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="448.08" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Out = K} (id 4211) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (402 Î¼s, 0.01%)</title><rect x="435.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="438.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Out = K} (id 3958) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (562 Î¼s, 0.01%)</title><rect x="735.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="738.15" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (986 Î¼s, 0.03%)</title><rect x="471.9" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="474.93" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChanges]] (id 8829) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,446 Î¼s, 0.40%)</title><rect x="1166.1" y="245" width="4.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1169.13" y="255.5" ></text>
</g>
<g >
<title>mergeRequest.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (407 Î¼s, 0.01%)</title><rect x="332.4" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="335.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)]} (id 1328) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,315 Î¼s, 0.03%)</title><rect x="366.5" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="369.46" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Int] (expanded macros 0)  (356 Î¼s, 0.01%)</title><rect x="1147.7" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1150.69" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil]] (id 4180) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,528 Î¼s, 0.06%)</title><rect x="755.7" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="758.75" y="223.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[List[org.scalasteward.core.application.Cli.EnvVar]], com.monovore.decline.Opts[scala.concurrent.duration.FiniteDuration], com.monovore.decline.Opts[org.scalasteward.core.application.Config.SandboxCfg], com.monovore.decline.Opts[Int])) =&gt; ?{def mapN: ?} (expanded macros 0)  (585 Î¼s, 0.01%)</title><rect x="16.1" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="19.06" y="255.5" ></text>
</g>
<g >
<title>List[Either[org.scalasteward.core.data.Dependency,org.scalasteward.core.data.Resolver]] =&gt; ?{def separate: ?} (expanded macros 0)  (374 Î¼s, 0.01%)</title><rect x="140.6" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="143.57" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7623) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (502 Î¼s, 0.01%)</title><rect x="1062.9" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1065.91" y="79.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Out = K} (id 4587) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,224 Î¼s, 0.03%)</title><rect x="519.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="522.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = Options} (id 1751) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (4,712 Î¼s, 0.12%)</title><rect x="955.8" y="133" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="958.75" y="143.5" ></text>
</g>
<g >
<title>fs2.Compiler.Target[[x]F[x]] (expanded macros 0)  (5,261 Î¼s, 0.13%)</title><rect x="278.6" y="229" width="1.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="281.64" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] (expanded macros 0)  (3,796 Î¼s, 0.10%)</title><rect x="1120.7" y="165" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1123.73" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7628) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (446 Î¼s, 0.01%)</title><rect x="1061.2" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1064.20" y="159.5" ></text>
</g>
<g >
<title>F[Boolean] =&gt; ?{def map: ?} (expanded macros 0)  (1,433 Î¼s, 0.04%)</title><rect x="41.9" y="245" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="44.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (439 Î¼s, 0.01%)</title><rect x="1170.2" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1173.24" y="223.5" ></text>
</g>
<g >
<title>scala.collection.immutable.Vector[String] =&gt; ?{def traverse: ?} (expanded macros 0)  (552 Î¼s, 0.01%)</title><rect x="353.5" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="356.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatePattern]{type Repr = V} (id 8180) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (715 Î¼s, 0.02%)</title><rect x="595.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="598.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] (id 4206) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,177 Î¼s, 0.18%)</title><rect x="435.0" y="245" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="437.98" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Out = K} (id 4504) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,510 Î¼s, 0.04%)</title><rect x="463.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="466.20" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.DefaultReviewers] =&gt; ?{def map: ?} (expanded macros 0)  (663 Î¼s, 0.02%)</title><rect x="113.6" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="116.64" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.util.Timestamp] =&gt; ?{def map: ?} (expanded macros 0)  (1,133 Î¼s, 0.03%)</title><rect x="127.0" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="130.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,135 Î¼s, 0.05%)</title><rect x="988.9" y="133" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="991.94" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]] (id 4613) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (20,484 Î¼s, 0.52%)</title><rect x="448.8" y="245" width="6.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="451.82" y="255.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.update.artifact.ArtifactMigrationsFinder, org.scalasteward.core.edit.scalafix.ScalafixMigrationsLoader[F])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,254 Î¼s, 0.03%)</title><rect x="39.4" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="42.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)]} (id 5487) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (507 Î¼s, 0.01%)</title><rect x="906.3" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="909.25" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Scope[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (854 Î¼s, 0.02%)</title><rect x="147.3" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="150.29" y="239.5" ></text>
</g>
<g >
<title>updates1.type =&gt; ?{def widen: ?} (expanded macros 0)  (551 Î¼s, 0.01%)</title><rect x="1175.1" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1178.05" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (402 Î¼s, 0.01%)</title><rect x="577.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="580.90" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) &lt;: String],Lub0] (expanded macros 0)  (577 Î¼s, 0.01%)</title><rect x="1080.6" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1083.64" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4830) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,266 Î¼s, 0.03%)</title><rect x="477.3" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="480.30" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)]} (id 4272) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (372 Î¼s, 0.01%)</title><rect x="758.5" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="761.51" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (890 Î¼s, 0.02%)</title><rect x="996.0" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="998.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (1,602 Î¼s, 0.04%)</title><rect x="939.1" y="133" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="942.13" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 1851) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,123 Î¼s, 0.13%)</title><rect x="944.9" y="149" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="947.88" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]] (id 4582) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,540 Î¼s, 0.47%)</title><rect x="517.6" y="245" width="5.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="520.60" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (1,486 Î¼s, 0.04%)</title><rect x="1086.3" y="69" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1089.32" y="79.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (688 Î¼s, 0.02%)</title><rect x="1137.5" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1140.53" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RepoCache]{type Out = K} (id 6846) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (997 Î¼s, 0.03%)</title><rect x="580.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="583.32" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Long] (expanded macros 0)  (440 Î¼s, 0.01%)</title><rect x="461.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="464.56" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Repr = V} (id 5371) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (535 Î¼s, 0.01%)</title><rect x="896.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="899.07" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.CrossDependency]] (expanded macros 0)  (977 Î¼s, 0.03%)</title><rect x="249.3" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.CommitOut]{type Out = K} (id 4313) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (547 Î¼s, 0.01%)</title><rect x="764.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="767.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)   (7,822 Î¼s, 0.20%)</title><rect x="982.7" y="149" width="2.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="985.71" y="159.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['f',Char] (expanded macros 0)  (1,276 Î¼s, 0.03%)</title><rect x="304.6" y="133" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="307.58" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,709 Î¼s, 0.04%)</title><rect x="522.2" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="525.23" y="191.5" ></text>
</g>
<g >
<title>cats.Foldable[cats.data.NonEmptyList] (expanded macros 0)  (1,118 Î¼s, 0.03%)</title><rect x="204.7" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="207.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,890 Î¼s, 0.10%)</title><rect x="840.6" y="149" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="843.62" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.Header]{type Repr = R} (expanded macros 0)  (7,084 Î¼s, 0.18%)</title><rect x="407.9" y="213" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="410.87" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.nurture.UpdateInfoUrl]] (expanded macros 0)  (2,101 Î¼s, 0.05%)</title><rect x="243.4" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="246.44" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.edit.update.data.VersionPosition]] (expanded macros 0)  (1,324 Î¼s, 0.03%)</title><rect x="242.3" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="245.25" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="990.1" y="117" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="993.09" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (id 7172) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (921 Î¼s, 0.02%)</title><rect x="1004.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1006.96" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.VersionPattern]] (id 8486) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,547 Î¼s, 0.35%)</title><rect x="914.6" y="245" width="4.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="917.57" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,729 Î¼s, 0.15%)</title><rect x="465.1" y="197" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="468.10" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (1,116 Î¼s, 0.03%)</title><rect x="945.8" y="117" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="948.77" y="127.5" ></text>
</g>
<g >
<title>F[Option[org.http4s.Uri]] =&gt; ?{def map: ?} (expanded macros 0)  (489 Î¼s, 0.01%)</title><rect x="66.9" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="69.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Repr = V} (id 4081) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (527 Î¼s, 0.01%)</title><rect x="752.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="755.49" y="207.5" ></text>
</g>
<g >
<title>cats.Parallel[F] (expanded macros 0)  (2,703 Î¼s, 0.07%)</title><rect x="215.4" y="245" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="218.41" y="255.5" ></text>
</g>
<g >
<title>scala.reflect.ClassTag[java.util.regex.PatternSyntaxException] (expanded macros 1)  (409 Î¼s, 0.01%)</title><rect x="354.2" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="357.24" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = R} (expanded macros 0)  (22,196 Î¼s, 0.57%)</title><rect x="1111.5" y="213" width="6.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1114.46" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForGroupId]] (id 2434) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,146 Î¼s, 0.46%)</title><rect x="614.5" y="245" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="617.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)]} (id 5360) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (350 Î¼s, 0.01%)</title><rect x="786.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="789.43" y="191.5" ></text>
</g>
<g >
<title>F[Int] =&gt; ?{def flatMap: ?} (expanded macros 0)  (813 Î¼s, 0.02%)</title><rect x="44.3" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="47.29" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,228 Î¼s, 0.03%)</title><rect x="963.8" y="85" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="966.85" y="95.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil] (id 8482) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,041 Î¼s, 0.05%)</title><rect x="832.7" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="835.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,425 Î¼s, 0.04%)</title><rect x="832.1" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="835.14" y="159.5" ></text>
</g>
<g >
<title>F[Long] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,420 Î¼s, 0.04%)</title><rect x="60.4" y="245" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="63.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForGroupId]{type Repr = R} (expanded macros 0)  (12,502 Î¼s, 0.32%)</title><rect x="845.8" y="213" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="848.82" y="223.5" ></text>
</g>
<g >
<title>Option[org.scalasteward.core.nurture.PullRequestData[cats.Id]] =&gt; scala.collection.IterableOnce[B] (expanded macros 0)  (385 Î¼s, 0.01%)</title><rect x="145.6" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="148.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,914 Î¼s, 0.20%)</title><rect x="1115.8" y="149" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1118.78" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucket.CommentContent :: shapeless.HNil]{type Out = R} (expanded macros 0)  (963 Î¼s, 0.02%)</title><rect x="424.1" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="427.07" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.RepositoriesOut] (expanded macros 0)  (6,385 Î¼s, 0.16%)</title><rect x="780.9" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="783.86" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (833 Î¼s, 0.02%)</title><rect x="1089.5" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1092.46" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (362 Î¼s, 0.01%)</title><rect x="51.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="54.78" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[org.scalasteward.core.repoconfig.PullRequestGroup]] (expanded macros 0)  (1,869 Î¼s, 0.05%)</title><rect x="1188.5" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1191.46" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.data.Comment] (expanded macros 0)  (7,098 Î¼s, 0.18%)</title><rect x="440.1" y="229" width="2.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="443.13" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubAssignees]{type Repr = V} (expanded macros 3)   (667 Î¼s, 0.02%)</title><rect x="890.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="893.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5524) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (611 Î¼s, 0.02%)</title><rect x="789.5" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.52" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,748 Î¼s, 0.04%)</title><rect x="976.3" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="979.30" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[Int]]] (expanded macros 0)  (600 Î¼s, 0.02%)</title><rect x="910.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="913.39" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,661 Î¼s, 0.09%)</title><rect x="874.8" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="877.77" y="127.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = R} (expanded macros 0)  (2,263 Î¼s, 0.06%)</title><rect x="1168.8" y="213" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1171.78" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (488 Î¼s, 0.01%)</title><rect x="1122.5" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1125.46" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (19,043 Î¼s, 0.49%)</title><rect x="387.4" y="229" width="5.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="390.42" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (339 Î¼s, 0.01%)</title><rect x="422.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="425.50" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (449 Î¼s, 0.01%)</title><rect x="1137.7" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1140.74" y="223.5" ></text>
</g>
<g >
<title>F[(List[String], String)] =&gt; ?{def map: ?} (expanded macros 0)  (370 Î¼s, 0.01%)</title><rect x="32.6" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="35.58" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CreateComment]{type Out = K} (id 3627) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (538 Î¼s, 0.01%)</title><rect x="423.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="426.45" y="207.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.data.DependencyInfo] &lt;:&lt; G[B] (expanded macros 0)  (474 Î¼s, 0.01%)</title><rect x="142.7" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="145.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (2,391 Î¼s, 0.06%)</title><rect x="948.8" y="133" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="951.79" y="143.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (877 Î¼s, 0.02%)</title><rect x="108.5" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="111.55" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] (expanded macros 0)  (6,078 Î¼s, 0.16%)</title><rect x="584.9" y="165" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="587.86" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,668 Î¼s, 0.07%)</title><rect x="899.3" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="902.30" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Out = K} (id 4506) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,483 Î¼s, 0.04%)</title><rect x="463.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="466.66" y="207.5" ></text>
</g>
<g >
<title>F[Either[String,(coursier.core.Versions, String)]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (834 Î¼s, 0.02%)</title><rect x="42.4" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="45.38" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)]} (id 7256) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (339 Î¼s, 0.01%)</title><rect x="1016.0" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1018.99" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (546 Î¼s, 0.01%)</title><rect x="597.9" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="600.90" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (541 Î¼s, 0.01%)</title><rect x="241.7" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="244.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (expanded macros 3)   (767 Î¼s, 0.02%)</title><rect x="757.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="760.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User]] (id 4223) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,095 Î¼s, 0.21%)</title><rect x="437.2" y="245" width="2.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="440.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;full_name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (952 Î¼s, 0.02%)</title><rect x="784.1" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="787.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7444) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,366 Î¼s, 0.03%)</title><rect x="1025.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1028.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)]} (id 7179) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (525 Î¼s, 0.01%)</title><rect x="1005.4" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1008.37" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 2085) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (374 Î¼s, 0.01%)</title><rect x="976.2" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="979.19" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (556 Î¼s, 0.01%)</title><rect x="1142.1" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1145.12" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (expanded macros 0)  (707 Î¼s, 0.02%)</title><rect x="400.6" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="403.57" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (859 Î¼s, 0.02%)</title><rect x="859.8" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="862.78" y="207.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def as: ?} (expanded macros 0)  (8,943 Î¼s, 0.23%)</title><rect x="77.5" y="245" width="2.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="80.46" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.GroupRepoConfig] (expanded macros 0)  (671 Î¼s, 0.02%)</title><rect x="1071.8" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1074.77" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Out = K} (id 4803) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,663 Î¼s, 0.04%)</title><rect x="503.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="506.41" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (378 Î¼s, 0.01%)</title><rect x="860.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="863.37" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (740 Î¼s, 0.02%)</title><rect x="586.9" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="589.95" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;fileExtensions&quot;) with String(&quot;limit&quot;) with String(&quot;ignore&quot;) with String(&quot;allowPreReleases&quot;) &lt;: String],Lub0] (expanded macros 0)  (542 Î¼s, 0.01%)</title><rect x="1127.0" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1130.03" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Repr = V} (id 4673) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,761 Î¼s, 0.05%)</title><rect x="527.3" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="530.30" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (1,030 Î¼s, 0.03%)</title><rect x="333.2" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="336.24" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (421 Î¼s, 0.01%)</title><rect x="1088.2" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1091.20" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1724) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (366 Î¼s, 0.01%)</title><rect x="963.5" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="966.50" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Repr = V} (expanded macros 3)   (831 Î¼s, 0.02%)</title><rect x="431.1" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="434.14" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Update.Single =&gt; ?{def === : ?} (expanded macros 0)  (2,119 Î¼s, 0.05%)</title><rect x="342.8" y="245" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="345.80" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (386 Î¼s, 0.01%)</title><rect x="53.3" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="56.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = K} (id 8121) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (473 Î¼s, 0.01%)</title><rect x="1088.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1091.89" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (458 Î¼s, 0.01%)</title><rect x="277.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="280.31" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7457) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,283 Î¼s, 0.03%)</title><rect x="1029.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1032.79" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[String] (expanded macros 0)  (3,743 Î¼s, 0.10%)</title><rect x="244.1" y="245" width="1.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="247.07" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)  (81,070 Î¼s, 2.08%)</title><rect x="357.6" y="229" width="24.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="360.61" y="239.5" >i..</text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Out = K} (id 5465) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,580 Î¼s, 0.04%)</title><rect x="903.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="906.06" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.data.RepoData] =&gt; ?{def flatMap: ?} (expanded macros 0)  (376 Î¼s, 0.01%)</title><rect x="112.2" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="115.22" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)  (30,675 Î¼s, 0.79%)</title><rect x="579.8" y="229" width="9.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="582.81" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)]} (id 3690) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (375 Î¼s, 0.01%)</title><rect x="426.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="429.50" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,113 Î¼s, 0.03%)</title><rect x="841.5" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="844.46" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (788 Î¼s, 0.02%)</title><rect x="1160.2" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1163.21" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (9,531 Î¼s, 0.24%)</title><rect x="1083.9" y="181" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1086.88" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;href&quot;)],org.http4s.Uri] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: shapeless.HNil]] (id 4027) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,087 Î¼s, 0.05%)</title><rect x="743.8" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="746.80" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Out = K} (id 5368) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (537 Î¼s, 0.01%)</title><rect x="895.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="898.57" y="207.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.data.RepoData, org.scalasteward.core.forge.data.RepoOut)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (533 Î¼s, 0.01%)</title><rect x="38.0" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="40.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (3,511 Î¼s, 0.09%)</title><rect x="1015.5" y="197" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.51" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (5,994 Î¼s, 0.15%)</title><rect x="340.3" y="229" width="1.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="343.33" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UpdateState]{type Out = K} (id 4467) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (487 Î¼s, 0.01%)</title><rect x="883.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="886.31" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.PR] (expanded macros 0)  (1,211 Î¼s, 0.03%)</title><rect x="315.5" y="229" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="318.51" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (2,094 Î¼s, 0.05%)</title><rect x="349.0" y="229" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="351.97" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Out = K} (id 4585) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,287 Î¼s, 0.03%)</title><rect x="518.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="521.77" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (1,843 Î¼s, 0.05%)</title><rect x="1051.5" y="85" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1054.46" y="95.5" ></text>
</g>
<g >
<title>c1.type =&gt; ?{def === : ?} (expanded macros 0)  (1,859 Î¼s, 0.05%)</title><rect x="193.6" y="245" width="0.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="196.62" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload] (expanded macros 0)  (5,518 Î¼s, 0.14%)</title><rect x="860.9" y="229" width="1.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="863.89" y="239.5" ></text>
</g>
<g >
<title>x.postUpdateHooks.type =&gt; ?{def |+| : ?} (expanded macros 0)  (947 Î¼s, 0.02%)</title><rect x="1189.0" y="245" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1192.03" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (2,182 Î¼s, 0.06%)</title><rect x="1163.5" y="213" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.48" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,199 Î¼s, 0.03%)</title><rect x="618.9" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="621.89" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.update.data.Substring.Replacement]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,540 Î¼s, 0.04%)</title><rect x="57.4" y="245" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="60.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChange]] (id 8713) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (36,437 Î¼s, 0.93%)</title><rect x="1155.1" y="245" width="11.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1158.11" y="255.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.edit.update.data.VersionPosition] =&gt; scala.collection.IterableOnce[B] (expanded macros 0)  (767 Î¼s, 0.02%)</title><rect x="143.2" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="146.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Dependency]{type Repr = R} (expanded macros 0)  (12,724 Î¼s, 0.33%)</title><rect x="395.0" y="213" width="3.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="398.05" y="223.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.forge.gitea.GiteaApiAlg.User] =&gt; io.circe.Json (expanded macros 0)   (530 Î¼s, 0.01%)</title><rect x="548.7" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="551.72" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Repr = V} (expanded macros 3)   (663 Î¼s, 0.02%)</title><rect x="861.4" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="864.41" y="207.5" ></text>
</g>
<g >
<title>F[(better.files.File, List[(String, List[org.scalasteward.core.edit.update.data.Substring.Replacement])])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (563 Î¼s, 0.01%)</title><rect x="37.1" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="40.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)]} (id 4558) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,097 Î¼s, 0.03%)</title><rect x="543.6" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="546.57" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UserOut]{type Repr = V} (expanded macros 3)   (623 Î¼s, 0.02%)</title><rect x="777.2" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="780.20" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,350 Î¼s, 0.03%)</title><rect x="843.8" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="846.77" y="175.5" ></text>
</g>
<g >
<title>x$2.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (836 Î¼s, 0.02%)</title><rect x="1182.8" y="245" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1185.84" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def map: ?} (expanded macros 0)  (503 Î¼s, 0.01%)</title><rect x="53.8" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="56.83" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.util.UrlChecker[F]] =&gt; ?{def map: ?} (expanded macros 0)  (1,397 Î¼s, 0.04%)</title><rect x="127.4" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="130.37" y="255.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def map: ?} (expanded macros 0)  (11,130 Î¼s, 0.29%)</title><rect x="47.4" y="245" width="3.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="50.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.coursier.VersionsCache.Value]{type Out = K} (id 1320) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,805 Î¼s, 0.05%)</title><rect x="362.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="365.17" y="207.5" ></text>
</g>
<g >
<title>org.http4s.Header.Select[org.http4s.headers.Link] (expanded macros 0)  (3,172 Î¼s, 0.08%)</title><rect x="336.2" y="245" width="0.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="339.17" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)]} (id 4686) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,120 Î¼s, 0.03%)</title><rect x="528.4" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="531.38" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4683) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,112 Î¼s, 0.03%)</title><rect x="530.6" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="533.59" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: String :: Option[List[String]] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,983 Î¼s, 0.08%)</title><rect x="868.0" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="871.00" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[shapeless.HNil,shapeless.HNil]{type Out = OutT} (expanded macros 0)  (905 Î¼s, 0.02%)</title><rect x="1022.9" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1025.86" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (3,776 Î¼s, 0.10%)</title><rect x="1085.6" y="101" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.62" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (592 Î¼s, 0.02%)</title><rect x="587.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="590.17" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1972) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (363 Î¼s, 0.01%)</title><rect x="986.6" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="989.58" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7540) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,095 Î¼s, 0.03%)</title><rect x="1042.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1045.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = R} (expanded macros 0)  (1,389 Î¼s, 0.04%)</title><rect x="1024.0" y="213" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1026.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = R} (expanded macros 0)  (8,829 Î¼s, 0.23%)</title><rect x="915.4" y="213" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="918.37" y="223.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Size[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[N]]]] (expanded macros 0)  (3,290 Î¼s, 0.08%)</title><rect x="272.9" y="245" width="1.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="275.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,614 Î¼s, 0.09%)</title><rect x="531.7" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="534.68" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Repository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Repository] :: shapeless.HNil] (id 4164) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,479 Î¼s, 0.04%)</title><rect x="879.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="882.43" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (434 Î¼s, 0.01%)</title><rect x="265.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="268.84" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4559) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,047 Î¼s, 0.03%)</title><rect x="542.9" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="545.90" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Repr = V} (expanded macros 3)   (1,702 Î¼s, 0.04%)</title><rect x="457.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="460.50" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'a'} (id 6026) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (796 Î¼s, 0.02%)</title><rect x="306.8" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="309.76" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (552 Î¼s, 0.01%)</title><rect x="1000.9" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1003.87" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)]} (id 8477) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (445 Î¼s, 0.01%)</title><rect x="832.0" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="835.01" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,487 Î¼s, 0.09%)</title><rect x="989.8" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="992.83" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)]} (id 7196) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (578 Î¼s, 0.01%)</title><rect x="1007.8" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1010.81" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubAssignees]{type Repr = V} (id 5258) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (500 Î¼s, 0.01%)</title><rect x="891.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="894.03" y="207.5" ></text>
</g>
<g >
<title>defaultReviewers.type =&gt; ?{def map: ?} (expanded macros 0)  (630 Î¼s, 0.02%)</title><rect x="263.6" y="245" width="0.1" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="266.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)]} (id 4641) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,499 Î¼s, 0.04%)</title><rect x="514.8" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="517.76" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8268) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,059 Î¼s, 0.03%)</title><rect x="1116.1" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1119.14" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = R} (expanded macros 0)   (4,179 Î¼s, 0.11%)</title><rect x="1151.4" y="213" width="1.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1154.41" y="223.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.coursier.DependencyMetadata] =&gt; ?{def flatMap: ?} (expanded macros 0)  (472 Î¼s, 0.01%)</title><rect x="111.8" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="114.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,587 Î¼s, 0.04%)</title><rect x="1077.7" y="85" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1080.73" y="95.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CreateComment]{type Out = K} (id 3629) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (366 Î¼s, 0.01%)</title><rect x="423.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="426.61" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.ProjectId] =&gt; ?{def flatMap: ?} (expanded macros 0)  (479 Î¼s, 0.01%)</title><rect x="121.4" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="124.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: shapeless.HNil] (id 4689) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (6,317 Î¼s, 0.16%)</title><rect x="532.9" y="197" width="1.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="535.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Repr = V} (id 4772) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,470 Î¼s, 0.04%)</title><rect x="470.6" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="473.64" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Vector[Int]]] (expanded macros 0)  (727 Î¼s, 0.02%)</title><rect x="495.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.38" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7542) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (940 Î¼s, 0.02%)</title><rect x="1043.3" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1046.29" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil] (expanded macros 0)  (756 Î¼s, 0.02%)</title><rect x="931.6" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="934.56" y="191.5" ></text>
</g>
<g >
<title>String =&gt; ?{def split(x$1: ? &gt;: Char('=')): ?} (expanded macros 0)  (501 Î¼s, 0.01%)</title><rect x="152.6" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="155.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,108 Î¼s, 0.03%)</title><rect x="857.1" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="860.11" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,739 Î¼s, 0.07%)</title><rect x="1082.2" y="85" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1085.21" y="95.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.PullRequestGroup]] (expanded macros 0)  (1,517 Î¼s, 0.04%)</title><rect x="1035.9" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1038.91" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.CrossDependency]] (expanded macros 0)  (2,131 Î¼s, 0.05%)</title><rect x="302.1" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="305.09" y="255.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def toList: ?} (expanded macros 0)  (6,766 Î¼s, 0.17%)</title><rect x="21.1" y="245" width="2.0" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="24.09" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (331 Î¼s, 0.01%)</title><rect x="429.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="432.93" y="191.5" ></text>
</g>
<g >
<title>F[Option[V]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (390 Î¼s, 0.01%)</title><rect x="65.6" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="68.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: shapeless.HNil]] (id 4146) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,163 Î¼s, 0.06%)</title><rect x="434.3" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="437.33" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[String]] (expanded macros 0)  (704 Î¼s, 0.02%)</title><rect x="1035.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1038.69" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (expanded macros 0)  (844 Î¼s, 0.02%)</title><rect x="400.9" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="403.86" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (992 Î¼s, 0.03%)</title><rect x="283.1" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="286.06" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Out = K} (id 3975) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (435 Î¼s, 0.01%)</title><rect x="431.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="434.01" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil] (id 8504) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,747 Î¼s, 0.04%)</title><rect x="918.1" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="921.14" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,185 Î¼s, 0.03%)</title><rect x="1082.7" y="69" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1085.68" y="79.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Less[N]]{type R = R} (expanded macros 0)  (1,879 Î¼s, 0.05%)</title><rect x="273.4" y="213" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="276.35" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4791) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,489 Î¼s, 0.04%)</title><rect x="459.8" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="462.80" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] (expanded macros 0)  (1,234 Î¼s, 0.03%)</title><rect x="828.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="831.25" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 2089) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredEncoder`)  (4,475 Î¼s, 0.11%)</title><rect x="977.0" y="133" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="979.99" y="143.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.git.Commit]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (394 Î¼s, 0.01%)</title><rect x="68.3" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="71.30" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: shapeless.HNil] (id 4714) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (2,572 Î¼s, 0.07%)</title><rect x="501.1" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="504.14" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (expanded macros 3)   (2,527 Î¼s, 0.06%)</title><rect x="853.0" y="197" width="0.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="856.02" y="207.5" ></text>
</g>
<g >
<title>F[Repo] =&gt; ?{def flatMap: ?} (expanded macros 0)  (8,516 Î¼s, 0.22%)</title><rect x="70.5" y="245" width="2.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="73.48" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (950 Î¼s, 0.02%)</title><rect x="586.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="589.89" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,276 Î¼s, 0.11%)</title><rect x="725.3" y="85" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="728.26" y="95.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[String]]] (expanded macros 0)  (971 Î¼s, 0.02%)</title><rect x="1122.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1125.32" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (2,190 Î¼s, 0.06%)</title><rect x="309.7" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="312.70" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.forge.github.InstallationOut]] (expanded macros 0)  (1,202 Î¼s, 0.03%)</title><rect x="242.7" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="245.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.TokenOut]{type Repr = R} (expanded macros 0)  (4,177 Î¼s, 0.11%)</title><rect x="785.3" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="788.31" y="223.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Dependency] (expanded macros 0)   (693 Î¼s, 0.02%)</title><rect x="310.1" y="229" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="313.10" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,655 Î¼s, 0.04%)</title><rect x="1125.4" y="133" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1128.41" y="143.5" ></text>
</g>
<g >
<title>g.updates.type =&gt; ?{def fproduct: ?} (expanded macros 0)  (1,404 Î¼s, 0.04%)</title><rect x="282.2" y="245" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="285.23" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,227 Î¼s, 0.06%)</title><rect x="908.7" y="53" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="911.67" y="63.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,094 Î¼s, 0.05%)</title><rect x="990.3" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="993.25" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (id 7073) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (441 Î¼s, 0.01%)</title><rect x="995.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="998.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.ProjectId]] (id 5448) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,726 Î¼s, 0.22%)</title><rect x="790.6" y="245" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="793.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil,List[org.scalasteward.core.edit.scalafix.ScalafixMigration] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,070 Î¼s, 0.03%)</title><rect x="1153.3" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1156.25" y="207.5" ></text>
</g>
<g >
<title>F[Int] =&gt; ?{def map: ?} (expanded macros 0)  (609 Î¼s, 0.02%)</title><rect x="44.5" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="47.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4561) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,030 Î¼s, 0.03%)</title><rect x="541.5" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="544.51" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestPayload] (expanded macros 0)  (11,925 Î¼s, 0.31%)</title><rect x="866.1" y="229" width="3.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="869.15" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (3,244 Î¼s, 0.08%)</title><rect x="1131.8" y="149" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1134.82" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;full_name&quot;)]} (id 5346) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (395 Î¼s, 0.01%)</title><rect x="784.2" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="787.19" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (2,366 Î¼s, 0.06%)</title><rect x="1171.6" y="229" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1174.59" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,800 Î¼s, 0.12%)</title><rect x="1067.7" y="101" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1070.75" y="111.5" ></text>
</g>
<g >
<title>org.http4s.headers.User-Agent =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (1,681 Î¼s, 0.04%)</title><rect x="338.5" y="245" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="341.48" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] (expanded macros 0)  (698 Î¼s, 0.02%)</title><rect x="1074.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.52" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[A]] (expanded macros 0)  (2,045 Î¼s, 0.05%)</title><rect x="255.3" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="258.34" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 1852) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (4,650 Î¼s, 0.12%)</title><rect x="945.0" y="133" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="948.02" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForGroupId] (expanded macros 0)  (15,422 Î¼s, 0.40%)</title><rect x="845.7" y="229" width="4.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="848.65" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Hash[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)   (344 Î¼s, 0.01%)</title><rect x="1173.8" y="213" width="0.1" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="1176.76" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Out = K} (id 4035) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,259 Î¼s, 0.03%)</title><rect x="871.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="874.75" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Long :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User :: String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (17,127 Î¼s, 0.44%)</title><rect x="541.1" y="181" width="5.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="544.14" y="191.5" ></text>
</g>
<g >
<title>(=&gt; (Nothing, Nothing)) =&gt; Int (expanded macros 0)   (537 Î¼s, 0.01%)</title><rect x="17.5" y="245" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="20.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 3935) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,622 Î¼s, 0.14%)</title><rect x="732.7" y="213" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="735.67" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: shapeless.HNil,Option[String] :: Option[org.scalasteward.core.repoconfig.VersionPattern] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,203 Î¼s, 0.06%)</title><rect x="595.7" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="598.69" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)]} (id 8500) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (417 Î¼s, 0.01%)</title><rect x="917.3" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="920.26" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7860) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (542 Î¼s, 0.01%)</title><rect x="1051.9" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1054.85" y="79.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8469) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (944 Î¼s, 0.02%)</title><rect x="830.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="833.23" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp] (expanded macros 0)  (33,402 Î¼s, 0.86%)</title><rect x="524.7" y="229" width="10.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="527.74" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2465) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (3,154 Î¼s, 0.08%)</title><rect x="857.6" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="860.59" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)]} (id 3964) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (426 Î¼s, 0.01%)</title><rect x="736.0" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="739.03" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] (expanded macros 0)  (26,560 Î¼s, 0.68%)</title><rect x="509.6" y="229" width="8.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="512.57" y="239.5" ></text>
</g>
<g >
<title>x.grouping.type =&gt; ?{def |+| : ?} (expanded macros 0)  (2,375 Î¼s, 0.06%)</title><rect x="1188.3" y="245" width="0.7" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1191.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Out = K} (id 3927) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (486 Î¼s, 0.01%)</title><rect x="731.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="734.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,019 Î¼s, 0.03%)</title><rect x="546.0" y="69" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="549.00" y="79.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.util.Timestamp]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (538 Î¼s, 0.01%)</title><rect x="69.7" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="72.73" y="255.5" ></text>
</g>
<g >
<title>x$2.type =&gt; ?{def === : ?} (expanded macros 0)  (4,579 Î¼s, 0.12%)</title><rect x="1181.3" y="245" width="1.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1184.28" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (expanded macros 0)  (3,418 Î¼s, 0.09%)</title><rect x="1142.0" y="229" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1145.04" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 7340) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (333 Î¼s, 0.01%)</title><rect x="827.1" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="830.08" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.TokenOut] (expanded macros 0)  (887 Î¼s, 0.02%)</title><rect x="319.6" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="322.63" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)],String] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 4645) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,777 Î¼s, 0.17%)</title><rect x="515.5" y="213" width="2.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="518.55" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: org.scalasteward.core.forge.data.UserOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.data.UserOut] :: Option[org.scalasteward.core.forge.data.RepoOut] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.data.RepoOut]] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: shapeless.HNil]] (id 4439) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,204 Î¼s, 0.13%)</title><rect x="774.7" y="213" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="777.67" y="223.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Resolver] (expanded macros 0)   (607 Î¼s, 0.02%)</title><rect x="420.2" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="423.17" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (18,433 Î¼s, 0.47%)</title><rect x="367.8" y="165" width="5.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="370.82" y="175.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,145 Î¼s, 0.03%)</title><rect x="939.3" y="117" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="942.27" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;href&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,org.http4s.Uri :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,696 Î¼s, 0.04%)</title><rect x="743.3" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="746.29" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.ArtifactId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],org.scalasteward.core.data.ArtifactId] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)],Option[String]] :: shapeless.HNil]] (id 1475) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (14,220 Î¼s, 0.36%)</title><rect x="398.9" y="213" width="4.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="401.89" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.Reviewer] (expanded macros 0)  (5,770 Î¼s, 0.15%)</title><rect x="428.3" y="229" width="1.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="431.28" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Repr = V} (id 3991) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (576 Î¼s, 0.01%)</title><rect x="738.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="741.03" y="207.5" ></text>
</g>
<g >
<title>cats.Parallel[[_]F[_]] (expanded macros 0)  (438 Î¼s, 0.01%)</title><rect x="261.5" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="264.53" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)]} (id 2781) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (286,136 Î¼s, 7.33%)</title><rect x="636.9" y="149" width="86.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="639.94" y="159.5" >shapeless...</text>
</g>
<g >
<title>io.circe.Encoder[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] (expanded macros 0)  (487 Î¼s, 0.01%)</title><rect x="1122.7" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1125.70" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version] (expanded macros 0)  (404 Î¼s, 0.01%)</title><rect x="249.7" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.68" y="223.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; java.time.Duration (expanded macros 0)   (828 Î¼s, 0.02%)</title><rect x="13.0" y="245" width="0.3" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="16.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (414 Î¼s, 0.01%)</title><rect x="1069.1" y="37" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1072.07" y="47.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,033 Î¼s, 0.03%)</title><rect x="986.9" y="85" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="989.93" y="95.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (581 Î¼s, 0.01%)</title><rect x="106.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="109.82" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.DependencyInfo]{type Repr = V} (id 1595) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,195 Î¼s, 0.03%)</title><rect x="389.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="392.30" y="207.5" ></text>
</g>
<g >
<title>dependency.version.type =&gt; ?{def &gt; : ?} (expanded macros 0)  (627 Î¼s, 0.02%)</title><rect x="265.8" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="268.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.DefaultReviewers]] (id 3681) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,711 Î¼s, 0.25%)</title><rect x="424.9" y="245" width="2.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="427.87" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (886 Î¼s, 0.02%)</title><rect x="786.3" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="789.31" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (879 Î¼s, 0.02%)</title><rect x="965.7" y="117" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="968.67" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil]] (id 4306) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,590 Î¼s, 0.07%)</title><rect x="441.5" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="444.49" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)],Option[List[Int]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)],Option[List[Int]]] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)],Long] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)],Option[Boolean]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)],org.scalasteward.core.git.Branch] :: shapeless.HNil]] (id 5491) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,913 Î¼s, 0.15%)</title><rect x="909.3" y="213" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="912.34" y="223.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.RepoOut] =&gt; ?{def flatMap: ?} (expanded macros 0)  (842 Î¼s, 0.02%)</title><rect x="117.0" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="120.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (expanded macros 3)   (1,129 Î¼s, 0.03%)</title><rect x="1006.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1009.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (1,298 Î¼s, 0.03%)</title><rect x="962.3" y="133" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="965.28" y="143.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; Iterable[Char] (expanded macros 0)   (499 Î¼s, 0.01%)</title><rect x="12.0" y="245" width="0.1" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="14.96" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)  (1,186 Î¼s, 0.03%)</title><rect x="1037.6" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1040.59" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.AzureComment]] (id 3422) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,413 Î¼s, 0.16%)</title><rect x="858.5" y="245" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="861.55" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (583 Î¼s, 0.01%)</title><rect x="379.6" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="382.56" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (654 Î¼s, 0.02%)</title><rect x="401.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="404.30" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = R} (expanded macros 0)   (3,533 Î¼s, 0.09%)</title><rect x="1167.7" y="213" width="1.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1170.71" y="223.5" ></text>
</g>
<g >
<title>x$2.name.type =&gt; ?{def === : ?} (expanded macros 0)  (697 Î¼s, 0.02%)</title><rect x="1181.1" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1184.07" y="255.5" ></text>
</g>
<g >
<title>((Unit, Unit)) =&gt; com.monovore.decline.Command[?A] (expanded macros 0)   (413 Î¼s, 0.01%)</title><rect x="15.0" y="245" width="0.1" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="17.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4739) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,015 Î¼s, 0.03%)</title><rect x="489.2" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="492.17" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = D} (expanded macros 0)  (2,921 Î¼s, 0.07%)</title><rect x="1157.4" y="213" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.35" y="223.5" ></text>
</g>
<g >
<title>group.type =&gt; ?{def reduceMap: ?} (expanded macros 0)  (764 Î¼s, 0.02%)</title><rect x="282.7" y="245" width="0.2" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="285.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Repr = R} (expanded macros 0)  (27,591 Î¼s, 0.71%)</title><rect x="557.2" y="213" width="8.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="560.18" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Vector[String]] (expanded macros 0)  (538 Î¼s, 0.01%)</title><rect x="496.5" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="499.49" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8335) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (988 Î¼s, 0.03%)</title><rect x="1096.9" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1099.87" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = Labels} (id 7831) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,318 Î¼s, 0.03%)</title><rect x="1056.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1059.27" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)]} (id 4735) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,071 Î¼s, 0.03%)</title><rect x="491.9" y="69" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="494.91" y="79.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Greater[shapeless._0]] (expanded macros 0)  (25,817 Î¼s, 0.66%)</title><rect x="132.4" y="229" width="7.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="135.37" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Update] (expanded macros 0)  (1,263 Î¼s, 0.03%)</title><rect x="568.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="571.09" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4530) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,315 Î¼s, 0.03%)</title><rect x="553.3" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="556.28" y="175.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.data.Version.Component] =&gt; scala.collection.IterableOnce[B] (expanded macros 0)  (596 Î¼s, 0.02%)</title><rect x="142.8" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="145.81" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (776 Î¼s, 0.02%)</title><rect x="299.1" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="302.11" y="239.5" ></text>
</g>
<g >
<title>F[Option[cats.data.NonEmptyList[org.scalasteward.core.update.data.UpdateState.WithUpdate]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (503 Î¼s, 0.01%)</title><rect x="66.2" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="69.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (7,174 Î¼s, 0.18%)</title><rect x="985.1" y="149" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="988.07" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Version] (expanded macros 0)  (681 Î¼s, 0.02%)</title><rect x="402.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="405.92" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UserOut]{type Out = K} (id 4491) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (341 Î¼s, 0.01%)</title><rect x="777.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="780.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1710) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (464 Î¼s, 0.01%)</title><rect x="960.1" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="963.08" y="127.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[_] (expanded macros 0)  (428 Î¼s, 0.01%)</title><rect x="269.8" y="197" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="272.83" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil] (id 4307) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (2,236 Î¼s, 0.06%)</title><rect x="441.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="444.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,674 Î¼s, 0.04%)</title><rect x="981.1" y="117" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="984.13" y="127.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = R} (expanded macros 0)  (495 Î¼s, 0.01%)</title><rect x="1151.3" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1154.26" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,083 Î¼s, 0.03%)</title><rect x="974.4" y="85" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="977.40" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,491 Î¼s, 0.12%)</title><rect x="582.2" y="181" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="585.21" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.RepoOut]{type Out = K} (id 4423) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (984 Î¼s, 0.03%)</title><rect x="772.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="775.08" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForArtifactId] (expanded macros 0)  (34,543 Î¼s, 0.88%)</title><rect x="834.3" y="229" width="10.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="837.31" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)]} (id 5547) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (617 Î¼s, 0.02%)</title><rect x="761.8" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="764.76" y="175.5" ></text>
</g>
<g >
<title>StringContext =&gt; ?{def ci: ?} (expanded macros 0)  (2,785 Î¼s, 0.07%)</title><rect x="165.5" y="245" width="0.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="168.47" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Repr = R} (expanded macros 0)  (15,286 Î¼s, 0.39%)</title><rect x="474.2" y="213" width="4.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="477.16" y="223.5" ></text>
</g>
<g >
<title>fs2.Stream[[_]F[_],String] =&gt; ?{def mapFilter: ?} (expanded macros 0)  (1,434 Î¼s, 0.04%)</title><rect x="280.3" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="283.27" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (85,635 Î¼s, 2.19%)</title><rect x="1018.6" y="229" width="25.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1021.60" y="239.5" >i..</text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)]} (id 2168) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (349 Î¼s, 0.01%)</title><rect x="928.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="931.56" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (640 Î¼s, 0.02%)</title><rect x="1163.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1165.99" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,718 Î¼s, 0.20%)</title><rect x="1109.1" y="149" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1112.13" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) with String(&quot;postUpdateHooks&quot;) &lt;: String],Lub0] (expanded macros 0)  (660 Î¼s, 0.02%)</title><rect x="1080.1" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1083.10" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (582 Î¼s, 0.01%)</title><rect x="1157.7" y="165" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.65" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Repr = R} (expanded macros 0)  (8,809 Î¼s, 0.23%)</title><rect x="866.2" y="213" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="869.24" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[List[A] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[A]] :: shapeless.HNil] (id 4087) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,374 Î¼s, 0.04%)</title><rect x="753.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="756.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatePattern]{type Out = K} (id 8179) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (629 Î¼s, 0.02%)</title><rect x="594.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="597.55" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Update.ForGroupIdDecoder.type =&gt; ?{def widen: ?} (expanded macros 0)  (628 Î¼s, 0.02%)</title><rect x="342.6" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="345.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1715) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,446 Î¼s, 0.04%)</title><rect x="961.8" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="964.84" y="143.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[[+O]fs2.Stream[[x]fs2.Pure[x],O]] (expanded macros 0)  (364 Î¼s, 0.01%)</title><rect x="258.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="261.63" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (842 Î¼s, 0.02%)</title><rect x="988.1" y="101" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="991.15" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,170 Î¼s, 0.03%)</title><rect x="891.2" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="894.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,787 Î¼s, 0.05%)</title><rect x="944.3" y="101" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="947.34" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)  (35,728 Î¼s, 0.92%)</title><rect x="970.8" y="165" width="10.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="973.83" y="175.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (1,773 Î¼s, 0.05%)</title><rect x="1121.3" y="117" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1124.29" y="127.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Sha1] =&gt; ?{def map: ?} (expanded macros 0)  (610 Î¼s, 0.02%)</title><rect x="122.4" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="125.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (5,429 Î¼s, 0.14%)</title><rect x="966.9" y="149" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="969.91" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Repr = R} (expanded macros 0)  (4,648 Î¼s, 0.12%)</title><rect x="737.2" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="740.23" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (5,155 Î¼s, 0.13%)</title><rect x="1143.5" y="229" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1146.52" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (827 Î¼s, 0.02%)</title><rect x="592.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="595.75" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)]} (id 2443) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,448 Î¼s, 0.04%)</title><rect x="618.5" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="621.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,962 Î¼s, 0.20%)</title><rect x="543.9" y="117" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="546.91" y="127.5" ></text>
</g>
<g >
<title>from.buildMetadata.type =&gt; ?{def =!= : ?} (expanded macros 0)  (574 Î¼s, 0.01%)</title><rect x="276.0" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="279.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,647 Î¼s, 0.04%)</title><rect x="441.0" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="443.99" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] =&gt; ?{def map: ?} (expanded macros 0)  (1,989 Î¼s, 0.05%)</title><rect x="56.7" y="245" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="59.69" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.Comment] =&gt; ?{def map: ?} (expanded macros 0)  (781 Î¼s, 0.02%)</title><rect x="116.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="119.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.Comment]{type Out = K} (id 4298) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (488 Î¼s, 0.01%)</title><rect x="440.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="443.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)]} (id 7067) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (499 Î¼s, 0.01%)</title><rect x="995.2" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="998.21" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)],Option[String]] :: Option[Vector[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Option[Vector[String]]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],Option[String]] :: Option[Vector[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[Vector[Int]]] :: Option[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)],Option[Int]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: shapeless.HNil]] (id 4744) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (11,133 Î¼s, 0.29%)</title><rect x="493.3" y="213" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="496.29" y="223.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Version]] =&gt; ?{def map: ?} (expanded macros 0)  (2,098 Î¼s, 0.05%)</title><rect x="55.2" y="245" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="58.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)]} (id 5480) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,169 Î¼s, 0.03%)</title><rect x="908.8" y="37" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="911.84" y="47.5" ></text>
</g>
<g >
<title>from.minor.type =&gt; ?{def =!= : ?} (expanded macros 0)  (894 Î¼s, 0.02%)</title><rect x="276.7" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="279.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,524 Î¼s, 0.14%)</title><rect x="1109.8" y="133" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1112.79" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] (expanded macros 0)  (1,223 Î¼s, 0.03%)</title><rect x="1154.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1157.11" y="191.5" ></text>
</g>
<g >
<title>(=&gt; String) =&gt; Int (expanded macros 0)   (470 Î¼s, 0.01%)</title><rect x="19.0" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="21.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.ForkPayload]] (id 5393) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (11,731 Î¼s, 0.30%)</title><rect x="897.2" y="245" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="900.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil,List[org.scalasteward.core.update.artifact.ArtifactChange] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,060 Î¼s, 0.03%)</title><rect x="1168.5" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1171.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil]] (id 5378) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,599 Î¼s, 0.04%)</title><rect x="896.7" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="899.70" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 4736) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,058 Î¼s, 0.03%)</title><rect x="491.2" y="85" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="494.24" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,002 Î¼s, 0.03%)</title><rect x="942.5" y="85" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="945.47" y="95.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (688 Î¼s, 0.02%)</title><rect x="401.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="404.50" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (340 Î¼s, 0.01%)</title><rect x="917.9" y="133" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="920.94" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Repr = R} (expanded macros 0)  (3,513 Î¼s, 0.09%)</title><rect x="861.0" y="213" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="863.96" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucket.CreatePullRequestRequest] (expanded macros 0)  (785 Î¼s, 0.02%)</title><rect x="327.2" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="330.22" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (id 7189) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (916 Î¼s, 0.02%)</title><rect x="1006.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1009.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = R} (expanded macros 0)  (7,192 Î¼s, 0.18%)</title><rect x="825.3" y="213" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="828.31" y="223.5" ></text>
</g>
<g >
<title>org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder =&gt; ?{def === : ?} (expanded macros 0)  (412 Î¼s, 0.01%)</title><rect x="345.0" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="348.04" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (600 Î¼s, 0.02%)</title><rect x="588.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="591.90" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.Repository]{type Out = K} (id 5340) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (457 Î¼s, 0.01%)</title><rect x="783.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="786.47" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (991 Î¼s, 0.03%)</title><rect x="779.6" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="782.65" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (735 Î¼s, 0.02%)</title><rect x="1187.1" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1190.14" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]] (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="301.9" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="304.94" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.RepoOut] =&gt; ?{def flatTap: ?} (expanded macros 0)  (683 Î¼s, 0.02%)</title><rect x="117.3" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="120.30" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Update.Grouped] =&gt; ?{def widen: ?} (expanded macros 0)  (619 Î¼s, 0.02%)</title><rect x="310.9" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="313.86" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (377 Î¼s, 0.01%)</title><rect x="410.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="413.82" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = R} (expanded macros 0)  (5,564 Î¼s, 0.14%)</title><rect x="1160.4" y="213" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1163.45" y="223.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Sync[[_]F[_]] (expanded macros 0)  (361 Î¼s, 0.01%)</title><rect x="231.8" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="234.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)]} (id 4740) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,065 Î¼s, 0.03%)</title><rect x="488.5" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="491.46" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (446 Î¼s, 0.01%)</title><rect x="271.4" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="274.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RepoCache]] (id 6843) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (34,434 Î¼s, 0.88%)</title><rect x="578.7" y="245" width="10.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="581.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.Reviewer]{type Out = K} (id 3719) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (388 Î¼s, 0.01%)</title><rect x="428.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="431.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)   (12,565 Î¼s, 0.32%)</title><rect x="957.7" y="149" width="3.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="960.65" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForArtifactId]] (id 2348) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (53,907 Î¼s, 1.38%)</title><rect x="598.2" y="245" width="16.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="601.22" y="255.5" ></text>
</g>
<g >
<title>Long =&gt; Int (expanded macros 0)   (1,046 Î¼s, 0.03%)</title><rect x="143.7" y="245" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="146.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,String :: String :: org.scalasteward.core.forge.data.PullRequestState :: Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (8,720 Î¼s, 0.22%)</title><rect x="873.2" y="197" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="876.25" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,845 Î¼s, 0.05%)</title><rect x="1129.2" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1132.20" y="143.5" ></text>
</g>
<g >
<title>x.customLabels.type =&gt; ?{def |+| : ?} (expanded macros 0)  (731 Î¼s, 0.02%)</title><rect x="1187.9" y="245" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1190.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (id 2455) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,803 Î¼s, 0.05%)</title><rect x="853.8" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="856.79" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 40} (id 6042) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (446 Î¼s, 0.01%)</title><rect x="308.1" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="311.08" y="175.5" ></text>
</g>
<g >
<title>cats.effect.kernel.MonadCancel[F,Throwable] (expanded macros 0)  (2,813 Î¼s, 0.07%)</title><rect x="228.4" y="245" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="231.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2059) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (967 Î¼s, 0.02%)</title><rect x="972.1" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="975.14" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)]} (id 8780) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (334 Î¼s, 0.01%)</title><rect x="1165.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1168.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 1833) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (382 Î¼s, 0.01%)</title><rect x="942.1" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="945.14" y="111.5" ></text>
</g>
<g >
<title>F[List[(String, List[org.scalasteward.core.nurture.UpdateInfoUrl])]] =&gt; ?{def map: ?} (expanded macros 0)  (743 Î¼s, 0.02%)</title><rect x="44.7" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="47.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestPayload]] (id 3383) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (14,823 Î¼s, 0.38%)</title><rect x="865.3" y="245" width="4.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="868.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1956) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (352 Î¼s, 0.01%)</title><rect x="984.7" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="987.66" y="95.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil] (id 7374) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,748 Î¼s, 0.07%)</title><rect x="913.7" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="916.74" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Out = K} (id 4705) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,378 Î¼s, 0.04%)</title><rect x="497.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="500.92" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Long] (expanded macros 0)  (339 Î¼s, 0.01%)</title><rect x="194.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="197.82" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (4,309 Î¼s, 0.11%)</title><rect x="989.6" y="149" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="992.58" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 4845) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,377 Î¼s, 0.04%)</title><rect x="446.8" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="449.76" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)]} (id 2783) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (723 Î¼s, 0.02%)</title><rect x="634.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="637.71" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,222 Î¼s, 0.24%)</title><rect x="839.0" y="181" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="842.01" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (2,643 Î¼s, 0.07%)</title><rect x="991.2" y="133" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="994.24" y="143.5" ></text>
</g>
<g >
<title>(=&gt; Float) =&gt; Int (expanded macros 0)   (462 Î¼s, 0.01%)</title><rect x="18.6" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="21.57" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Dependency :: List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,268 Î¼s, 0.11%)</title><rect x="389.7" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="392.66" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[Unit] (expanded macros 0)  (595 Î¼s, 0.02%)</title><rect x="247.9" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="250.93" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.User] :: shapeless.HNil]] (id 4217) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,680 Î¼s, 0.04%)</title><rect x="436.6" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="439.64" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Int] (expanded macros 0)  (365 Î¼s, 0.01%)</title><rect x="865.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="868.08" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1392) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (464 Î¼s, 0.01%)</title><rect x="384.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="387.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigration]] (id 2758) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (335,514 Î¼s, 8.59%)</title><rect x="628.3" y="245" width="101.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="631.30" y="255.5" >shapeless.La..</text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)]} (id 4556) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,082 Î¼s, 0.03%)</title><rect x="544.9" y="85" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="547.93" y="95.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)]} (id 8479) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (422 Î¼s, 0.01%)</title><rect x="831.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="834.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (10,863 Î¼s, 0.28%)</title><rect x="1079.8" y="165" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1082.76" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (890 Î¼s, 0.02%)</title><rect x="949.2" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="952.25" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] (expanded macros 0)  (508 Î¼s, 0.01%)</title><rect x="736.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="739.59" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)]} (id 6588) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,088 Î¼s, 0.03%)</title><rect x="563.4" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="566.37" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.ArtifactId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],org.scalasteward.core.data.ArtifactId] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)],Option[String]] :: shapeless.HNil] (id 1476) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (13,455 Î¼s, 0.34%)</title><rect x="399.1" y="197" width="4.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="402.12" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[List[org.scalasteward.core.forge.bitbucket.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[org.scalasteward.core.forge.bitbucket.Reviewer]] :: shapeless.HNil]] (id 3692) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,810 Î¼s, 0.10%)</title><rect x="426.7" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="429.66" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Repr = V} (expanded macros 3)   (1,768 Î¼s, 0.05%)</title><rect x="451.2" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="454.22" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (628 Î¼s, 0.02%)</title><rect x="729.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="732.31" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7656) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (443 Î¼s, 0.01%)</title><rect x="1066.2" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1069.21" y="175.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (362 Î¼s, 0.01%)</title><rect x="1121.4" y="101" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1124.36" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)]} (id 4557) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,137 Î¼s, 0.03%)</title><rect x="544.3" y="101" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="547.25" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Out = K} (id 4003) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (531 Î¼s, 0.01%)</title><rect x="739.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="742.83" y="207.5" ></text>
</g>
<g >
<title>(=&gt; cats.data.NonEmptyList[String]) =&gt; ?{def mkString_: ?} (expanded macros 0)   (384 Î¼s, 0.01%)</title><rect x="19.2" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="22.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,002 Î¼s, 0.03%)</title><rect x="1001.6" y="165" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.63" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,261 Î¼s, 0.06%)</title><rect x="978.6" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="981.56" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'f'} (id 6003) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (430 Î¼s, 0.01%)</title><rect x="268.4" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="271.39" y="127.5" ></text>
</g>
<g >
<title>hook.command.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (657 Î¼s, 0.02%)</title><rect x="283.9" y="245" width="0.2" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="286.87" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (545 Î¼s, 0.01%)</title><rect x="597.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="600.52" y="191.5" ></text>
</g>
<g >
<title>F[(Unit, org.scalasteward.core.repocache.RepoCache)] =&gt; ?{def map: ?} (expanded macros 0)  (508 Î¼s, 0.01%)</title><rect x="36.7" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="39.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)]} (id 4215) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (360 Î¼s, 0.01%)</title><rect x="436.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="439.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.CrossDependency] (id 1423) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (572 Î¼s, 0.01%)</title><rect x="1144.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1147.63" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Project :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (901 Î¼s, 0.02%)</title><rect x="881.8" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="884.77" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: org.scalasteward.core.data.Update :: org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (16,434 Î¼s, 0.42%)</title><rect x="560.5" y="197" width="5.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="563.55" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (331 Î¼s, 0.01%)</title><rect x="727.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="730.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = Options} (id 7085) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (649 Î¼s, 0.02%)</title><rect x="993.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="996.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1955) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (473 Î¼s, 0.01%)</title><rect x="984.9" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="987.87" y="79.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = R} (expanded macros 0)  (9,855 Î¼s, 0.25%)</title><rect x="829.6" y="213" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="832.59" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (784 Î¼s, 0.02%)</title><rect x="776.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="779.01" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.SbtVersion]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (9,334 Î¼s, 0.24%)</title><rect x="1138.7" y="197" width="2.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1141.66" y="207.5" ></text>
</g>
<g >
<title>Either[String,org.scalasteward.core.repoconfig.PullRequestUpdateFilter] =&gt; ?{def leftMap: ?} (expanded macros 0)  (345 Î¼s, 0.01%)</title><rect x="29.8" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="32.77" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7625) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (481 Î¼s, 0.01%)</title><rect x="1062.3" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1065.25" y="111.5" ></text>
</g>
<g >
<title>F[(List[String], List[org.scalasteward.core.data.Dependency], List[org.scalasteward.core.data.Resolver])] =&gt; ?{def map: ?} (expanded macros 0)  (514 Î¼s, 0.01%)</title><rect x="32.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="35.24" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (761 Î¼s, 0.02%)</title><rect x="1091.7" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1094.67" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Out = K} (id 4822) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,480 Î¼s, 0.04%)</title><rect x="474.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="477.67" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil] (id 7344) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,228 Î¼s, 0.08%)</title><rect x="827.6" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="830.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Scope[A]]{type Repr = V} (id 2194) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,891 Î¼s, 0.05%)</title><rect x="414.4" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="417.38" y="207.5" ></text>
</g>
<g >
<title>org.http4s.QueryParamEncoder[Int] (expanded macros 0)  (516 Î¼s, 0.01%)</title><rect x="337.2" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="340.21" y="255.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[org.http4s.Uri] (expanded macros 0)  (489 Î¼s, 0.01%)</title><rect x="259.3" y="245" width="0.1" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="262.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)]} (id 1647) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (547 Î¼s, 0.01%)</title><rect x="405.7" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="408.74" y="175.5" ></text>
</g>
<g >
<title>installations.type =&gt; ?{def traverse: ?} (expanded macros 0)  (718 Î¼s, 0.02%)</title><rect x="285.0" y="245" width="0.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="288.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[scala.util.matching.Regex]] :: Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,879 Î¼s, 0.07%)</title><rect x="1022.3" y="165" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1025.27" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Repr = R} (expanded macros 0)  (5,993 Î¼s, 0.15%)</title><rect x="742.0" y="213" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="744.99" y="223.5" ></text>
</g>
<g >
<title>capped.length.type =&gt; ?{def === : ?} (expanded macros 0)  (505 Î¼s, 0.01%)</title><rect x="194.8" y="245" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="197.77" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit] (expanded macros 0)  (16,521 Î¼s, 0.42%)</title><rect x="518.2" y="229" width="5.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="521.21" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (1,019 Î¼s, 0.03%)</title><rect x="975.2" y="133" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="978.23" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.MavenRepository]] (id 1943) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (34,444 Î¼s, 0.88%)</title><rect x="981.6" y="181" width="10.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="984.63" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.GroupRepoConfig]] (id 7105) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,211 Î¼s, 0.34%)</title><rect x="589.1" y="245" width="4.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="592.08" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (343 Î¼s, 0.01%)</title><rect x="869.5" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="872.53" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,968 Î¼s, 0.05%)</title><rect x="405.4" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="408.38" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil] (id 4778) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (2,555 Î¼s, 0.07%)</title><rect x="472.4" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="475.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)   (9,715 Î¼s, 0.25%)</title><rect x="971.8" y="149" width="2.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="974.79" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Boolean] (expanded macros 0)  (381 Î¼s, 0.01%)</title><rect x="889.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="892.43" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (898 Î¼s, 0.02%)</title><rect x="955.2" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="958.23" y="111.5" ></text>
</g>
<g >
<title>F[Either[Throwable,coursier.core.Repository]] =&gt; ?{def map: ?} (expanded macros 0)  (861 Î¼s, 0.02%)</title><rect x="43.9" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="46.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = Labels} (id 1752) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (838 Î¼s, 0.02%)</title><rect x="955.5" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="958.50" y="143.5" ></text>
</g>
<g >
<title>mr.mergeStatus.type =&gt; ?{def === : ?} (expanded macros 0)  (530 Î¼s, 0.01%)</title><rect x="333.5" y="245" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="336.55" y="255.5" ></text>
</g>
<g >
<title>F[Vector[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def map: ?} (expanded macros 0)  (1,337 Î¼s, 0.03%)</title><rect x="102.8" y="245" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="105.77" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.CommitsConfig] :: Some[org.scalasteward.core.repoconfig.PullRequestsConfig] :: Some[org.scalasteward.core.repoconfig.ScalafmtConfig] :: Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (7,502 Î¼s, 0.19%)</title><rect x="1054.0" y="197" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.00" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)],org.scalasteward.core.git.Sha1] :: List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)],List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)],Option[org.scalasteward.core.repoconfig.RepoConfig]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)],Option[String]] :: shapeless.HNil]] (id 6860) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,217 Î¼s, 0.47%)</title><rect x="583.6" y="213" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="586.57" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)]} (id 2775) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,291 Î¼s, 0.03%)</title><rect x="725.9" y="53" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="728.95" y="63.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,450 Î¼s, 0.24%)</title><rect x="608.9" y="181" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="611.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7650) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (479 Î¼s, 0.01%)</title><rect x="1068.3" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1071.25" y="79.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8337) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (997 Î¼s, 0.03%)</title><rect x="1096.6" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1099.57" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,597 Î¼s, 0.32%)</title><rect x="489.5" y="133" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="492.48" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.update.artifact.ArtifactChange] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)],List[org.scalasteward.core.update.artifact.ArtifactChange]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (822 Î¼s, 0.02%)</title><rect x="1170.5" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1173.55" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (715 Î¼s, 0.02%)</title><rect x="850.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="853.10" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (expanded macros 3)   (1,778 Î¼s, 0.05%)</title><rect x="1112.5" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1115.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2452) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,685 Î¼s, 0.04%)</title><rect x="852.0" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="855.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = Labels} (id 8318) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,462 Î¼s, 0.04%)</title><rect x="1101.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1104.86" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (2,696 Î¼s, 0.07%)</title><rect x="946.4" y="149" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="949.42" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = R} (expanded macros 0)   (3,982 Î¼s, 0.10%)</title><rect x="994.2" y="213" width="1.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="997.21" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Comment] (expanded macros 0)  (6,673 Î¼s, 0.17%)</title><rect x="430.6" y="229" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="433.55" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1713) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,152 Î¼s, 0.03%)</title><rect x="961.5" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="964.49" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (715 Î¼s, 0.02%)</title><rect x="1183.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1186.61" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubLabels]{type Repr = V} (expanded macros 3)   (786 Î¼s, 0.02%)</title><rect x="893.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="896.24" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 5527) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,099 Î¼s, 0.05%)</title><rect x="789.9" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7844) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (641 Î¼s, 0.02%)</title><rect x="1053.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1056.06" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)   (1,467 Î¼s, 0.04%)</title><rect x="936.8" y="181" width="0.5" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="939.81" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Out = K} (id 4964) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,219 Î¼s, 0.03%)</title><rect x="886.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="889.47" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 4265) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (618 Î¼s, 0.02%)</title><rect x="757.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="760.44" y="207.5" ></text>
</g>
<g >
<title>((Option[org.scalasteward.core.data.SemVer], Option[org.scalasteward.core.data.SemVer])) =&gt; ?{def tupled: ?} (expanded macros 0)  (943 Î¼s, 0.02%)</title><rect x="14.1" y="245" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="17.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2298) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,147 Î¼s, 0.05%)</title><rect x="835.3" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="838.25" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.UserOut] (expanded macros 0)  (660 Î¼s, 0.02%)</title><rect x="775.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="778.81" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)   (518 Î¼s, 0.01%)</title><rect x="1036.6" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1039.59" y="159.5" ></text>
</g>
<g >
<title>artifactId.type =&gt; ?{def === : ?} (expanded macros 0)  (376 Î¼s, 0.01%)</title><rect x="192.6" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="195.57" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.buildtool.mill.MillModule]] =&gt; ?{def map: ?} (expanded macros 0)  (560 Î¼s, 0.01%)</title><rect x="52.7" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="55.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,085 Î¼s, 0.10%)</title><rect x="960.2" y="117" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="963.22" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] (id 4539) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (46,459 Î¼s, 1.19%)</title><rect x="534.8" y="245" width="14.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="537.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7608) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,264 Î¼s, 0.03%)</title><rect x="1058.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1061.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8238) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,095 Î¼s, 0.05%)</title><rect x="1104.8" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1107.79" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2086) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (338 Î¼s, 0.01%)</title><rect x="976.0" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="978.98" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (expanded macros 0)  (1,330 Î¼s, 0.03%)</title><rect x="1165.7" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1168.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CommentContent]{type Repr = V} (expanded macros 3)   (598 Î¼s, 0.02%)</title><rect x="421.3" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="424.35" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,573 Î¼s, 0.17%)</title><rect x="581.6" y="197" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="584.58" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil] (id 4110) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (8,428 Î¼s, 0.22%)</title><rect x="748.7" y="197" width="2.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="751.65" y="207.5" ></text>
</g>
<g >
<title>BuildToolDispatcher.this.allBuildTools.type =&gt; ?{def filterA: ?} (expanded macros 0)  (370 Î¼s, 0.01%)</title><rect x="23.5" y="245" width="0.1" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="26.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5489) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (506 Î¼s, 0.01%)</title><rect x="905.4" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="908.44" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)]} (id 4050) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (395 Î¼s, 0.01%)</title><rect x="875.4" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.41" y="79.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branch] (expanded macros 0)  (12,749 Î¼s, 0.33%)</title><rect x="730.5" y="229" width="3.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="733.52" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Repr = V} (expanded macros 3)   (722 Î¼s, 0.02%)</title><rect x="735.4" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="738.44" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)   (434 Î¼s, 0.01%)</title><rect x="351.6" y="229" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="354.65" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],org.scalasteward.core.forge.bitbucket.CommentContent] :: shapeless.HNil] (id 3636) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (1,395 Î¼s, 0.04%)</title><rect x="424.5" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="427.45" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (360 Î¼s, 0.01%)</title><rect x="1163.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1166.18" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (17,321 Î¼s, 0.44%)</title><rect x="488.1" y="165" width="5.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="491.05" y="175.5" ></text>
</g>
<g >
<title>String(&quot;ForGroupId&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (655 Î¼s, 0.02%)</title><rect x="154.6" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="157.63" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Page[org.scalasteward.core.forge.bitbucketserver.Json.PR]] =&gt; ?{def map: ?} (expanded macros 0)  (679 Î¼s, 0.02%)</title><rect x="115.6" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="118.59" y="255.5" ></text>
</g>
<g >
<title>((=&gt; String) =&gt; F[Unit]) =&gt; F[?] (expanded macros 0)   (1,699 Î¼s, 0.04%)</title><rect x="10.0" y="245" width="0.5" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Repr = V} (expanded macros 3)   (958 Î¼s, 0.02%)</title><rect x="867.0" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="870.01" y="207.5" ></text>
</g>
<g >
<title>((Boolean, String)) =&gt; ?{def pure: ?} (expanded macros 0)  (411 Î¼s, 0.01%)</title><rect x="11.3" y="245" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="14.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,312 Î¼s, 0.08%)</title><rect x="553.0" y="181" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="555.96" y="191.5" ></text>
</g>
<g >
<title>F[List[(org.scalasteward.core.buildtool.BuildRoot, List[org.scalasteward.core.buildtool.BuildToolAlg[F]])]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,620 Î¼s, 0.04%)</title><rect x="44.9" y="245" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="47.94" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (411 Î¼s, 0.01%)</title><rect x="741.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="744.15" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (388 Î¼s, 0.01%)</title><rect x="434.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="437.76" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = R} (expanded macros 0)  (522 Î¼s, 0.01%)</title><rect x="994.0" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="997.05" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (946 Î¼s, 0.02%)</title><rect x="868.6" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="871.61" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 4534) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,841 Î¼s, 0.10%)</title><rect x="554.1" y="197" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="557.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Repr = R} (expanded macros 0)  (30,836 Î¼s, 0.79%)</title><rect x="537.0" y="213" width="9.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="539.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.Reviewer]{type Repr = V} (expanded macros 3)   (615 Î¼s, 0.02%)</title><rect x="428.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="431.81" y="207.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (412 Î¼s, 0.01%)</title><rect x="271.7" y="229" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="274.66" y="239.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (573 Î¼s, 0.01%)</title><rect x="62.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="65.25" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (12,699 Î¼s, 0.33%)</title><rect x="1125.9" y="213" width="3.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1128.92" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2485) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,549 Î¼s, 0.07%)</title><rect x="624.3" y="181" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="627.33" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)]} (id 4562) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,034 Î¼s, 0.03%)</title><rect x="540.8" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="543.82" y="191.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[_] (expanded macros 0)  (459 Î¼s, 0.01%)</title><rect x="273.0" y="229" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="276.03" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2403) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,372 Î¼s, 0.04%)</title><rect x="846.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="849.81" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (11,382 Î¼s, 0.29%)</title><rect x="383.1" y="229" width="3.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="386.06" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (494 Î¼s, 0.01%)</title><rect x="939.5" y="85" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="942.46" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (4,762 Î¼s, 0.12%)</title><rect x="1131.4" y="165" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1134.36" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)]} (id 4681) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,399 Î¼s, 0.04%)</title><rect x="532.0" y="101" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="535.03" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestFrequency] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (9,967 Î¼s, 0.26%)</title><rect x="1026.7" y="197" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1029.72" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigration] (expanded macros 0)  (328,552 Î¼s, 8.42%)</title><rect x="630.4" y="229" width="99.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="633.40" y="239.5" >io.circe.gen..</text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8331) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (976 Î¼s, 0.02%)</title><rect x="1097.5" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1100.46" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.github.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)],List[org.scalasteward.core.forge.github.Repository]] :: shapeless.HNil]] (id 5325) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,278 Î¼s, 0.06%)</title><rect x="782.1" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="785.10" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Out = K} (id 4769) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,423 Î¼s, 0.04%)</title><rect x="469.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="472.23" y="207.5" ></text>
</g>
<g >
<title>List[org.http4s.Uri] =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (776 Î¼s, 0.02%)</title><rect x="141.9" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="144.86" y="255.5" ></text>
</g>
<g >
<title>x$12.type =&gt; ?{def max: ?} (expanded macros 0)  (748 Î¼s, 0.02%)</title><rect x="1180.5" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1183.48" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubLabels]{type Out = K} (id 5286) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (483 Î¼s, 0.01%)</title><rect x="893.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="896.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,205 Î¼s, 0.08%)</title><rect x="1028.8" y="149" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1031.77" y="159.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (610 Î¼s, 0.02%)</title><rect x="516.8" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="519.80" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (expanded macros 3)   (1,529 Î¼s, 0.04%)</title><rect x="1030.6" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1033.62" y="207.5" ></text>
</g>
<g >
<title>&quot;), x$2: ? &gt;: String(&quot; (717 Î¼s, 0.02%)</title><rect x="352.3" y="229" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="355.33" y="239.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)   (604 Î¼s, 0.02%)</title><rect x="567.3" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="570.26" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (expanded macros 3)   (1,688 Î¼s, 0.04%)</title><rect x="1025.8" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1028.77" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Out = K} (id 4037) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,067 Î¼s, 0.03%)</title><rect x="872.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="875.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Repr = V} (id 3976) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (546 Î¼s, 0.01%)</title><rect x="431.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="434.39" y="207.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.update.data.UpdateState.DependencyOutdated])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (550 Î¼s, 0.01%)</title><rect x="33.8" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="36.82" y="255.5" ></text>
</g>
<g >
<title>x.scalafmt.type =&gt; ?{def |+| : ?} (expanded macros 0)  (415 Î¼s, 0.01%)</title><rect x="1189.6" y="245" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1192.60" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (598 Î¼s, 0.02%)</title><rect x="733.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="736.90" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)]} (id 2198) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,543 Î¼s, 0.04%)</title><rect x="417.3" y="165" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="420.32" y="175.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (339 Î¼s, 0.01%)</title><rect x="55.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="58.72" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[T,eu.timepit.refined.char.Digit]{type R = RA} (expanded macros 0)  (437 Î¼s, 0.01%)</title><rect x="307.2" y="181" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Out = K} (id 6575) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,190 Î¼s, 0.06%)</title><rect x="557.9" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="560.86" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Repo] =&gt; ?{def flatMap: ?} (expanded macros 0)  (485 Î¼s, 0.01%)</title><rect x="115.8" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="118.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,org.scalasteward.core.data.CrossDependency :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (12,779 Î¼s, 0.33%)</title><rect x="837.9" y="197" width="3.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="840.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7653) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (494 Î¼s, 0.01%)</title><rect x="1067.3" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1070.26" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] (expanded macros 0)  (1,419 Î¼s, 0.04%)</title><rect x="1037.5" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1040.52" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Out = K} (id 4138) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (540 Î¼s, 0.01%)</title><rect x="433.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="436.38" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (388 Î¼s, 0.01%)</title><rect x="333.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="336.59" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (374 Î¼s, 0.01%)</title><rect x="432.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="435.46" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Dependency]{type Repr = V} (expanded macros 3)   (1,679 Î¼s, 0.04%)</title><rect x="396.2" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="399.21" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7848) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (466 Î¼s, 0.01%)</title><rect x="1052.8" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1055.78" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (559 Î¼s, 0.01%)</title><rect x="997.2" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1000.21" y="223.5" ></text>
</g>
<g >
<title>cats.arrow.Compose[monocle.Optional] (expanded macros 0)  (932 Î¼s, 0.02%)</title><rect x="347.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="350.77" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut]] (id 4262) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,943 Î¼s, 0.25%)</title><rect x="756.5" y="245" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="759.51" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (383 Î¼s, 0.01%)</title><rect x="439.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="442.48" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Repr = V} (id 4723) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,271 Î¼s, 0.06%)</title><rect x="485.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="488.62" y="207.5" ></text>
</g>
<g >
<title>Int(0) =&gt; ?{def days: ?} (expanded macros 0)  (342 Î¼s, 0.01%)</title><rect x="130.0" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="132.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Repr = V} (id 4096) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (803 Î¼s, 0.02%)</title><rect x="746.8" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="749.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.coursier.VersionsCache.Value]{type Repr = R} (expanded macros 0)  (51,678 Î¼s, 1.32%)</title><rect x="357.8" y="213" width="15.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="360.77" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (688 Î¼s, 0.02%)</title><rect x="894.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="897.56" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.NewPullRequestData] =&gt; ?{def flatMap: ?} (expanded macros 0)  (819 Î¼s, 0.02%)</title><rect x="116.3" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="119.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Project with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Project] :: shapeless.HNil]] (id 4200) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,896 Î¼s, 0.05%)</title><rect x="882.0" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="885.04" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Credentials]{type Repr = V} (expanded macros 3)   (906 Î¼s, 0.02%)</title><rect x="404.7" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="407.71" y="207.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def void: ?} (expanded macros 0)  (3,439 Î¼s, 0.09%)</title><rect x="50.8" y="245" width="1.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="53.85" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.buildtool.mill.MillModule]] (expanded macros 0)  (1,508 Î¼s, 0.04%)</title><rect x="285.9" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="288.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,087 Î¼s, 0.03%)</title><rect x="478.5" y="165" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="481.45" y="175.5" ></text>
</g>
<g >
<title>F[(A, scala.concurrent.duration.FiniteDuration)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (396 Î¼s, 0.01%)</title><rect x="31.8" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="34.80" y="255.5" ></text>
</g>
<g >
<title>((=&gt; String) =&gt; F[Unit]) =&gt; F[Unit] (expanded macros 0)   (2,685 Î¼s, 0.07%)</title><rect x="10.5" y="245" width="0.8" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="13.51" y="255.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Resource[F,Option[better.files.File]] =&gt; ?{def void: ?} (expanded macros 0)  (2,376 Î¼s, 0.06%)</title><rect x="229.4" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="232.37" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (579 Î¼s, 0.01%)</title><rect x="592.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="595.06" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]{type R = RB} (expanded macros 0)  (2,566 Î¼s, 0.07%)</title><rect x="267.8" y="165" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="270.82" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,363 Î¼s, 0.03%)</title><rect x="1160.0" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1163.03" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Version :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,576 Î¼s, 0.09%)</title><rect x="397.8" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="400.81" y="175.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Greater[shapeless._0]] (expanded macros 0)  (4,658 Î¼s, 0.12%)</title><rect x="271.5" y="245" width="1.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="274.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8269) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,045 Î¼s, 0.03%)</title><rect x="1115.5" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1118.46" y="159.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def take: ?} (expanded macros 0)  (863 Î¼s, 0.02%)</title><rect x="20.8" y="245" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="23.83" y="255.5" ></text>
</g>
<g >
<title>x.buildRoots.type =&gt; ?{def |+| : ?} (expanded macros 0)  (844 Î¼s, 0.02%)</title><rect x="1187.1" y="245" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1190.11" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2084) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (365 Î¼s, 0.01%)</title><rect x="976.4" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="979.41" y="95.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Dependency] (expanded macros 0)  (407 Î¼s, 0.01%)</title><rect x="147.4" y="213" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="150.43" y="223.5" ></text>
</g>
<g >
<title>configFileCandidates.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (420 Î¼s, 0.01%)</title><rect x="260.2" y="245" width="0.1" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="263.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,String :: Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,380 Î¼s, 0.06%)</title><rect x="912.9" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="915.90" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: Option[org.scalasteward.core.repoconfig.VersionPattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Option[org.scalasteward.core.repoconfig.VersionPattern]] :: shapeless.HNil] (id 8190) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,781 Î¼s, 0.15%)</title><rect x="596.5" y="197" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="599.47" y="207.5" ></text>
</g>
<g >
<title>dependency.resolvers.type =&gt; ?{def parFlatTraverse: ?} (expanded macros 0)  (1,874 Î¼s, 0.05%)</title><rect x="264.9" y="245" width="0.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="267.90" y="255.5" ></text>
</g>
<g >
<title>x$9.name.type =&gt; ?{def === : ?} (expanded macros 0)  (459 Î¼s, 0.01%)</title><rect x="1186.7" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1189.72" y="255.5" ></text>
</g>
<g >
<title>Unit =&gt; Throwable (expanded macros 0)   (524 Î¼s, 0.01%)</title><rect x="191.6" y="245" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="194.62" y="255.5" ></text>
</g>
<g >
<title>(=&gt; Double) =&gt; Int (expanded macros 0)   (465 Î¼s, 0.01%)</title><rect x="18.4" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="21.40" y="255.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.buildtool.BuildRoot] =&gt; ?{def traverse_: ?} (expanded macros 0)  (492 Î¼s, 0.01%)</title><rect x="142.4" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="145.39" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]] (expanded macros 0)  (374 Î¼s, 0.01%)</title><rect x="325.6" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="328.61" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Project] (expanded macros 0)  (6,252 Î¼s, 0.16%)</title><rect x="433.1" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="436.09" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.CommitOut] (expanded macros 0)  (946 Î¼s, 0.02%)</title><rect x="759.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="762.07" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Scope[A]]] (id 2188) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (31,271 Î¼s, 0.80%)</title><rect x="410.9" y="245" width="9.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="413.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (id 1009) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (682 Î¼s, 0.02%)</title><rect x="1142.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1145.57" y="207.5" ></text>
</g>
<g >
<title>F[Map[String,Int]] =&gt; ?{def map: ?} (expanded macros 0)  (694 Î¼s, 0.02%)</title><rect x="61.5" y="245" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="64.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)]} (id 7198) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (333 Î¼s, 0.01%)</title><rect x="1007.4" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1010.42" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: shapeless.HNil] (id 5264) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,616 Î¼s, 0.04%)</title><rect x="891.6" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="894.62" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.GroupId] (expanded macros 0)   (649 Î¼s, 0.02%)</title><rect x="843.4" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="846.41" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.IvyRepository]] (id 2056) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (36,234 Î¼s, 0.93%)</title><rect x="970.7" y="181" width="10.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="973.68" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.io.WorkspaceAlg[F] (expanded macros 0)  (638 Î¼s, 0.02%)</title><rect x="346.3" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="349.30" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Out = K} (id 4635) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,763 Î¼s, 0.05%)</title><rect x="510.8" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="513.83" y="207.5" ></text>
</g>
<g >
<title>updatedMergeRequest.type =&gt; ?{def map: ?} (expanded macros 0)  (531 Î¼s, 0.01%)</title><rect x="1174.6" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1177.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7633) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,279 Î¼s, 0.03%)</title><rect x="1063.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1066.93" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (494 Î¼s, 0.01%)</title><rect x="63.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="66.88" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,626 Î¼s, 0.17%)</title><rect x="855.4" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="858.44" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Repr = R} (expanded macros 0)  (5,164 Î¼s, 0.13%)</title><rect x="731.1" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="734.11" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.UpdatesConfig] (expanded macros 0)  (785 Î¼s, 0.02%)</title><rect x="1073.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1076.29" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.data.Comment]] (id 4295) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,842 Î¼s, 0.23%)</title><rect x="439.6" y="245" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="442.60" y="255.5" ></text>
</g>
<g >
<title>String =&gt; ?{def r: ?} (expanded macros 0)  (579 Î¼s, 0.01%)</title><rect x="152.3" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="155.30" y="255.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.data.CrossDependency] =&gt; io.circe.Json (expanded macros 0)   (538 Î¼s, 0.01%)</title><rect x="844.6" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="847.59" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (450 Î¼s, 0.01%)</title><rect x="473.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="475.99" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (10,714 Î¼s, 0.27%)</title><rect x="1126.5" y="197" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1129.52" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Long] (expanded macros 0)  (371 Î¼s, 0.01%)</title><rect x="793.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="796.09" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (561 Î¼s, 0.01%)</title><rect x="119.1" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="122.14" y="239.5" ></text>
</g>
<g >
<title>F[Option[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def void: ?} (expanded macros 0)  (1,218 Î¼s, 0.03%)</title><rect x="63.7" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="66.66" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7884) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (553 Î¼s, 0.01%)</title><rect x="1086.5" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1089.53" y="63.5" ></text>
</g>
<g >
<title>scala.reflect.ClassTag[String] (expanded macros 1)  (430 Î¼s, 0.01%)</title><rect x="354.1" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="357.11" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (474 Î¼s, 0.01%)</title><rect x="58.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.24" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (1,907 Î¼s, 0.05%)</title><rect x="843.1" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="846.07" y="191.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.forge.data.RepoOut, org.scalasteward.core.forge.data.RepoOut)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (445 Î¼s, 0.01%)</title><rect x="38.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="41.95" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.http4s.Status] (expanded macros 0)  (884 Î¼s, 0.02%)</title><rect x="1178.6" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1181.62" y="239.5" ></text>
</g>
<g >
<title>info.dependency.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (1,463 Î¼s, 0.04%)</title><rect x="284.3" y="245" width="0.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="287.31" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)],Boolean] :: shapeless.HNil] (id 4981) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,671 Î¼s, 0.07%)</title><rect x="889.0" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="891.99" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],String] :: shapeless.HNil] (id 3420) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,479 Î¼s, 0.04%)</title><rect x="862.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="865.11" y="207.5" ></text>
</g>
<g >
<title>millBuildVersion.type =&gt; ?{def toSeq: ?} (expanded macros 0)  (356 Î¼s, 0.01%)</title><rect x="333.0" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="335.96" y="255.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def onError: ?} (expanded macros 0)  (1,414 Î¼s, 0.04%)</title><rect x="101.7" y="245" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="104.66" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Comment] (expanded macros 0)  (1,001 Î¼s, 0.03%)</title><rect x="314.4" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="317.39" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,Int :: String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,941 Î¼s, 0.28%)</title><rect x="529.5" y="165" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="532.46" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8251) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,062 Î¼s, 0.03%)</title><rect x="1108.1" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1111.14" y="175.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]] (expanded macros 0)  (3,269 Î¼s, 0.08%)</title><rect x="270.5" y="245" width="1.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="273.53" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[List[A] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[A]] :: shapeless.HNil]] (id 4086) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,649 Î¼s, 0.04%)</title><rect x="753.0" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="755.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Out = K} (id 6577) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,166 Î¼s, 0.06%)</title><rect x="558.5" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="561.52" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (585 Î¼s, 0.01%)</title><rect x="303.0" y="213" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="306.03" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (591 Î¼s, 0.02%)</title><rect x="744.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="747.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ForkPayload]{type Repr = V} (expanded macros 3)   (1,020 Î¼s, 0.03%)</title><rect x="898.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="901.76" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)  (1,127 Î¼s, 0.03%)</title><rect x="1036.4" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1039.44" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,183 Î¼s, 0.03%)</title><rect x="297.2" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="300.18" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.mill.Modules] (expanded macros 0)  (1,322 Î¼s, 0.03%)</title><rect x="308.6" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="311.58" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8247) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,270 Î¼s, 0.03%)</title><rect x="1110.8" y="101" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1113.79" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4512) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,023 Î¼s, 0.03%)</title><rect x="465.6" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="468.55" y="191.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (349 Î¼s, 0.01%)</title><rect x="140.7" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="143.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.Reviewer]{type Repr = V} (id 3720) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (460 Î¼s, 0.01%)</title><rect x="429.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="431.99" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)   (887 Î¼s, 0.02%)</title><rect x="936.5" y="181" width="0.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="939.54" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (953 Î¼s, 0.02%)</title><rect x="1111.2" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1114.17" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Repr = V} (id 4038) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,229 Î¼s, 0.03%)</title><rect x="872.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="875.87" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)]} (id 5323) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (360 Î¼s, 0.01%)</title><rect x="781.9" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="784.94" y="191.5" ></text>
</g>
<g >
<title>io.circe.export.Exported[io.circe.Decoder[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] (expanded macros 0)   (412 Î¼s, 0.01%)</title><rect x="586.6" y="149" width="0.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="589.55" y="159.5" ></text>
</g>
<g >
<title>replacementsByPath.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (419 Î¼s, 0.01%)</title><rect x="350.5" y="245" width="0.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="353.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CommentContent]{type Repr = V} (id 3647) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (477 Î¼s, 0.01%)</title><rect x="421.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="424.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (10,094 Î¼s, 0.26%)</title><rect x="1129.8" y="213" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1132.75" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Condition]] (id 3985) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,855 Î¼s, 0.20%)</title><rect x="736.7" y="245" width="2.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="739.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,365 Î¼s, 0.27%)</title><rect x="723.4" y="149" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="726.42" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)]} (id 2362) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,322 Î¼s, 0.03%)</title><rect x="609.4" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="612.37" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'f'} (id 6034) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (389 Î¼s, 0.01%)</title><rect x="304.8" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="307.79" y="127.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version.Component] (expanded macros 0)  (511 Î¼s, 0.01%)</title><rect x="194.5" y="213" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="197.55" y="223.5" ></text>
</g>
<g >
<title>F[(Map[String,Int], org.scalasteward.core.forge.gitlab.MergeRequestPayload)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (421 Î¼s, 0.01%)</title><rect x="34.1" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="37.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = R} (expanded macros 0)   (3,341 Î¼s, 0.09%)</title><rect x="1088.7" y="213" width="1.0" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1091.70" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: shapeless.HNil] (id 4476) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,053 Î¼s, 0.05%)</title><rect x="884.6" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="887.59" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7171) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (740 Î¼s, 0.02%)</title><rect x="1003.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1006.37" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Version] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (21,614 Î¼s, 0.55%)</title><rect x="366.9" y="181" width="6.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="369.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = R} (expanded macros 0)  (2,975 Î¼s, 0.08%)</title><rect x="1152.7" y="213" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1155.68" y="223.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.MergeRequestOut] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,094 Î¼s, 0.03%)</title><rect x="120.3" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="123.29" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 5526) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,445 Î¼s, 0.06%)</title><rect x="789.8" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.82" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2113) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (570 Î¼s, 0.01%)</title><rect x="980.7" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="983.73" y="143.5" ></text>
</g>
<g >
<title>metadata.versionScheme.type =&gt; ?{def tupleLeft: ?} (expanded macros 0)  (526 Î¼s, 0.01%)</title><rect x="332.6" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="335.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.CrossDependency]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (912 Î¼s, 0.02%)</title><rect x="1144.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1147.81" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: shapeless.HNil] (id 4498) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,199 Î¼s, 0.03%)</title><rect x="777.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="780.85" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (14,151 Î¼s, 0.36%)</title><rect x="593.9" y="229" width="4.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="596.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7935) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,041 Î¼s, 0.03%)</title><rect x="1053.3" y="213" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1056.25" y="223.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def lastOption: ?} (expanded macros 0)  (508 Î¼s, 0.01%)</title><rect x="20.7" y="245" width="0.1" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="23.68" y="255.5" ></text>
</g>
<g >
<title>x.pullRequests.type =&gt; ?{def |+| : ?} (expanded macros 0)  (424 Î¼s, 0.01%)</title><rect x="1189.3" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1192.32" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Char] (expanded macros 0)  (356 Î¼s, 0.01%)</title><rect x="1183.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1186.27" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] (expanded macros 0)  (721 Î¼s, 0.02%)</title><rect x="1072.4" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.37" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (485 Î¼s, 0.01%)</title><rect x="968.1" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="971.09" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Out = K} (id 7110) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (511 Î¼s, 0.01%)</title><rect x="590.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="593.23" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 4794) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,920 Î¼s, 0.10%)</title><rect x="460.6" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="463.58" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (375 Î¼s, 0.01%)</title><rect x="761.9" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="764.95" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.VersionPattern] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,322 Î¼s, 0.03%)</title><rect x="596.0" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="598.96" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (428 Î¼s, 0.01%)</title><rect x="406.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="409.70" y="191.5" ></text>
</g>
<g >
<title>Option[F[org.scalasteward.core.forge.bitbucket.RepositoryResponse]] =&gt; ?{def sequence: ?} (expanded macros 0)  (655 Î¼s, 0.02%)</title><rect x="144.3" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="147.34" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Boolean]] (expanded macros 0)  (531 Î¼s, 0.01%)</title><rect x="1010.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1013.24" y="191.5" ></text>
</g>
<g >
<title>Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry] =&gt; Iterable[(org.http4s.Uri, org.scalasteward.core.nurture.PullRequestRepository.Entry)] (expanded macros 0)  (495 Î¼s, 0.01%)</title><rect x="323.3" y="229" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="326.32" y="239.5" ></text>
</g>
<g >
<title>String(&quot;ForArtifactId&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (602 Î¼s, 0.02%)</title><rect x="154.5" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="157.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4107) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (347 Î¼s, 0.01%)</title><rect x="747.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="750.38" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Order[Int] (expanded macros 0)  (437 Î¼s, 0.01%)</title><rect x="334.4" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="337.37" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Project with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Project] :: shapeless.HNil] (id 4201) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,584 Î¼s, 0.04%)</title><rect x="882.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="885.14" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (554 Î¼s, 0.01%)</title><rect x="759.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="762.35" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil,List[org.scalasteward.core.edit.scalafix.ScalafixMigration] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,272 Î¼s, 0.03%)</title><rect x="1152.3" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1155.29" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,620 Î¼s, 0.04%)</title><rect x="949.0" y="117" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="952.03" y="127.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.util.Timestamp] =&gt; io.circe.Json (expanded macros 0)   (453 Î¼s, 0.01%)</title><rect x="574.1" y="181" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="577.06" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (370 Î¼s, 0.01%)</title><rect x="900.0" y="165" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="902.99" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (954 Î¼s, 0.02%)</title><rect x="1009.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1012.79" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (expanded macros 3)   (2,138 Î¼s, 0.05%)</title><rect x="606.5" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="609.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.DependencyInfo]{type Repr = V} (expanded macros 3)   (1,037 Î¼s, 0.03%)</title><rect x="389.0" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="391.99" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,456 Î¼s, 0.22%)</title><rect x="1127.2" y="181" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1130.20" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1849) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (338 Î¼s, 0.01%)</title><rect x="944.0" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="947.02" y="127.5" ></text>
</g>
<g >
<title>dependency.type =&gt; ?{def as: ?} (expanded macros 0)  (439 Î¼s, 0.01%)</title><rect x="265.5" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="268.47" y="255.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,861 Î¼s, 0.10%)</title><rect x="46.2" y="245" width="1.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="49.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.CreateComment] (expanded macros 0)  (710 Î¼s, 0.02%)</title><rect x="311.8" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="314.77" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,700 Î¼s, 0.12%)</title><rect x="1013.8" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1016.80" y="207.5" ></text>
</g>
<g >
<title>chunks.type =&gt; ?{def mapFilter: ?} (expanded macros 0)  (2,225 Î¼s, 0.06%)</title><rect x="258.1" y="245" width="0.6" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="261.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 2088) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,985 Î¼s, 0.13%)</title><rect x="976.8" y="149" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="979.83" y="159.5" ></text>
</g>
<g >
<title>header.head.value.type =&gt; ?{def toIntOption: ?} (expanded macros 0)  (510 Î¼s, 0.01%)</title><rect x="283.6" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="286.60" y="255.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (514 Î¼s, 0.01%)</title><rect x="332.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="335.81" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (680 Î¼s, 0.02%)</title><rect x="1154.6" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1157.63" y="223.5" ></text>
</g>
<g >
<title>cats.Alternative[List] (expanded macros 0)  (339 Î¼s, 0.01%)</title><rect x="194.9" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="197.93" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestOut] (expanded macros 0)  (2,788 Î¼s, 0.07%)</title><rect x="317.4" y="245" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="320.38" y="255.5" ></text>
</g>
<g >
<title>from.major.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,336 Î¼s, 0.03%)</title><rect x="276.2" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="279.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Update :: org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,110 Î¼s, 0.34%)</title><rect x="561.6" y="181" width="3.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="564.55" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (7,403 Î¼s, 0.19%)</title><rect x="1076.0" y="197" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1078.97" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)]} (id 4642) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,570 Î¼s, 0.04%)</title><rect x="513.9" y="165" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="516.89" y="175.5" ></text>
</g>
<g >
<title>F[ProcessBuilder] =&gt; ?{def flatMap: ?} (expanded macros 0)  (522 Î¼s, 0.01%)</title><rect x="70.1" y="245" width="0.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="73.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 2070) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (387 Î¼s, 0.01%)</title><rect x="974.1" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="977.05" y="111.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['a',Char] (expanded macros 0)  (2,072 Î¼s, 0.05%)</title><rect x="268.9" y="133" width="0.7" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="271.94" y="143.5" ></text>
</g>
<g >
<title>cron4s.datetime.DateTimeCron[cron4s.expr.DateCronExpr] (expanded macros 0)  (360 Î¼s, 0.01%)</title><rect x="274.8" y="229" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="277.82" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,724 Î¼s, 0.04%)</title><rect x="789.3" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="792.30" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForGroupId] (expanded macros 0)  (15,836 Î¼s, 0.41%)</title><rect x="615.2" y="229" width="4.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="618.21" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branches]] (id 3955) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,833 Î¼s, 0.20%)</title><rect x="734.4" y="245" width="2.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="737.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = D} (expanded macros 0)  (8,077 Î¼s, 0.21%)</title><rect x="954.7" y="149" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="957.74" y="159.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def map: ?} (expanded macros 0)  (521 Î¼s, 0.01%)</title><rect x="67.2" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="70.25" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[String]]] (expanded macros 0)  (530 Î¼s, 0.01%)</title><rect x="869.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="872.47" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (607 Î¼s, 0.02%)</title><rect x="401.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="404.71" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (5,944 Î¼s, 0.15%)</title><rect x="1051.0" y="165" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1053.99" y="175.5" ></text>
</g>
<g >
<title>(=&gt; scala.collection.immutable.LazyList[List[org.scalasteward.core.edit.update.data.VersionPosition]]) =&gt; ?{def #:: : ?} (expanded macros 0)  (426 Î¼s, 0.01%)</title><rect x="19.5" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="22.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Out = K} (id 3413) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (408 Î¼s, 0.01%)</title><rect x="861.3" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="864.29" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)]} (id 7200) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (335 Î¼s, 0.01%)</title><rect x="1007.0" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1009.96" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 4741) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (989 Î¼s, 0.03%)</title><rect x="487.8" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="490.75" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)],Option[String]] :: shapeless.HNil] (id 1395) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,889 Î¼s, 0.10%)</title><rect x="385.3" y="197" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="388.32" y="207.5" ></text>
</g>
<g >
<title>state.type =&gt; ?{def === : ?} (expanded macros 0)  (3,341 Î¼s, 0.09%)</title><rect x="1171.3" y="245" width="1.0" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1174.29" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (720 Î¼s, 0.02%)</title><rect x="400.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="403.28" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (776 Î¼s, 0.02%)</title><rect x="990.6" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="993.65" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) &lt;: String],Lub0] (expanded macros 0)  (455 Î¼s, 0.01%)</title><rect x="1082.1" y="85" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1085.08" y="95.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7626) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (509 Î¼s, 0.01%)</title><rect x="1061.9" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1064.90" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1847) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (376 Î¼s, 0.01%)</title><rect x="944.4" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="947.44" y="95.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (466 Î¼s, 0.01%)</title><rect x="142.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="144.95" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Repr = R} (expanded macros 0)  (19,218 Î¼s, 0.49%)</title><rect x="509.7" y="213" width="5.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="512.74" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Repr = V} (id 4020) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (842 Î¼s, 0.02%)</title><rect x="743.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="746.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,628 Î¼s, 0.09%)</title><rect x="986.1" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="989.14" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.Comment]{type Repr = R} (expanded macros 0)  (4,255 Î¼s, 0.11%)</title><rect x="440.2" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="443.20" y="223.5" ></text>
</g>
<g >
<title>pr.baseSha1.type =&gt; ?{def === : ?} (expanded macros 0)  (845 Î¼s, 0.02%)</title><rect x="349.7" y="245" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="352.66" y="255.5" ></text>
</g>
<g >
<title>String =&gt; ?{def nonEmpty: ?} (expanded macros 0)  (331 Î¼s, 0.01%)</title><rect x="152.2" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="155.20" y="255.5" ></text>
</g>
<g >
<title>s.type =&gt; ?{def === : ?} (expanded macros 0)  (437 Î¼s, 0.01%)</title><rect x="351.9" y="245" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="354.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Out = K} (id 3988) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (519 Î¼s, 0.01%)</title><rect x="737.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="740.45" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver] (expanded macros 0)  (1,572 Î¼s, 0.04%)</title><rect x="310.4" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="313.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,646 Î¼s, 0.07%)</title><rect x="1068.4" y="69" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1071.40" y="79.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (id 8274) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (14,865 Î¼s, 0.38%)</title><rect x="1118.4" y="197" width="4.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1121.35" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,068 Î¼s, 0.08%)</title><rect x="960.5" y="101" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="963.52" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Out = K} (id 3686) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (356 Î¼s, 0.01%)</title><rect x="425.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="428.81" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2004) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (381 Î¼s, 0.01%)</title><rect x="991.6" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="994.63" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (379 Î¼s, 0.01%)</title><rect x="728.0" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.03" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (9,061 Î¼s, 0.23%)</title><rect x="1080.3" y="149" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1083.30" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,462 Î¼s, 0.04%)</title><rect x="571.9" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="574.91" y="191.5" ></text>
</g>
<g >
<title>scala.util.Using.Releasable[org.bouncycastle.util.io.pem.PemReader] (expanded macros 0)  (985 Î¼s, 0.03%)</title><rect x="355.1" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="358.11" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Repository]] (id 4187) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,072 Î¼s, 0.23%)</title><rect x="879.9" y="245" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="882.87" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (584 Î¼s, 0.01%)</title><rect x="380.3" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="383.35" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.data.Resolver] (expanded macros 0)  (217,273 Î¼s, 5.57%)</title><rect x="926.4" y="229" width="65.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="929.37" y="239.5" >io.circ..</text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,645 Î¼s, 0.04%)</title><rect x="1163.6" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.65" y="207.5" ></text>
</g>
<g >
<title>version.type =&gt; ?{def &gt;= : ?} (expanded macros 0)  (518 Î¼s, 0.01%)</title><rect x="1176.7" y="245" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1179.73" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (1,440 Î¼s, 0.04%)</title><rect x="381.4" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="384.42" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (384 Î¼s, 0.01%)</title><rect x="897.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="900.07" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (596 Î¼s, 0.02%)</title><rect x="517.4" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="520.39" y="175.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Version =&gt; ?{def &lt; : ?} (expanded macros 0)  (2,424 Î¼s, 0.06%)</title><rect x="343.4" y="245" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="346.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Repr = V} (id 4619) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,233 Î¼s, 0.06%)</title><rect x="451.8" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="454.75" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil]] (id 4234) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,235 Î¼s, 0.06%)</title><rect x="438.9" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="441.92" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2000) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (595 Î¼s, 0.02%)</title><rect x="991.1" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="994.06" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]] (id 4501) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (20,555 Î¼s, 0.53%)</title><rect x="461.8" y="245" width="6.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="464.76" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7635) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,180 Î¼s, 0.03%)</title><rect x="1064.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1067.32" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.util.Timestamp] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,314 Î¼s, 0.06%)</title><rect x="126.3" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="129.32" y="255.5" ></text>
</g>
<g >
<title>F[org.http4s.Request[F]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (820 Î¼s, 0.02%)</title><rect x="111.3" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="114.26" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)]} (id 1472) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (380 Î¼s, 0.01%)</title><rect x="397.7" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="400.70" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,743 Î¼s, 0.04%)</title><rect x="991.5" y="117" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="994.52" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8249) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,017 Î¼s, 0.03%)</title><rect x="1109.5" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1112.49" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (8,360 Î¼s, 0.21%)</title><rect x="1050.7" y="213" width="2.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1053.73" y="223.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.update.artifact.ArtifactChange]] =&gt; ?{def map: ?} (expanded macros 0)  (862 Î¼s, 0.02%)</title><rect x="59.5" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = Options} (id 7522) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (1,545 Î¼s, 0.04%)</title><rect x="1023.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1026.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,477 Î¼s, 0.09%)</title><rect x="492.2" y="69" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="495.23" y="79.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.data.Resolver.IvyRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)],org.scalasteward.core.data.Resolver.IvyRepository] :+: org.scalasteward.core.data.Resolver.MavenRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)],org.scalasteward.core.data.Resolver.MavenRepository] :+: shapeless.CNil]] (id 1684) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (199,366 Î¼s, 5.11%)</title><rect x="931.8" y="213" width="60.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="934.79" y="223.5" >shapel..</text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (768 Î¼s, 0.02%)</title><rect x="467.5" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="470.54" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (10,159 Î¼s, 0.26%)</title><rect x="1122.8" y="213" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1125.84" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (3,058 Î¼s, 0.08%)</title><rect x="966.0" y="149" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="968.98" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ProjectId]{type Repr = V} (expanded macros 3)   (1,011 Î¼s, 0.03%)</title><rect x="791.7" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="794.73" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)  (38,127 Î¼s, 0.98%)</title><rect x="938.0" y="165" width="11.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="940.99" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption] (expanded macros 0)  (14,897 Î¼s, 0.38%)</title><rect x="468.6" y="229" width="4.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="471.63" y="239.5" ></text>
</g>
<g >
<title>dependency.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (806 Î¼s, 0.02%)</title><rect x="264.7" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="267.66" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Commit] =&gt; ?{def map: ?} (expanded macros 0)  (584 Î¼s, 0.01%)</title><rect x="122.0" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="125.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,030 Î¼s, 0.03%)</title><rect x="1117.9" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1120.86" y="111.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Repr = R} (expanded macros 0)  (9,062 Î¼s, 0.23%)</title><rect x="886.1" y="213" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="889.14" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.UpdatePattern :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,014 Î¼s, 0.05%)</title><rect x="590.8" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="593.78" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 1976) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredEncoder`)  (4,481 Î¼s, 0.11%)</title><rect x="987.4" y="133" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="990.39" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)]} (id 8478) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (443 Î¼s, 0.01%)</title><rect x="831.7" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="834.73" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] (expanded macros 0)  (772 Î¼s, 0.02%)</title><rect x="1072.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.58" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,Int :: String :: org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,304 Î¼s, 0.08%)</title><rect x="747.5" y="181" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="750.48" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.update.data.VersionPosition]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (480 Î¼s, 0.01%)</title><rect x="57.9" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="60.89" y="255.5" ></text>
</g>
<g >
<title>Either[java.util.regex.PatternSyntaxException,scala.util.matching.Regex] =&gt; ?{def leftMap: ?} (expanded macros 0)  (345 Î¼s, 0.01%)</title><rect x="31.0" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="33.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = R} (expanded macros 0)  (435 Î¼s, 0.01%)</title><rect x="1088.6" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1091.57" y="223.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[org.scalasteward.core.forge.ForgeType] (expanded macros 0)  (668 Î¼s, 0.02%)</title><rect x="259.4" y="245" width="0.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="262.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Repr = R} (expanded macros 0)  (13,614 Î¼s, 0.35%)</title><rect x="449.7" y="213" width="4.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="452.69" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (6,235 Î¼s, 0.16%)</title><rect x="1127.9" y="165" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1130.87" y="175.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (3,023 Î¼s, 0.08%)</title><rect x="79.2" y="229" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="82.25" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Out = K} (id 3386) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (834 Î¼s, 0.02%)</title><rect x="866.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="869.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)]} (id 7339) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (456 Î¼s, 0.01%)</title><rect x="827.3" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="830.29" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[List[org.scalasteward.core.forge.azurerepos.AzureComment] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)],List[org.scalasteward.core.forge.azurerepos.AzureComment]] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],Int] :: shapeless.HNil]] (id 3449) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,025 Î¼s, 0.05%)</title><rect x="864.7" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="867.66" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1709) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (560 Î¼s, 0.01%)</title><rect x="960.4" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="963.35" y="111.5" ></text>
</g>
<g >
<title>StringContext =&gt; ?{def uri: ?} (expanded macros 0)  (80,271 Î¼s, 2.06%)</title><rect x="166.4" y="245" width="24.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="169.36" y="255.5" >S..</text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Header]{type Repr = V} (expanded macros 3)   (966 Î¼s, 0.02%)</title><rect x="408.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="411.76" y="207.5" ></text>
</g>
<g >
<title>info.dependency.artifactId.name.type =&gt; ?{def === : ?} (expanded macros 0)  (425 Î¼s, 0.01%)</title><rect x="284.2" y="245" width="0.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="287.18" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 5312) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,230 Î¼s, 0.03%)</title><rect x="780.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="783.03" y="207.5" ></text>
</g>
<g >
<title>x$13.value.type =&gt; ?{def === : ?} (expanded macros 0)  (724 Î¼s, 0.02%)</title><rect x="1180.7" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1183.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (14,908 Î¼s, 0.38%)</title><rect x="488.8" y="149" width="4.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="491.78" y="159.5" ></text>
</g>
<g >
<title>String =&gt; ?{def apply: ?} (expanded macros 0)  (492 Î¼s, 0.01%)</title><rect x="151.5" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="154.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)]} (id 1470) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (394 Î¼s, 0.01%)</title><rect x="398.2" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="401.18" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,418 Î¼s, 0.04%)</title><rect x="1177.2" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1180.23" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (538 Î¼s, 0.01%)</title><rect x="1074.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.DependencyInfo]{type Out = K} (id 1592) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (847 Î¼s, 0.02%)</title><rect x="388.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="391.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut]] (id 5537) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,827 Î¼s, 0.28%)</title><rect x="759.5" y="245" width="3.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="762.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8731) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (578 Î¼s, 0.01%)</title><rect x="1160.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1163.48" y="207.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[[_]F[_]] (expanded macros 0)  (381 Î¼s, 0.01%)</title><rect x="260.5" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="263.49" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8343) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,005 Î¼s, 0.03%)</title><rect x="1130.6" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1133.60" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)],Boolean] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.User] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],String] :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] :: shapeless.HNil] (id 4565) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (7,874 Î¼s, 0.20%)</title><rect x="546.5" y="197" width="2.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="549.50" y="207.5" ></text>
</g>
<g >
<title>buildTools.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (425 Î¼s, 0.01%)</title><rect x="193.5" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="196.50" y="255.5" ></text>
</g>
<g >
<title>buildTools.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (412 Î¼s, 0.01%)</title><rect x="193.4" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="196.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;full_name&quot;)],String] :: shapeless.HNil]] (id 5348) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,512 Î¼s, 0.04%)</title><rect x="784.4" y="213" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="787.36" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)]} (id 8725) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (378 Î¼s, 0.01%)</title><rect x="1160.3" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1163.29" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Repr = V} (id 4006) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (597 Î¼s, 0.02%)</title><rect x="740.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="743.32" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.data.Resolver.IvyRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)],org.scalasteward.core.data.Resolver.IvyRepository] :+: org.scalasteward.core.data.Resolver.MavenRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)],org.scalasteward.core.data.Resolver.MavenRepository] :+: shapeless.CNil] (id 1685) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (197,442 Î¼s, 5.06%)</title><rect x="932.4" y="197" width="59.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="935.37" y="207.5" >io.cir..</text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7852) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (494 Î¼s, 0.01%)</title><rect x="1052.5" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1055.49" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;fileExtensions&quot;) with String(&quot;limit&quot;) &lt;: String],Lub0] (expanded macros 0)  (480 Î¼s, 0.01%)</title><rect x="1128.4" y="149" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1131.38" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,317 Î¼s, 0.08%)</title><rect x="947.5" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="950.50" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)]} (id 6858) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (524 Î¼s, 0.01%)</title><rect x="582.1" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="585.06" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.CreatePullRequestPayload]] (id 4961) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,187 Î¼s, 0.39%)</title><rect x="885.2" y="245" width="4.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="888.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2069) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (397 Î¼s, 0.01%)</title><rect x="974.3" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="977.28" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,413 Î¼s, 0.11%)</title><rect x="499.7" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="502.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,294 Î¼s, 0.06%)</title><rect x="1055.6" y="85" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1058.57" y="95.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Out = K} (id 4616) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,606 Î¼s, 0.04%)</title><rect x="450.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="453.25" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (350 Î¼s, 0.01%)</title><rect x="832.5" y="133" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="835.47" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.SemVer.Change]] (expanded macros 0)  (789 Î¼s, 0.02%)</title><rect x="324.3" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="327.28" y="255.5" ></text>
</g>
<g >
<title>F[scalacache.caffeine.CaffeineCache[[_]F[_],String,org.http4s.Status]] =&gt; ?{def map: ?} (expanded macros 0)  (709 Î¼s, 0.02%)</title><rect x="128.7" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="131.65" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)],String] :: shapeless.HNil] (id 3982) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (2,108 Î¼s, 0.05%)</title><rect x="431.9" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="434.93" y="207.5" ></text>
</g>
<g >
<title>a1.value.type =&gt; ?{def compare: ?} (expanded macros 0)  (748 Î¼s, 0.02%)</title><rect x="192.1" y="245" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="195.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (16,000 Î¼s, 0.41%)</title><rect x="1078.2" y="213" width="4.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1081.21" y="223.5" ></text>
</g>
<g >
<title>String(&quot;X-Attempt&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (772 Î¼s, 0.02%)</title><rect x="155.1" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="158.06" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (649 Î¼s, 0.02%)</title><rect x="380.9" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="383.93" y="159.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def foldMap: ?} (expanded macros 0)  (517 Î¼s, 0.01%)</title><rect x="220.2" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="223.19" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Page[org.scalasteward.core.forge.bitbucketserver.Json.PR]] (expanded macros 0)  (2,380 Î¼s, 0.06%)</title><rect x="315.2" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="318.18" y="255.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def traverse_: ?} (expanded macros 0)  (358 Î¼s, 0.01%)</title><rect x="141.5" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="144.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,264 Î¼s, 0.03%)</title><rect x="390.6" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="393.57" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,002 Î¼s, 0.03%)</title><rect x="500.7" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="503.68" y="191.5" ></text>
</g>
<g >
<title>Boolean =&gt; ?{def === : ?} (expanded macros 0)  (362 Î¼s, 0.01%)</title><rect x="23.3" y="245" width="0.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="26.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = R} (expanded macros 0)  (8,145 Î¼s, 0.21%)</title><rect x="1005.6" y="213" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1008.59" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,376 Î¼s, 0.21%)</title><rect x="1061.3" y="149" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1064.34" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Project]] (id 4135) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,988 Î¼s, 0.20%)</title><rect x="432.6" y="245" width="2.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="435.57" y="255.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenTemporal[F,Throwable] (expanded macros 0)  (939 Î¼s, 0.02%)</title><rect x="228.0" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="231.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,403 Î¼s, 0.09%)</title><rect x="908.3" y="69" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="911.31" y="79.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (1,173 Î¼s, 0.03%)</title><rect x="1122.0" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1124.96" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (956 Î¼s, 0.02%)</title><rect x="612.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="615.68" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)],org.scalasteward.core.util.Timestamp] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],String] :: shapeless.HNil] (id 6814) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (4,303 Î¼s, 0.11%)</title><rect x="577.4" y="197" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="580.37" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[org.scalasteward.core.repoconfig.PullRequestGroup]] (expanded macros 0)  (473 Î¼s, 0.01%)</title><rect x="256.4" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="259.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Dependency]{type Repr = V} (id 1460) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,565 Î¼s, 0.04%)</title><rect x="396.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="399.72" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7188) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (755 Î¼s, 0.02%)</title><rect x="1005.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1008.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4685) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,148 Î¼s, 0.03%)</title><rect x="529.1" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="532.11" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (id 8133) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (429 Î¼s, 0.01%)</title><rect x="1090.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1093.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (expanded macros 3)   (748 Î¼s, 0.02%)</title><rect x="1160.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1163.81" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]] (expanded macros 0)  (27,865 Î¼s, 0.71%)</title><rect x="287.9" y="245" width="8.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="290.90" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,316 Î¼s, 0.03%)</title><rect x="302.8" y="229" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="305.84" y="239.5" ></text>
</g>
<g >
<title>F[((List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.data.Update.ForArtifactId]), (List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.data.Update.ForArtifactId]))] =&gt; ?{def flatMap: ?} (expanded macros 0)  (562 Î¼s, 0.01%)</title><rect x="31.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="34.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)]} (id 2199) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,245 Î¼s, 0.03%)</title><rect x="415.6" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="418.64" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (968 Î¼s, 0.02%)</title><rect x="1185.1" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1188.14" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,150 Î¼s, 0.03%)</title><rect x="398.5" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="401.54" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1716) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,419 Î¼s, 0.04%)</title><rect x="962.7" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="965.67" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Out = K} (id 5370) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (419 Î¼s, 0.01%)</title><rect x="895.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="898.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,276 Î¼s, 0.08%)</title><rect x="831.6" y="181" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="834.58" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (799 Î¼s, 0.02%)</title><rect x="321.8" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="324.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Repr = V} (id 7111) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (611 Î¼s, 0.02%)</title><rect x="590.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="593.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.data.CrossDependency]{type Repr = R :: shapeless.HNil}] (id 1421) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,828 Î¼s, 0.05%)</title><rect x="1144.5" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1147.53" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,683 Î¼s, 0.17%)</title><rect x="625.1" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="628.10" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Repr = V} (id 4967) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (822 Î¼s, 0.02%)</title><rect x="887.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="890.55" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Version =&gt; ?{def === : ?} (expanded macros 0)  (2,296 Î¼s, 0.06%)</title><rect x="344.2" y="245" width="0.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="347.17" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (553 Î¼s, 0.01%)</title><rect x="572.5" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="575.52" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)  (1,821 Î¼s, 0.05%)</title><rect x="323.5" y="229" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="326.47" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,795 Î¼s, 0.23%)</title><rect x="723.9" y="133" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="726.90" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)]} (id 8185) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (570 Î¼s, 0.01%)</title><rect x="596.1" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="599.09" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 1889) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (386 Î¼s, 0.01%)</title><rect x="948.9" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="951.91" y="127.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (358 Î¼s, 0.01%)</title><rect x="69.2" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="72.24" y="255.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; java.security.Key (expanded macros 0)   (333 Î¼s, 0.01%)</title><rect x="12.9" y="245" width="0.1" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.91" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]{type R = RB} (expanded macros 0)  (2,990 Î¼s, 0.08%)</title><rect x="307.4" y="213" width="0.9" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.37" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (897 Î¼s, 0.02%)</title><rect x="743.5" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="746.53" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Int]] (expanded macros 0)  (445 Î¼s, 0.01%)</title><rect x="495.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.01" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)],Option[String]] :: shapeless.HNil]] (id 1394) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,360 Î¼s, 0.11%)</title><rect x="385.2" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="388.18" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq] (expanded macros 0)  (19,480 Î¼s, 0.50%)</title><rect x="474.0" y="229" width="5.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="477.04" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)]} (id 1600) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (476 Î¼s, 0.01%)</title><rect x="390.4" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="393.43" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (379 Î¼s, 0.01%)</title><rect x="422.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="425.39" y="191.5" ></text>
</g>
<g >
<title>F[better.files.File] =&gt; ?{def flatMap: ?} (expanded macros 0)  (8,588 Î¼s, 0.22%)</title><rect x="104.4" y="245" width="2.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="107.40" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (11,136 Î¼s, 0.29%)</title><rect x="915.3" y="229" width="3.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="918.30" y="239.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit] =&gt; io.circe.Json (expanded macros 0)   (526 Î¼s, 0.01%)</title><rect x="454.9" y="181" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="457.85" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,068 Î¼s, 0.03%)</title><rect x="910.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="913.80" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Credentials]{type Repr = V} (id 1643) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,295 Î¼s, 0.03%)</title><rect x="405.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="407.99" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)]} (id 2779) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (624 Î¼s, 0.02%)</title><rect x="724.2" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="727.16" y="127.5" ></text>
</g>
<g >
<title>F[List[coursier.core.Repository]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (717 Î¼s, 0.02%)</title><rect x="52.3" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="55.35" y="255.5" ></text>
</g>
<g >
<title>F[Either[Throwable,List[org.scalasteward.core.data.Version]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (661 Î¼s, 0.02%)</title><rect x="43.0" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="45.99" y="255.5" ></text>
</g>
<g >
<title>cats.Invariant[Option] (expanded macros 0)  (1,358 Î¼s, 0.03%)</title><rect x="213.1" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="216.12" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,585 Î¼s, 0.25%)</title><rect x="1061.0" y="165" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1063.97" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (1,570 Î¼s, 0.04%)</title><rect x="1016.1" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1019.09" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,461 Î¼s, 0.04%)</title><rect x="989.1" y="117" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="992.14" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7846) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (450 Î¼s, 0.01%)</title><rect x="1052.9" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1055.92" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)]} (id 3417) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (337 Î¼s, 0.01%)</title><rect x="861.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="864.88" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Dependency] (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="1180.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1183.77" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp] =&gt; ?{def map: ?} (expanded macros 0)  (1,046 Î¼s, 0.03%)</title><rect x="118.3" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="121.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (476 Î¼s, 0.01%)</title><rect x="1091.3" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1094.30" y="223.5" ></text>
</g>
<g >
<title>ex.exitValue.type =&gt; ?{def === : ?} (expanded macros 0)  (841 Î¼s, 0.02%)</title><rect x="273.9" y="245" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="276.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Some[Option[scala.util.matching.Regex]] :: Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (3,891 Î¼s, 0.10%)</title><rect x="1022.0" y="181" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1024.96" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Out = K} (id 4672) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,941 Î¼s, 0.05%)</title><rect x="526.1" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="529.07" y="207.5" ></text>
</g>
<g >
<title>DependencyMetadata.this.homePage.type =&gt; ?{def filterA: ?} (expanded macros 0)  (1,120 Î¼s, 0.03%)</title><rect x="28.3" y="245" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="31.29" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Long] (expanded macros 0)  (358 Î¼s, 0.01%)</title><rect x="1148.6" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1151.57" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (968 Î¼s, 0.02%)</title><rect x="1073.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1076.93" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = R} (expanded macros 0)  (719 Î¼s, 0.02%)</title><rect x="1158.2" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1161.24" y="223.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8807) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (665 Î¼s, 0.02%)</title><rect x="1157.2" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1160.15" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,365 Î¼s, 0.03%)</title><rect x="946.8" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="949.83" y="127.5" ></text>
</g>
<g >
<title>F[String] =&gt; ?{def flatMap: ?} (expanded macros 0)  (4,079 Î¼s, 0.10%)</title><rect x="73.2" y="245" width="1.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="76.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.RepoOut]{type Repr = R} (expanded macros 0)  (10,824 Î¼s, 0.28%)</title><rect x="771.4" y="213" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="774.40" y="223.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]{type R = RB} (expanded macros 0)  (10,722 Î¼s, 0.27%)</title><rect x="304.0" y="181" width="3.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="307.00" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,Option[List[String]] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,617 Î¼s, 0.04%)</title><rect x="868.4" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="871.41" y="159.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.PullRequestOut] =&gt; ?{def adaptErr: ?} (expanded macros 0)  (699 Î¼s, 0.02%)</title><rect x="116.6" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="119.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (427 Î¼s, 0.01%)</title><rect x="1001.8" y="133" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.80" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.update.artifact.ArtifactChange] (expanded macros 0)  (626 Î¼s, 0.02%)</title><rect x="1170.1" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1173.05" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 1975) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,964 Î¼s, 0.13%)</title><rect x="987.2" y="149" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="990.24" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Scope[A]]{type Repr = R} (expanded macros 0)  (20,505 Î¼s, 0.53%)</title><rect x="412.0" y="213" width="6.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="414.97" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (4,461 Î¼s, 0.11%)</title><rect x="572.7" y="181" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="575.71" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ForkPayload]{type Out = K} (id 5396) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (885 Î¼s, 0.02%)</title><rect x="898.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="901.30" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (2,831 Î¼s, 0.07%)</title><rect x="297.7" y="245" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="300.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1883) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (609 Î¼s, 0.02%)</title><rect x="938.5" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="941.53" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil] (id 7079) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (2,836 Î¼s, 0.07%)</title><rect x="996.4" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="999.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,String :: Int :: String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,383 Î¼s, 0.34%)</title><rect x="528.7" y="181" width="4.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="531.72" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (540 Î¼s, 0.01%)</title><rect x="264.5" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="267.49" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ForkPayload]{type Out = K} (id 5398) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (659 Î¼s, 0.02%)</title><rect x="898.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="901.57" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,989 Î¼s, 0.05%)</title><rect x="875.3" y="85" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="878.28" y="95.5" ></text>
</g>
<g >
<title>Option[org.http4s.Uri.Host] =&gt; ?{def === : ?} (expanded macros 0)  (608 Î¼s, 0.02%)</title><rect x="145.0" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="148.03" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Update.ForArtifactId]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,055 Î¼s, 0.03%)</title><rect x="54.0" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="56.98" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.update.data.UpdateState]] =&gt; ?{def map: ?} (expanded macros 0)  (1,475 Î¼s, 0.04%)</title><rect x="60.0" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.98" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[String]] (expanded macros 0)  (346 Î¼s, 0.01%)</title><rect x="1189.5" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1192.50" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[A]] (expanded macros 0)  (980 Î¼s, 0.03%)</title><rect x="285.6" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="288.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.DependencyInfo]{type Out = K} (id 1594) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (704 Î¼s, 0.02%)</title><rect x="388.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="391.77" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (647 Î¼s, 0.02%)</title><rect x="1163.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1166.29" y="191.5" ></text>
</g>
<g >
<title>List[org.http4s.Uri] =&gt; ?{def traverse: ?} (expanded macros 0)  (509 Î¼s, 0.01%)</title><rect x="142.1" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="145.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt['a'] (expanded macros 3)   (703 Î¼s, 0.02%)</title><rect x="269.4" y="117" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="272.36" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)]} (id 6587) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,122 Î¼s, 0.03%)</title><rect x="564.1" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="567.08" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Repr = V} (expanded macros 3)   (862 Î¼s, 0.02%)</title><rect x="737.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="740.77" y="207.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = K} (id 8875) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (349 Î¼s, 0.01%)</title><rect x="1167.0" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1170.05" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] (expanded macros 0)  (893 Î¼s, 0.02%)</title><rect x="756.2" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="759.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (6,966 Î¼s, 0.18%)</title><rect x="974.7" y="149" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="977.73" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)],Boolean] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)],Boolean] :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] :: shapeless.HNil]] (id 4059) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,639 Î¼s, 0.12%)</title><rect x="875.9" y="213" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.88" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Out = K} (id 4140) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (401 Î¼s, 0.01%)</title><rect x="433.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="436.55" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (21,305 Î¼s, 0.55%)</title><rect x="133.7" y="213" width="6.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="136.73" y="223.5" ></text>
</g>
<g >
<title>scala.collection.immutable.Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry] =&gt; ?{def pure: ?} (expanded macros 0)  (435 Î¼s, 0.01%)</title><rect x="353.2" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="356.20" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucket.CreateComment] (expanded macros 0)  (688 Î¼s, 0.02%)</title><rect x="327.0" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="330.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.Comment]{type Out = K} (id 4300) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (352 Î¼s, 0.01%)</title><rect x="440.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="443.57" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)]} (id 4053) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (371 Î¼s, 0.01%)</title><rect x="874.7" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="877.66" y="127.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (596 Î¼s, 0.02%)</title><rect x="381.6" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="384.64" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[String]] (expanded macros 0)  (1,215 Î¼s, 0.03%)</title><rect x="392.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="394.97" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7856) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (528 Î¼s, 0.01%)</title><rect x="1052.2" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1055.17" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.nurture.PullRequestRepository.Entry]] (id 6572) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (62,629 Î¼s, 1.60%)</title><rect x="555.3" y="245" width="18.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="558.27" y="255.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.buildtool.BuildRoot] =&gt; ?{def traverse: ?} (expanded macros 0)  (466 Î¼s, 0.01%)</title><rect x="142.2" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="145.25" y="255.5" ></text>
</g>
<g >
<title>cats.Foldable[Array] (expanded macros 0)   (1,030 Î¼s, 0.03%)</title><rect x="22.8" y="229" width="0.3" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="25.82" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2445) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,460 Î¼s, 0.06%)</title><rect x="619.3" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="622.25" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.data.UpdateState]] (id 4464) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,580 Î¼s, 0.22%)</title><rect x="882.6" y="245" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="885.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (6,281 Î¼s, 0.16%)</title><rect x="1130.9" y="181" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1133.91" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] (expanded macros 0)  (932 Î¼s, 0.02%)</title><rect x="728.6" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.64" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (438 Î¼s, 0.01%)</title><rect x="508.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="511.39" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (4,213 Î¼s, 0.11%)</title><rect x="569.7" y="165" width="1.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="572.70" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil]] (id 7659) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (21,515 Î¼s, 0.55%)</title><rect x="1069.2" y="213" width="6.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1072.20" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestNumber :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,498 Î¼s, 0.04%)</title><rect x="768.5" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="771.53" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,090 Î¼s, 0.03%)</title><rect x="453.5" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="456.48" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,086 Î¼s, 0.03%)</title><rect x="460.2" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="463.25" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2475) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,728 Î¼s, 0.04%)</title><rect x="621.6" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="624.59" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil]] (id 7373) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,168 Î¼s, 0.08%)</title><rect x="913.6" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="916.62" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] (expanded macros 0)  (39,899 Î¼s, 1.02%)</title><rect x="536.8" y="229" width="12.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="539.82" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (1,210 Î¼s, 0.03%)</title><rect x="988.0" y="117" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="991.03" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5404) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (495 Î¼s, 0.01%)</title><rect x="899.5" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="902.52" y="191.5" ></text>
</g>
<g >
<title>Char('0') =&gt; ?{def to: ?} (expanded macros 0)  (4,058 Î¼s, 0.10%)</title><rect x="23.9" y="245" width="1.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="26.93" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.uri.authorityWithUserInfo.type =&gt; ?{def compose: ?} (expanded macros 0)  (1,219 Î¼s, 0.03%)</title><rect x="347.7" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="350.68" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]{type R = RB} (expanded macros 0)  (2,803 Î¼s, 0.07%)</title><rect x="269.7" y="213" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="272.68" y="223.5" ></text>
</g>
<g >
<title>Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)],Option[String]] :: Option[Vector[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Option[Vector[String]]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],Option[String]] :: Option[Vector[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[Vector[Int]]] :: Option[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)],Option[Int]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: shapeless.HNil &lt;:&lt; (Option[String] :: Option[Vector[String]] :: Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil) (expanded macros 0)  (343 Î¼s, 0.01%)</title><rect x="483.4" y="197" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="486.37" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (420 Î¼s, 0.01%)</title><rect x="276.1" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="279.06" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Repr = R} (expanded macros 0)  (3,826 Î¼s, 0.10%)</title><rect x="433.2" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="436.17" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Out = K} (id 4771) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,344 Î¼s, 0.03%)</title><rect x="469.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="472.66" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Out = K} (id 4633) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,717 Î¼s, 0.04%)</title><rect x="510.3" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="513.31" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,906 Î¼s, 0.07%)</title><rect x="1055.4" y="101" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1058.39" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,499 Î¼s, 0.04%)</title><rect x="522.7" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="525.75" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Vector[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Vector[Int]] :: shapeless.HNil]] (id 4847) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,377 Î¼s, 0.11%)</title><rect x="447.5" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="450.50" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,String :: String :: org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (9,788 Î¼s, 0.25%)</title><rect x="512.6" y="197" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="515.59" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.repoconfig.RepoConfigAlg.ConfigParsingResult] =&gt; ?{def map: ?} (expanded macros 0)  (555 Î¼s, 0.01%)</title><rect x="125.5" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.52" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] (expanded macros 0)  (686 Î¼s, 0.02%)</title><rect x="547.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="550.94" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.User] (expanded macros 0)  (18,318 Î¼s, 0.47%)</title><rect x="549.7" y="229" width="5.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="552.73" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1831) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (486 Î¼s, 0.01%)</title><rect x="942.6" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="945.57" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,051 Î¼s, 0.03%)</title><rect x="447.2" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="450.18" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,481 Î¼s, 0.04%)</title><rect x="343.7" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="346.72" y="239.5" ></text>
</g>
<g >
<title>F[(Option[String], Option[org.scalasteward.core.data.Version])] =&gt; ?{def map: ?} (expanded macros 0)  (1,130 Î¼s, 0.03%)</title><rect x="34.4" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="37.43" y="255.5" ></text>
</g>
<g >
<title>x.commits.type =&gt; ?{def |+| : ?} (expanded macros 0)  (1,883 Î¼s, 0.05%)</title><rect x="1187.4" y="245" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1190.36" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigrations] (expanded macros 0)  (16,559 Î¼s, 0.42%)</title><rect x="1150.1" y="229" width="5.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1153.11" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.BuildRootConfig]] (expanded macros 0)  (959 Î¼s, 0.02%)</title><rect x="1072.0" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.02" y="175.5" ></text>
</g>
<g >
<title>dependencies.type =&gt; ?{def groupByNel: ?} (expanded macros 0)  (412 Î¼s, 0.01%)</title><rect x="263.7" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="266.75" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,059 Î¼s, 0.05%)</title><rect x="946.6" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="949.62" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.UpdatePattern with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.repoconfig.UpdatePattern] :: shapeless.HNil] (id 7119) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,198 Î¼s, 0.13%)</title><rect x="591.5" y="197" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="594.50" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.Dependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.data.Dependency] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)],List[String]] :: shapeless.HNil]] (id 1602) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,348 Î¼s, 0.19%)</title><rect x="391.0" y="213" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="393.95" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit] :: shapeless.HNil]] (id 4624) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,981 Î¼s, 0.10%)</title><rect x="453.8" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="456.81" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)  (57,213 Î¼s, 1.47%)</title><rect x="556.9" y="229" width="17.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="559.91" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (616 Î¼s, 0.02%)</title><rect x="592.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="595.57" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,String :: String :: String :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,580 Î¼s, 0.09%)</title><rect x="887.8" y="197" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="890.80" y="207.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Version] (expanded macros 0)  (2,292 Î¼s, 0.06%)</title><rect x="147.8" y="245" width="0.7" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="150.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (expanded macros 3)   (654 Î¼s, 0.02%)</title><rect x="1089.1" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1092.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Repr = R} (expanded macros 0)  (13,605 Î¼s, 0.35%)</title><rect x="462.7" y="213" width="4.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="465.72" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.TokenOut]{type Out = K} (id 5354) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (515 Î¼s, 0.01%)</title><rect x="785.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="788.52" y="207.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[Char] (expanded macros 0)  (350 Î¼s, 0.01%)</title><rect x="267.3" y="197" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="270.34" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.git.Sha1] (expanded macros 0)  (636 Î¼s, 0.02%)</title><rect x="349.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="352.73" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] (expanded macros 0)  (1,191 Î¼s, 0.03%)</title><rect x="750.8" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="753.84" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Out = K} (id 3441) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (486 Î¼s, 0.01%)</title><rect x="863.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="866.49" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,087 Î¼s, 0.08%)</title><rect x="1164.4" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1167.40" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (1,299 Î¼s, 0.03%)</title><rect x="1144.1" y="213" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1147.14" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Dependency] (expanded macros 0)  (1,841 Î¼s, 0.05%)</title><rect x="253.6" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.Credentials]{type Repr = R} (expanded macros 0)  (6,345 Î¼s, 0.16%)</title><rect x="404.1" y="213" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="407.05" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (3,550 Î¼s, 0.09%)</title><rect x="1055.2" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1058.19" y="127.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = Options} (id 8770) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (807 Î¼s, 0.02%)</title><rect x="1158.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1160.99" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4734) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,306 Î¼s, 0.03%)</title><rect x="492.6" y="53" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="495.58" y="63.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)]} (id 7197) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (334 Î¼s, 0.01%)</title><rect x="1007.6" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1010.62" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,923 Î¼s, 0.10%)</title><rect x="514.4" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="517.36" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (403 Î¼s, 0.01%)</title><rect x="787.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="789.96" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (634 Î¼s, 0.02%)</title><rect x="248.3" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="251.28" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2409) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,358 Î¼s, 0.06%)</title><rect x="849.6" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="852.60" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (438 Î¼s, 0.01%)</title><rect x="1087.9" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1090.85" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (430 Î¼s, 0.01%)</title><rect x="257.4" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="260.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (4,941 Î¼s, 0.13%)</title><rect x="1054.8" y="149" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.77" y="159.5" ></text>
</g>
<g >
<title>sbtCommands.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,106 Î¼s, 0.03%)</title><rect x="352.5" y="245" width="0.4" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="355.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Repr = R} (expanded macros 0)  (4,149 Î¼s, 0.11%)</title><rect x="751.7" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="754.74" y="223.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp] =&gt; ?{def map: ?} (expanded macros 0)  (2,183 Î¼s, 0.06%)</title><rect x="118.7" y="245" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="121.65" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (695 Î¼s, 0.02%)</title><rect x="332.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="335.22" y="239.5" ></text>
</g>
<g >
<title>F[Option[Int]] =&gt; ?{def map: ?} (expanded macros 0)  (535 Î¼s, 0.01%)</title><rect x="62.7" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="65.71" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.CreatePullRequestPayload] (expanded macros 0)  (643 Î¼s, 0.02%)</title><rect x="328.8" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="331.77" y="255.5" ></text>
</g>
<g >
<title>x$1.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (472 Î¼s, 0.01%)</title><rect x="1179.0" y="245" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1181.97" y="255.5" ></text>
</g>
<g >
<title>x$2.type =&gt; ?{def nonEmpty: ?} (expanded macros 0)  (553 Î¼s, 0.01%)</title><rect x="1182.7" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1185.68" y="255.5" ></text>
</g>
<g >
<title>scala.util.Either[org.http4s.ParseFailure,org.http4s.Uri] =&gt; ?{def leftMap: ?} (expanded macros 0)  (2,287 Î¼s, 0.06%)</title><rect x="354.4" y="245" width="0.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="357.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7442) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,468 Î¼s, 0.04%)</title><rect x="1024.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1027.91" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.bitbucketserver.Json.Condition]] =&gt; ?{def map: ?} (expanded macros 0)  (654 Î¼s, 0.02%)</title><rect x="58.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7467) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (947 Î¼s, 0.02%)</title><rect x="1033.2" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1036.17" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (7,060 Î¼s, 0.18%)</title><rect x="968.5" y="149" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="971.55" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil]] (id 2863) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,984 Î¼s, 0.08%)</title><rect x="1153.6" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.57" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)]} (id 7199) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (360 Î¼s, 0.01%)</title><rect x="1007.2" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1010.19" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (513 Î¼s, 0.01%)</title><rect x="479.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="482.63" y="191.5" ></text>
</g>
<g >
<title>indent.type =&gt; ?{def * : ?} (expanded macros 0)  (374 Î¼s, 0.01%)</title><rect x="284.1" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="287.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,359 Î¼s, 0.09%)</title><rect x="975.8" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="978.82" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,190 Î¼s, 0.06%)</title><rect x="917.4" y="165" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="920.38" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)],Option[String]] :: shapeless.HNil] (id 4515) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,320 Î¼s, 0.09%)</title><rect x="467.0" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="469.97" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[String]]] (expanded macros 0)  (972 Î¼s, 0.02%)</title><rect x="1120.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1123.36" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)]} (id 5482) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (566 Î¼s, 0.01%)</title><rect x="908.1" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="911.14" y="79.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (expanded macros 3)   (549 Î¼s, 0.01%)</title><rect x="1152.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1155.92" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,190 Î¼s, 0.18%)</title><rect x="1061.7" y="133" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1064.70" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (347 Î¼s, 0.01%)</title><rect x="828.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="831.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.CommitId]{type Out = K} (id 5518) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (694 Î¼s, 0.02%)</title><rect x="787.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="790.92" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)]} (id 4178) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (335 Î¼s, 0.01%)</title><rect x="755.3" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="758.33" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)   (8,007 Î¼s, 0.21%)</title><rect x="940.4" y="149" width="2.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="943.35" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.forge.data.PullRequestNumber]] (expanded macros 0)  (4,507 Î¼s, 0.12%)</title><rect x="569.6" y="181" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="572.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,953 Î¼s, 0.13%)</title><rect x="617.8" y="197" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="620.76" y="207.5" ></text>
</g>
<g >
<title>x$3.type =&gt; ?{def === : ?} (expanded macros 0)  (1,495 Î¼s, 0.04%)</title><rect x="1183.4" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1186.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,386 Î¼s, 0.04%)</title><rect x="373.0" y="149" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="375.97" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Out = K} (id 3439) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (502 Î¼s, 0.01%)</title><rect x="863.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="866.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (expanded macros 3)   (1,809 Î¼s, 0.05%)</title><rect x="1059.1" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1062.06" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Repo]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (763 Î¼s, 0.02%)</title><rect x="52.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="55.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 5311) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,514 Î¼s, 0.04%)</title><rect x="779.9" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="782.95" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Repr = V} (expanded macros 3)   (2,306 Î¼s, 0.06%)</title><rect x="511.4" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="514.36" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver] (expanded macros 0)  (1,512 Î¼s, 0.04%)</title><rect x="419.3" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="422.28" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (6,499 Î¼s, 0.17%)</title><rect x="1096.1" y="197" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1099.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Boolean :: Long :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User :: String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (19,969 Î¼s, 0.51%)</title><rect x="540.3" y="197" width="6.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="543.28" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (1,293 Î¼s, 0.03%)</title><rect x="1120.0" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1122.97" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil]] (id 4011) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,577 Î¼s, 0.04%)</title><rect x="740.8" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="743.80" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 3994) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (437 Î¼s, 0.01%)</title><rect x="738.4" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="741.45" y="191.5" ></text>
</g>
<g >
<title>coursier.util.Sync[F] (expanded macros 0)  (4,597 Î¼s, 0.12%)</title><rect x="260.6" y="245" width="1.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="263.61" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Int] (expanded macros 0)  (1,161 Î¼s, 0.03%)</title><rect x="232.5" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="235.50" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[cats.effect.kernel.Resource[F,Unit]] (expanded macros 0)  (9,619 Î¼s, 0.25%)</title><rect x="245.2" y="245" width="2.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="248.20" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.github.RepositoriesOut]] =&gt; ?{def map: ?} (expanded macros 0)  (737 Î¼s, 0.02%)</title><rect x="58.8" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.81" y="255.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def contains_: ?} (expanded macros 0)  (419 Î¼s, 0.01%)</title><rect x="220.1" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="223.06" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (1,571 Î¼s, 0.04%)</title><rect x="957.2" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="960.18" y="159.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def map: ?} (expanded macros 0)  (41,602 Î¼s, 1.07%)</title><rect x="89.1" y="245" width="12.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="92.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2855) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (372 Î¼s, 0.01%)</title><rect x="1152.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1155.70" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,210 Î¼s, 0.03%)</title><rect x="379.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="382.77" y="191.5" ></text>
</g>
<g >
<title>cats.Traverse[Option] (expanded macros 0)  (358 Î¼s, 0.01%)</title><rect x="219.0" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="222.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (id 8734) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (909 Î¼s, 0.02%)</title><rect x="1161.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1164.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.SbtVersion]{type Repr = R :: shapeless.HNil}] (id 996) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (11,939 Î¼s, 0.31%)</title><rect x="1137.9" y="213" width="3.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1140.87" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)]} (id 8501) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (410 Î¼s, 0.01%)</title><rect x="917.0" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="919.99" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,109 Î¼s, 0.03%)</title><rect x="565.2" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="568.18" y="111.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Less['a']]{type R = R} (expanded macros 0)  (2,700 Î¼s, 0.07%)</title><rect x="268.8" y="149" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="271.75" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],Lub0] (expanded macros 0)  (458 Î¼s, 0.01%)</title><rect x="1041.8" y="165" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1044.81" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,563 Î¼s, 0.12%)</title><rect x="452.4" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="455.43" y="207.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[org.scalasteward.core.git.Author], com.monovore.decline.Opts[better.files.File], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (403 Î¼s, 0.01%)</title><rect x="17.1" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="20.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,477 Î¼s, 0.04%)</title><rect x="409.6" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="412.56" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: shapeless.HNil,Vector[Int] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,417 Î¼s, 0.11%)</title><rect x="446.2" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="449.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8270) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,005 Î¼s, 0.03%)</title><rect x="1114.8" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1117.77" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,066 Î¼s, 0.28%)</title><rect x="906.0" y="165" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="909.00" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Repr = V} (id 3414) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (500 Î¼s, 0.01%)</title><rect x="861.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="864.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)]} (id 2407) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,388 Î¼s, 0.04%)</title><rect x="848.9" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="851.86" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (476 Î¼s, 0.01%)</title><rect x="1163.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1166.04" y="175.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp] =&gt; ?{def map: ?} (expanded macros 0)  (1,063 Î¼s, 0.03%)</title><rect x="118.0" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="121.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] :: shapeless.HNil]] (id 3996) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,593 Î¼s, 0.04%)</title><rect x="738.6" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="741.63" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (998 Î¼s, 0.03%)</title><rect x="827.2" y="165" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="830.18" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,930 Î¼s, 0.05%)</title><rect x="947.9" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="950.92" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil]] (id 4275) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,819 Î¼s, 0.07%)</title><rect x="758.7" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="761.67" y="223.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[[_]F[_]] (expanded macros 0)  (440 Î¼s, 0.01%)</title><rect x="223.5" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="226.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1963) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (701 Î¼s, 0.02%)</title><rect x="985.3" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="988.34" y="143.5" ></text>
</g>
<g >
<title>F[(List[String], org.scalasteward.core.buildtool.BuildRoot)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (564 Î¼s, 0.01%)</title><rect x="32.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="35.91" y="255.5" ></text>
</g>
<g >
<title>F[(List[String], String, List[String], List[String], org.scalasteward.core.forge.data.NewPullRequestData)] =&gt; ?{def map: ?} (expanded macros 0)  (745 Î¼s, 0.02%)</title><rect x="32.7" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="35.69" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (691 Î¼s, 0.02%)</title><rect x="256.8" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="259.76" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,420 Î¼s, 0.22%)</title><rect x="530.2" y="149" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="533.22" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,061 Î¼s, 0.03%)</title><rect x="405.7" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="408.65" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[org.scalasteward.core.data.Scope] (expanded macros 0)  (837 Î¼s, 0.02%)</title><rect x="212.9" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="215.86" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7186) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,030 Î¼s, 0.03%)</title><rect x="1005.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1008.63" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,455 Î¼s, 0.04%)</title><rect x="613.7" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="616.66" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Header]{type Out = K} (id 1659) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,255 Î¼s, 0.03%)</title><rect x="408.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="411.38" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)  (63,505 Î¼s, 1.63%)</title><rect x="951.5" y="165" width="19.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="954.49" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (2,687 Î¼s, 0.07%)</title><rect x="1096.4" y="149" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1099.36" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Host]] (expanded macros 0)  (447 Î¼s, 0.01%)</title><rect x="145.1" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="148.08" y="239.5" ></text>
</g>
<g >
<title>cats.Monad[F] (expanded macros 0)  (935 Î¼s, 0.02%)</title><rect x="215.0" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="218.01" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] (expanded macros 0)  (696 Î¼s, 0.02%)</title><rect x="729.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.99" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil] (id 4814) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,201 Î¼s, 0.08%)</title><rect x="507.6" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="510.55" y="207.5" ></text>
</g>
<g >
<title>resolvers.type =&gt; ?{def traverseFilter: ?} (expanded macros 0)  (885 Î¼s, 0.02%)</title><rect x="351.1" y="245" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="354.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.Comment]{type Repr = V} (id 4301) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (452 Î¼s, 0.01%)</title><rect x="440.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="443.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.RepoConfig]{type Out = Options} (id 7830) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (1,652 Î¼s, 0.04%)</title><rect x="1056.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1059.66" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)] :: shapeless.HNil,org.scalasteward.core.util.Timestamp :: List[org.scalasteward.core.data.Version] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (30,899 Î¼s, 0.79%)</title><rect x="364.1" y="197" width="9.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="367.05" y="207.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def voidError: ?} (expanded macros 0)  (851 Î¼s, 0.02%)</title><rect x="102.1" y="245" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="105.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Repr = V} (expanded macros 3)   (829 Î¼s, 0.02%)</title><rect x="752.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="755.24" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (780 Î¼s, 0.02%)</title><rect x="627.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="630.83" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Out = K} (id 4172) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (477 Î¼s, 0.01%)</title><rect x="754.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="757.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Repr = V} (expanded macros 3)   (2,128 Î¼s, 0.05%)</title><rect x="526.7" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="529.66" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.nurture.PullRequestData[cats.Id]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (442 Î¼s, 0.01%)</title><rect x="59.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.03" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,486 Î¼s, 0.06%)</title><rect x="942.0" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="945.02" y="127.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.CrossDependency] (expanded macros 0)   (630 Î¼s, 0.02%)</title><rect x="302.5" y="213" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="305.52" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (id 5543) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (699 Î¼s, 0.02%)</title><rect x="761.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="764.04" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (id 2163) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (830 Î¼s, 0.02%)</title><rect x="928.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="931.17" y="207.5" ></text>
</g>
<g >
<title>x$7.type =&gt; ?{def unwrap: ?} (expanded macros 0)  (753 Î¼s, 0.02%)</title><rect x="1186.4" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1189.40" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.PR] (expanded macros 0)  (18,741 Î¼s, 0.48%)</title><rect x="745.5" y="229" width="5.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="748.53" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] (expanded macros 0)  (495 Î¼s, 0.01%)</title><rect x="739.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="741.97" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]] (id 4836) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (21,667 Î¼s, 0.55%)</title><rect x="442.3" y="245" width="6.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="445.27" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver] (expanded macros 0)  (1,420 Î¼s, 0.04%)</title><rect x="420.0" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="422.95" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.update.artifact.ArtifactChange] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)],List[org.scalasteward.core.update.artifact.ArtifactChange]] :: shapeless.HNil]] (id 8849) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,578 Î¼s, 0.07%)</title><rect x="1169.5" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1172.46" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Repr = V} (id 4588) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,346 Î¼s, 0.03%)</title><rect x="520.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="522.99" y="207.5" ></text>
</g>
<g >
<title>fs2.compat.NotGiven[Iterator[better.files.File] &lt;:&lt; Nothing] (expanded macros 0)  (446 Î¼s, 0.01%)</title><rect x="281.1" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="284.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2083) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (492 Î¼s, 0.01%)</title><rect x="976.6" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="979.63" y="79.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)]} (id 8187) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (411 Î¼s, 0.01%)</title><rect x="595.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="598.57" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1839) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (737 Î¼s, 0.02%)</title><rect x="943.0" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="946.03" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = K} (id 8123) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (333 Î¼s, 0.01%)</title><rect x="1089.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1092.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,024 Î¼s, 0.03%)</title><rect x="384.9" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="387.87" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,473 Î¼s, 0.06%)</title><rect x="967.8" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="970.80" y="127.5" ></text>
</g>
<g >
<title>(=&gt; names.type) =&gt; ?{def mkString_: ?} (expanded macros 0)   (336 Î¼s, 0.01%)</title><rect x="19.3" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="22.34" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,057 Î¼s, 0.03%)</title><rect x="884.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="887.89" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,393 Î¼s, 0.09%)</title><rect x="943.9" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="946.85" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (771 Î¼s, 0.02%)</title><rect x="271.1" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="274.15" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,441 Î¼s, 0.11%)</title><rect x="831.2" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="834.23" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 5486) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (526 Î¼s, 0.01%)</title><rect x="906.6" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="909.64" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)]} (id 8499) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (435 Î¼s, 0.01%)</title><rect x="917.5" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="920.52" y="159.5" ></text>
</g>
<g >
<title>F[Seq[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def map: ?} (expanded macros 0)  (535 Î¼s, 0.01%)</title><rect x="73.1" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="76.05" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.data.Repo,org.scalasteward.core.repocache.RepoCache]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,540 Î¼s, 0.04%)</title><rect x="124.2" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="127.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1970) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (500 Î¼s, 0.01%)</title><rect x="987.0" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="990.03" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (486 Î¼s, 0.01%)</title><rect x="909.2" y="37" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="912.19" y="47.5" ></text>
</g>
<g >
<title>F[Boolean] =&gt; ?{def ifM: ?} (expanded macros 0)  (2,009 Î¼s, 0.05%)</title><rect x="41.3" y="245" width="0.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="44.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,809 Î¼s, 0.05%)</title><rect x="747.9" y="149" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="750.94" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.SemVer.Change] (expanded macros 0)  (622 Î¼s, 0.02%)</title><rect x="324.3" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="327.33" y="239.5" ></text>
</g>
<g >
<title>F[(Option[String], String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (402 Î¼s, 0.01%)</title><rect x="34.8" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="37.77" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)  (885 Î¼s, 0.02%)</title><rect x="329.8" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="332.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.coursier.VersionsCache.Value]{type Out = K} (id 1318) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (8,739 Î¼s, 0.22%)</title><rect x="359.5" y="197" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="362.53" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.BuildRootConfig]] (expanded macros 0)  (783 Î¼s, 0.02%)</title><rect x="1074.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1076.99" y="175.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[N,Int] (expanded macros 0)  (1,338 Î¼s, 0.03%)</title><rect x="273.5" y="197" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="276.51" y="207.5" ></text>
</g>
<g >
<title>Seq[java.nio.file.attribute.FileAttribute[_]] (expanded macros 0)   (462 Î¼s, 0.01%)</title><rect x="151.2" y="245" width="0.1" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="154.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,253 Î¼s, 0.03%)</title><rect x="417.8" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="420.79" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)]} (id 4555) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,335 Î¼s, 0.03%)</title><rect x="545.6" y="69" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="548.60" y="79.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: List[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)],List[org.scalasteward.core.data.Version]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)],Option[String]] :: shapeless.HNil] (id 1331) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (27,957 Î¼s, 0.72%)</title><rect x="373.7" y="197" width="8.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="376.66" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] :: shapeless.HNil] (id 3967) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,419 Î¼s, 0.04%)</title><rect x="736.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="739.31" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = D} (expanded macros 0)  (2,025 Î¼s, 0.05%)</title><rect x="1150.7" y="213" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1153.65" y="223.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.GroupId =&gt; ?{def === : ?} (expanded macros 0)  (8,536 Î¼s, 0.22%)</title><rect x="339.6" y="245" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="342.56" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (1,271 Î¼s, 0.03%)</title><rect x="585.8" y="133" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="588.84" y="143.5" ></text>
</g>
<g >
<title>cats.Traverse[Option] (expanded macros 0)  (332 Î¼s, 0.01%)</title><rect x="144.4" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="147.44" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.update.artifact.ArtifactMigrationsFinder] =&gt; ?{def map: ?} (expanded macros 0)  (1,261 Î¼s, 0.03%)</title><rect x="125.9" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (754 Î¼s, 0.02%)</title><rect x="989.4" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="992.35" y="111.5" ></text>
</g>
<g >
<title>SelfCheckAlg.this.config.urlCheckerTestUrls.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (807 Î¼s, 0.02%)</title><rect x="150.4" y="245" width="0.2" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="153.40" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.UpdateState]{type Repr = R} (expanded macros 0)  (4,527 Î¼s, 0.12%)</title><rect x="883.1" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="886.12" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,681 Î¼s, 0.07%)</title><rect x="761.3" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="764.25" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Sha1] =&gt; ?{def flatMap: ?} (expanded macros 0)  (730 Î¼s, 0.02%)</title><rect x="122.2" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="125.22" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.data.RepoData] =&gt; ?{def map: ?} (expanded macros 0)  (663 Î¼s, 0.02%)</title><rect x="112.3" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="115.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4057) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (366 Î¼s, 0.01%)</title><rect x="873.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="876.57" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.ScalafmtConfig] (expanded macros 0)  (14,226 Î¼s, 0.36%)</title><rect x="1087.6" y="229" width="4.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1090.60" y="239.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (14,515 Î¼s, 0.37%)</title><rect x="205.7" y="245" width="4.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="208.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) &lt;: String],Lub0] (expanded macros 0)  (478 Î¼s, 0.01%)</title><rect x="1081.6" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1084.62" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)]} (id 8476) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (635 Î¼s, 0.02%)</title><rect x="832.3" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="835.27" y="143.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenConcurrent[F,Throwable] (expanded macros 0)  (1,406 Î¼s, 0.04%)</title><rect x="227.5" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="230.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Repr = V} (id 4806) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,559 Î¼s, 0.04%)</title><rect x="504.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="507.95" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (2,449 Î¼s, 0.06%)</title><rect x="1147.5" y="229" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1150.49" y="239.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (980 Î¼s, 0.03%)</title><rect x="101.3" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="104.31" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestNumber]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (733 Î¼s, 0.02%)</title><rect x="1148.0" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1151.01" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[[+A]cats.effect.kernel.Resource[F,A]] (expanded macros 0)  (1,289 Î¼s, 0.03%)</title><rect x="210.7" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="213.74" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.data.ProcessResult] =&gt; ?{def flatMap: ?} (expanded macros 0)  (428 Î¼s, 0.01%)</title><rect x="112.0" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="115.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]] (id 4667) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (38,510 Î¼s, 0.99%)</title><rect x="523.2" y="245" width="11.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="526.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1957) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (341 Î¼s, 0.01%)</title><rect x="984.5" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="987.45" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,686 Î¼s, 0.09%)</title><rect x="506.3" y="181" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="509.27" y="191.5" ></text>
</g>
<g >
<title>cats.effect.kernel.MonadCancel[F,E] (expanded macros 0)  (401 Î¼s, 0.01%)</title><rect x="228.3" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="231.32" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Version]] (expanded macros 0)  (2,006 Î¼s, 0.05%)</title><rect x="380.6" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="383.55" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Out = K} (id 4839) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,798 Î¼s, 0.05%)</title><rect x="444.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="447.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)]} (id 4622) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,478 Î¼s, 0.04%)</title><rect x="453.0" y="181" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="456.03" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = R} (expanded macros 0)  (425 Î¼s, 0.01%)</title><rect x="1167.6" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1170.58" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (id 7203) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (8,953 Î¼s, 0.23%)</title><rect x="1008.2" y="197" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1011.21" y="207.5" ></text>
</g>
<g >
<title>F[cats.effect.ExitCode] =&gt; ?{def map: ?} (expanded macros 0)  (431 Î¼s, 0.01%)</title><rect x="109.0" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="112.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,040 Î¼s, 0.05%)</title><rect x="1161.5" y="181" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1164.51" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.CreateComment]{type Repr = R} (expanded macros 0)  (3,657 Î¼s, 0.09%)</title><rect x="423.3" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="426.26" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,714 Î¼s, 0.04%)</title><rect x="942.3" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="945.26" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (1,841 Î¼s, 0.05%)</title><rect x="613.5" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="616.54" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (927 Î¼s, 0.02%)</title><rect x="981.4" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="984.35" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: org.scalasteward.core.forge.data.UserOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.data.UserOut] :: Option[org.scalasteward.core.forge.data.RepoOut] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.data.RepoOut]] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: shapeless.HNil] (id 4440) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (4,666 Î¼s, 0.12%)</title><rect x="774.8" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="777.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)]} (id 4177) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (455 Î¼s, 0.01%)</title><rect x="755.6" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="758.55" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (expanded macros 3)   (1,688 Î¼s, 0.04%)</title><rect x="847.2" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="850.23" y="207.5" ></text>
</g>
<g >
<title>org.http4s.EntityDecoder[[_]F[_],Unit] (expanded macros 0)  (2,502 Î¼s, 0.06%)</title><rect x="334.6" y="245" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="337.60" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[String]] (expanded macros 0)  (350 Î¼s, 0.01%)</title><rect x="1187.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1190.00" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.InstallationOut]{type Repr = V} (id 5306) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (485 Î¼s, 0.01%)</title><rect x="779.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="782.50" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (997 Î¼s, 0.03%)</title><rect x="790.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="793.26" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Repr = R} (expanded macros 0)  (13,417 Î¼s, 0.34%)</title><rect x="549.9" y="213" width="4.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="552.91" y="223.5" ></text>
</g>
<g >
<title>sbtCommands.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot; (717 Î¼s, 0.02%)</title><rect x="352.3" y="245" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="355.33" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[Option] (expanded macros 0)  (347 Î¼s, 0.01%)</title><rect x="332.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="335.61" y="239.5" ></text>
</g>
<g >
<title>response.type =&gt; ?{def as: ?} (expanded macros 0)  (1,293 Î¼s, 0.03%)</title><rect x="351.4" y="245" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="354.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 3397) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (342 Î¼s, 0.01%)</title><rect x="868.5" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="871.51" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil] (expanded macros 0)  (696 Î¼s, 0.02%)</title><rect x="928.7" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="931.67" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)]} (id 6811) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (508 Î¼s, 0.01%)</title><rect x="576.6" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="579.63" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],String] :: shapeless.HNil]] (id 1667) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,061 Î¼s, 0.08%)</title><rect x="410.0" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="413.01" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[List[org.scalasteward.core.forge.azurerepos.AzureComment] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)],List[org.scalasteward.core.forge.azurerepos.AzureComment]] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],Int] :: shapeless.HNil] (id 3450) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,713 Î¼s, 0.04%)</title><rect x="864.8" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="867.75" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (1,741 Î¼s, 0.04%)</title><rect x="271.0" y="213" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="273.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 40} (id 6041) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (570 Î¼s, 0.01%)</title><rect x="307.9" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="310.90" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7862) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (557 Î¼s, 0.01%)</title><rect x="1051.7" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1054.68" y="63.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Repr = V} (expanded macros 3)   (2,309 Î¼s, 0.06%)</title><rect x="559.2" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="562.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (id 2858) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (555 Î¼s, 0.01%)</title><rect x="1153.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.08" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],List[String]] :: shapeless.HNil]] (id 5292) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,127 Î¼s, 0.05%)</title><rect x="894.1" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="897.12" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Repo] (expanded macros 0)  (736 Î¼s, 0.02%)</title><rect x="315.9" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="318.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4811) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,164 Î¼s, 0.03%)</title><rect x="505.9" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="508.92" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1700) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,250 Î¼s, 0.03%)</title><rect x="958.4" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="961.42" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8349) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (988 Î¼s, 0.03%)</title><rect x="1132.0" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1134.98" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (1,000 Î¼s, 0.03%)</title><rect x="978.0" y="117" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="980.98" y="127.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (793 Î¼s, 0.02%)</title><rect x="342.4" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="345.37" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7655) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (446 Î¼s, 0.01%)</title><rect x="1066.6" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1069.57" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,755 Î¼s, 0.07%)</title><rect x="398.1" y="149" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="401.06" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)]} (id 2363) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,205 Î¼s, 0.03%)</title><rect x="608.5" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="611.50" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (8,241 Î¼s, 0.21%)</title><rect x="1099.4" y="197" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1102.37" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = K} (id 8832) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (447 Î¼s, 0.01%)</title><rect x="1167.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1170.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RepoCache]{type Repr = V} (expanded macros 3)   (1,272 Î¼s, 0.03%)</title><rect x="580.9" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="583.91" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)  (3,842 Î¼s, 0.10%)</title><rect x="325.7" y="245" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="328.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Dependency]{type Out = K} (id 1459) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,180 Î¼s, 0.03%)</title><rect x="395.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="398.86" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (1,535 Î¼s, 0.04%)</title><rect x="958.8" y="133" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="961.80" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubAssignees]] (id 5252) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,634 Î¼s, 0.20%)</title><rect x="889.8" y="245" width="2.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="892.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,710 Î¼s, 0.04%)</title><rect x="827.0" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="829.97" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver]{type Repr = R} (expanded macros 0)  (877 Î¼s, 0.02%)</title><rect x="926.7" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="929.71" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,054 Î¼s, 0.03%)</title><rect x="532.4" y="101" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="535.45" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)]} (id 6810) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (649 Î¼s, 0.02%)</title><rect x="577.0" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="579.96" y="175.5" ></text>
</g>
<g >
<title>c1.type =&gt; ?{def compare: ?} (expanded macros 0)  (1,699 Î¼s, 0.04%)</title><rect x="194.2" y="245" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="197.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (10,775 Î¼s, 0.28%)</title><rect x="1083.5" y="197" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1086.51" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (785 Î¼s, 0.02%)</title><rect x="495.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.14" y="191.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.util.Timestamp] =&gt; io.circe.Json (expanded macros 0)   (358 Î¼s, 0.01%)</title><rect x="578.6" y="181" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="581.56" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (687 Î¼s, 0.02%)</title><rect x="619.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="622.79" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)]} (id 7258) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (340 Î¼s, 0.01%)</title><rect x="1016.2" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1019.21" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(A, List[org.scalasteward.core.data.Resolver])] (expanded macros 0)  (1,201 Î¼s, 0.03%)</title><rect x="248.1" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="251.11" y="255.5" ></text>
</g>
<g >
<title>F[(List[(String, List[org.scalasteward.core.nurture.UpdateInfoUrl])], scala.collection.immutable.Map[String,String])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (529 Î¼s, 0.01%)</title><rect x="32.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="35.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]] (id 3408) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,866 Î¼s, 0.18%)</title><rect x="860.5" y="245" width="2.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="863.48" y="255.5" ></text>
</g>
<g >
<title>cats.Applicative[[+A]cats.effect.kernel.Resource[F,A]] (expanded macros 0)  (2,497 Î¼s, 0.06%)</title><rect x="197.1" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="200.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,921 Î¼s, 0.15%)</title><rect x="1067.4" y="117" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1070.41" y="127.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Repr = R} (expanded macros 0)  (11,868 Î¼s, 0.30%)</title><rect x="497.4" y="213" width="3.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="500.40" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7544) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,010 Î¼s, 0.03%)</title><rect x="1043.7" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1046.70" y="175.5" ></text>
</g>
<g >
<title>String(&quot;state_event&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (389 Î¼s, 0.01%)</title><rect x="164.7" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="167.74" y="255.5" ></text>
</g>
<g >
<title>expr.datePart.type =&gt; ?{def allOf: ?} (expanded macros 0)  (1,985 Î¼s, 0.05%)</title><rect x="274.3" y="245" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="277.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ProjectId]{type Out = K} (id 5453) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (603 Î¼s, 0.02%)</title><rect x="791.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="794.55" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (773 Î¼s, 0.02%)</title><rect x="578.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="581.02" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,716 Î¼s, 0.15%)</title><rect x="1076.5" y="165" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1079.48" y="175.5" ></text>
</g>
<g >
<title>cats.UnorderedFoldable[List] (expanded macros 0)  (583 Î¼s, 0.01%)</title><rect x="219.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="222.55" y="255.5" ></text>
</g>
<g >
<title>expr.type =&gt; ?{def next: ?} (expanded macros 0)  (1,505 Î¼s, 0.04%)</title><rect x="274.9" y="245" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="277.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2076) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (675 Î¼s, 0.02%)</title><rect x="975.0" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="978.03" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (939 Î¼s, 0.02%)</title><rect x="597.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="600.78" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Less[shapeless._0]]{type R = R} (expanded macros 0)  (2,997 Î¼s, 0.08%)</title><rect x="270.6" y="229" width="0.9" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="273.61" y="239.5" ></text>
</g>
<g >
<title>coursier.util.Monad[[_]F[_]] (expanded macros 0)  (741 Î¼s, 0.02%)</title><rect x="260.4" y="245" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="263.38" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.MergeRequestApprovalsOut] =&gt; ?{def map: ?} (expanded macros 0)  (514 Î¼s, 0.01%)</title><rect x="120.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="123.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 3} (id 2275) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,644 Î¼s, 0.04%)</title><rect x="1170.8" y="245" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1173.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (id 8470) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (949 Î¼s, 0.02%)</title><rect x="830.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="833.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (id 7334) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (733 Î¼s, 0.02%)</title><rect x="826.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="829.32" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (4,226 Î¼s, 0.11%)</title><rect x="969.4" y="117" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="972.40" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.azurerepos.Paginated[org.scalasteward.core.forge.data.PullRequestOut]] (expanded macros 0)  (1,510 Î¼s, 0.04%)</title><rect x="311.3" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="314.32" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.data.UpdateState] (expanded macros 0)  (7,116 Î¼s, 0.18%)</title><rect x="883.1" y="229" width="2.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="886.06" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.BuildRootConfig] (expanded macros 0)  (549 Î¼s, 0.01%)</title><rect x="1074.1" y="149" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.06" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.MergeRequestPayload]] (id 5462) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (34,410 Î¼s, 0.88%)</title><rect x="900.7" y="245" width="10.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="903.73" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Char] (expanded macros 0)  (1,018 Î¼s, 0.03%)</title><rect x="232.2" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="235.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.PullRequestOut]] (id 4377) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,795 Î¼s, 0.35%)</title><rect x="765.9" y="245" width="4.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="768.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,948 Î¼s, 0.05%)</title><rect x="398.3" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="401.30" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.UpdatePattern]] (id 8174) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,032 Î¼s, 0.44%)</title><rect x="593.1" y="245" width="5.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="596.07" y="255.5" ></text>
</g>
<g >
<title>F[(Unit, List[(org.scalasteward.core.data.Version, org.scalasteward.core.data.Dependency)], List[org.scalasteward.core.data.Resolver])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (501 Î¼s, 0.01%)</title><rect x="35.5" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="38.49" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil] (expanded macros 0)  (496 Î¼s, 0.01%)</title><rect x="993.2" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="996.19" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.ArtifactId]{type Out = K} (id 1386) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (919 Î¼s, 0.02%)</title><rect x="383.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="386.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (723 Î¼s, 0.02%)</title><rect x="1090.2" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1093.20" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatePattern]{type Repr = R} (expanded macros 0)  (7,673 Î¼s, 0.20%)</title><rect x="594.0" y="213" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="597.04" y="223.5" ></text>
</g>
<g >
<title>result.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (471 Î¼s, 0.01%)</title><rect x="351.8" y="245" width="0.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="354.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1767) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,254 Î¼s, 0.06%)</title><rect x="969.5" y="101" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="972.54" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1893) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (365 Î¼s, 0.01%)</title><rect x="949.4" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="952.37" y="95.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.edit.EditAttempt]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (404 Î¼s, 0.01%)</title><rect x="67.8" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="70.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7063) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (416 Î¼s, 0.01%)</title><rect x="994.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="997.58" y="207.5" ></text>
</g>
<g >
<title>F[(better.files.File, String, cats.data.NonEmptyList[String], scala.collection.immutable.Set[org.scalasteward.core.io.process.SlurpOption])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (505 Î¼s, 0.01%)</title><rect x="37.3" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="40.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Repr = V} (expanded macros 3)   (837 Î¼s, 0.02%)</title><rect x="731.7" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="734.70" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = R} (expanded macros 0)  (1,622 Î¼s, 0.04%)</title><rect x="1057.2" y="213" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1060.16" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (expanded macros 3)   (719 Î¼s, 0.02%)</title><rect x="994.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="997.71" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (1,135 Î¼s, 0.03%)</title><rect x="1072.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1074.97" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.GroupRepoConfig] (expanded macros 0)  (566 Î¼s, 0.01%)</title><rect x="1073.8" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1076.76" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (693 Î¼s, 0.02%)</title><rect x="232.9" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="235.91" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2119) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (403 Î¼s, 0.01%)</title><rect x="981.5" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="984.48" y="95.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload] (expanded macros 0)  (7,340 Î¼s, 0.19%)</title><rect x="863.1" y="229" width="2.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="866.05" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (364 Î¼s, 0.01%)</title><rect x="910.6" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="913.64" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil]] (id 4813) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,749 Î¼s, 0.10%)</title><rect x="507.4" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="510.39" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7169) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (869 Î¼s, 0.02%)</title><rect x="1003.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1006.10" y="207.5" ></text>
</g>
<g >
<title>F[cats.effect.kernel.Ref[F,Option[(K, Option[V])]]] =&gt; ?{def map: ?} (expanded macros 0)  (903 Î¼s, 0.02%)</title><rect x="109.1" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="112.14" y="255.5" ></text>
</g>
<g >
<title>F[better.files.File] =&gt; ?{def void: ?} (expanded macros 0)  (655 Î¼s, 0.02%)</title><rect x="108.8" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="111.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (3,596 Î¼s, 0.09%)</title><rect x="980.5" y="149" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="983.55" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)]} (id 4319) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (702 Î¼s, 0.02%)</title><rect x="765.0" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="767.98" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Out = K} (id 4226) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (546 Î¼s, 0.01%)</title><rect x="437.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="440.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)]} (id 2307) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,533 Î¼s, 0.04%)</title><rect x="841.0" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="844.00" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] :: shapeless.HNil]] (id 3966) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,754 Î¼s, 0.04%)</title><rect x="736.2" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="739.21" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (3,558 Î¼s, 0.09%)</title><rect x="254.3" y="245" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="257.26" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Repr = V} (id 4507) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,409 Î¼s, 0.04%)</title><rect x="464.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="467.67" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.data.Resolver]] (id 1671) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (242,765 Î¼s, 6.22%)</title><rect x="918.7" y="245" width="73.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="921.67" y="255.5" >shapeles..</text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,945 Î¼s, 0.10%)</title><rect x="856.3" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="859.25" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (5,482 Î¼s, 0.14%)</title><rect x="1013.6" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1016.57" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.PullRequestGroup]] (id 7358) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (11,404 Î¼s, 0.29%)</title><rect x="911.1" y="245" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="914.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,301 Î¼s, 0.21%)</title><rect x="563.0" y="149" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="566.01" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (543 Î¼s, 0.01%)</title><rect x="997.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1000.05" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.ScalafmtConfig] (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="1073.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1076.13" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Greater['f']]{type R = R} (expanded macros 0)  (1,829 Î¼s, 0.05%)</title><rect x="304.4" y="149" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="307.42" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,Int :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,514 Î¼s, 0.17%)</title><rect x="505.4" y="197" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="508.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)]} (id 1473) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (368 Î¼s, 0.01%)</title><rect x="397.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="400.44" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,String :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,205 Î¼s, 0.06%)</title><rect x="755.1" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="758.08" y="207.5" ></text>
</g>
<g >
<title>F[_1] =&gt; ?{def map: ?} (expanded macros 0)  (804 Î¼s, 0.02%)</title><rect x="104.2" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="107.16" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version] (expanded macros 0)  (1,082 Î¼s, 0.03%)</title><rect x="148.2" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="151.20" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Version] (id 2544) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (820 Î¼s, 0.02%)</title><rect x="1146.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1149.43" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] (expanded macros 0)  (4,071 Î¼s, 0.10%)</title><rect x="1120.7" y="181" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1123.65" y="191.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.forge.data.Comment, org.scalasteward.core.git.Branch)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (502 Î¼s, 0.01%)</title><rect x="38.7" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="41.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,248 Î¼s, 0.21%)</title><rect x="1123.4" y="197" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1126.42" y="207.5" ></text>
</g>
<g >
<title>fs2.compat.NotGiven[List[org.scalasteward.core.data.Repo] &lt;:&lt; Nothing] (expanded macros 0)  (780 Î¼s, 0.02%)</title><rect x="281.2" y="245" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="284.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil]] (id 7343) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,783 Î¼s, 0.10%)</title><rect x="827.5" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="830.48" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,641 Î¼s, 0.27%)</title><rect x="1066.0" y="181" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1068.98" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp] (expanded macros 0)  (19,548 Î¼s, 0.50%)</title><rect x="455.9" y="229" width="5.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="458.85" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucketserver.Json.NewPR] (expanded macros 0)  (674 Î¼s, 0.02%)</title><rect x="327.8" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="330.76" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,616 Î¼s, 0.04%)</title><rect x="583.1" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="586.08" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,602 Î¼s, 0.04%)</title><rect x="843.2" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="846.16" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (814 Î¼s, 0.02%)</title><rect x="587.8" y="149" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="590.76" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.update.artifact.ArtifactChanges] (expanded macros 0)  (709 Î¼s, 0.02%)</title><rect x="322.1" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="325.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Repr = V} (id 3928) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (675 Î¼s, 0.02%)</title><rect x="732.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="734.96" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[com.monovore.decline.Opts] (expanded macros 0)  (4,222 Î¼s, 0.11%)</title><rect x="211.2" y="245" width="1.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="214.23" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestOut] (expanded macros 0)  (672 Î¼s, 0.02%)</title><rect x="287.3" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="290.33" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (id 2354) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,069 Î¼s, 0.05%)</title><rect x="607.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="610.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,280 Î¼s, 0.03%)</title><rect x="764.8" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="767.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1759) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (792 Î¼s, 0.02%)</title><rect x="952.3" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="955.26" y="143.5" ></text>
</g>
<g >
<title>cats.Applicative[F] (expanded macros 0)  (3,532 Î¼s, 0.09%)</title><rect x="195.9" y="245" width="1.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="198.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)],String] :: shapeless.HNil]] (id 3981) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,392 Î¼s, 0.06%)</title><rect x="431.8" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="434.85" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,958 Î¼s, 0.05%)</title><rect x="1159.9" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1162.85" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (340 Î¼s, 0.01%)</title><rect x="346.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="349.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] (id 4000) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,154 Î¼s, 0.18%)</title><rect x="739.1" y="245" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="742.11" y="255.5" ></text>
</g>
<g >
<title>create.type =&gt; ?{def map: ?} (expanded macros 0)  (1,132 Î¼s, 0.03%)</title><rect x="262.1" y="245" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="265.13" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.DefaultReviewers] (expanded macros 0)  (8,010 Î¼s, 0.21%)</title><rect x="425.4" y="229" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="428.39" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (610 Î¼s, 0.02%)</title><rect x="1177.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1180.80" y="239.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.git.Commit]] =&gt; ?{def map: ?} (expanded macros 0)  (1,966 Î¼s, 0.05%)</title><rect x="68.4" y="245" width="0.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="71.42" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)   (523 Î¼s, 0.01%)</title><rect x="1037.3" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1040.33" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,305 Î¼s, 0.03%)</title><rect x="1001.5" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.54" y="191.5" ></text>
</g>
<g >
<title>String(&quot;Grouped&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (605 Î¼s, 0.02%)</title><rect x="154.9" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="157.88" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (640 Î¼s, 0.02%)</title><rect x="578.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="581.37" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.Details =&gt; ?{def some: ?} (expanded macros 0)  (934 Î¼s, 0.02%)</title><rect x="347.2" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="350.18" y="255.5" ></text>
</g>
<g >
<title>x$3.type =&gt; ?{def =!= : ?} (expanded macros 0)  (497 Î¼s, 0.01%)</title><rect x="1183.2" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1186.22" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.bitbucketserver.Json.Repository :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,976 Î¼s, 0.05%)</title><rect x="878.7" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="881.74" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (1,690 Î¼s, 0.04%)</title><rect x="1173.5" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1176.46" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[A with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],A] :: List[org.scalasteward.core.data.Resolver] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)],List[org.scalasteward.core.data.Resolver]] :: shapeless.HNil] (id 2202) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (6,809 Î¼s, 0.17%)</title><rect x="418.3" y="197" width="2.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="421.32" y="207.5" ></text>
</g>
<g >
<title>cats.Bifoldable[Either] (expanded macros 0)  (474 Î¼s, 0.01%)</title><rect x="197.8" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="200.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,421 Î¼s, 0.22%)</title><rect x="906.8" y="133" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="909.79" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Repr = V} (expanded macros 3)   (1,867 Î¼s, 0.05%)</title><rect x="464.1" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="467.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)],String] :: shapeless.HNil]] (id 1650) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,261 Î¼s, 0.08%)</title><rect x="406.0" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="408.97" y="223.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (2,730 Î¼s, 0.07%)</title><rect x="218.2" y="245" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="221.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,474 Î¼s, 0.06%)</title><rect x="1007.3" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1010.30" y="175.5" ></text>
</g>
<g >
<title>o1.type =&gt; ?{def compare: ?} (expanded macros 0)  (1,404 Î¼s, 0.04%)</title><rect x="334.1" y="245" width="0.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="337.08" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]{type R = RB} (expanded macros 0)  (6,384 Î¼s, 0.16%)</title><rect x="267.6" y="181" width="2.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="270.64" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]]{type R = RA} (expanded macros 0)  (12,978 Î¼s, 0.33%)</title><rect x="303.5" y="213" width="3.9" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="306.45" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Repr = V} (expanded macros 3)   (990 Î¼s, 0.03%)</title><rect x="887.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="890.25" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = R} (expanded macros 0)  (2,348 Î¼s, 0.06%)</title><rect x="1089.7" y="213" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1092.71" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Repr = V} (expanded macros 3)   (1,133 Î¼s, 0.03%)</title><rect x="746.5" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="749.50" y="207.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] =&gt; io.circe.Json (expanded macros 0)   (785 Î¼s, 0.02%)</title><rect x="534.6" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="537.60" y="191.5" ></text>
</g>
<g >
<title>hook.command.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot; &quot;)): ?} (expanded macros 0)  (358 Î¼s, 0.01%)</title><rect x="283.8" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="286.76" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Repr = V} (id 3687) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (512 Î¼s, 0.01%)</title><rect x="426.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="429.12" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)],String] :: shapeless.HNil] (id 5407) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,751 Î¼s, 0.04%)</title><rect x="900.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="903.20" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.UpdateState] (expanded macros 0)  (657 Î¼s, 0.02%)</title><rect x="328.4" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="331.39" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (8,036 Î¼s, 0.21%)</title><rect x="299.3" y="245" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="302.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,698 Î¼s, 0.04%)</title><rect x="732.2" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="735.16" y="207.5" ></text>
</g>
<g >
<title>cats.FlatMap[List] (expanded macros 0)  (6,528 Î¼s, 0.17%)</title><rect x="201.5" y="245" width="1.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="204.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = R} (expanded macros 0)  (17,624 Î¼s, 0.45%)</title><rect x="1063.9" y="213" width="5.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1066.87" y="223.5" ></text>
</g>
<g >
<title>to.minor.type =&gt; ?{def =!= : ?} (expanded macros 0)  (458 Î¼s, 0.01%)</title><rect x="1173.0" y="245" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1176.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Repr = R} (expanded macros 0)  (5,370 Î¼s, 0.14%)</title><rect x="754.1" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="757.13" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;full_name&quot;)],String] :: shapeless.HNil] (id 5349) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,238 Î¼s, 0.03%)</title><rect x="784.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="787.44" y="207.5" ></text>
</g>
<g >
<title>org.http4s.headers.Authorization =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (2,120 Î¼s, 0.05%)</title><rect x="337.8" y="245" width="0.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="340.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,417 Î¼s, 0.09%)</title><rect x="1014.2" y="181" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.19" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version.Component] (expanded macros 0)  (1,393 Î¼s, 0.04%)</title><rect x="193.8" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="196.77" y="239.5" ></text>
</g>
<g >
<title>F[Either[Throwable,List[String]]] =&gt; ?{def map: ?} (expanded macros 0)  (531 Î¼s, 0.01%)</title><rect x="42.8" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="45.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Out = K} (id 4228) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (403 Î¼s, 0.01%)</title><rect x="438.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="441.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.Repository]{type Repr = V} (expanded macros 3)   (653 Î¼s, 0.02%)</title><rect x="783.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="786.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = K} (id 8160) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (402 Î¼s, 0.01%)</title><rect x="1088.0" y="213" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1090.98" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]] (expanded macros 0)  (16,871 Î¼s, 0.43%)</title><rect x="303.2" y="245" width="5.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="306.24" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Branch] =&gt; ?{def map: ?} (expanded macros 0)  (635 Î¼s, 0.02%)</title><rect x="114.4" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="117.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Repr = R} (expanded macros 0)  (317,539 Î¼s, 8.13%)</title><rect x="630.6" y="213" width="96.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="633.58" y="223.5" >shapeless.L..</text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (828 Î¼s, 0.02%)</title><rect x="1010.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1013.50" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (8,234 Î¼s, 0.21%)</title><rect x="1040.0" y="213" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1043.02" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UpdateState]{type Out = K} (id 4469) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (349 Î¼s, 0.01%)</title><rect x="883.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="886.46" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Long] (expanded macros 0)  (434 Î¼s, 0.01%)</title><rect x="555.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="558.06" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,037 Î¼s, 0.03%)</title><rect x="748.2" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="751.17" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label] (expanded macros 0)  (19,037 Î¼s, 0.49%)</title><rect x="502.8" y="229" width="5.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="505.77" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,074 Î¼s, 0.08%)</title><rect x="917.1" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="920.11" y="191.5" ></text>
</g>
<g >
<title>x$1.type =&gt; ?{def sequence: ?} (expanded macros 0)  (3,150 Î¼s, 0.08%)</title><rect x="1179.1" y="245" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1182.14" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[cats.data.NonEmptyList[String]]] (expanded macros 0)  (612 Î¼s, 0.02%)</title><rect x="728.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="730.96" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] (expanded macros 0)  (777 Î¼s, 0.02%)</title><rect x="1074.3" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.28" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,038 Î¼s, 0.03%)</title><rect x="438.6" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="441.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,857 Î¼s, 0.05%)</title><rect x="960.9" y="85" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="963.89" y="95.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2462) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,270 Î¼s, 0.03%)</title><rect x="855.1" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="858.06" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (836 Î¼s, 0.02%)</title><rect x="286.4" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="289.40" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8252) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,040 Î¼s, 0.03%)</title><rect x="1107.4" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1110.45" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)  (12,347 Î¼s, 0.32%)</title><rect x="574.9" y="229" width="3.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="577.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (874 Î¼s, 0.02%)</title><rect x="913.4" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="916.35" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1887) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (402 Î¼s, 0.01%)</title><rect x="948.7" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="951.67" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)   (1,023 Î¼s, 0.03%)</title><rect x="937.5" y="181" width="0.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="940.52" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (expanded macros 3)   (1,212 Î¼s, 0.03%)</title><rect x="1003.6" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1006.59" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,793 Î¼s, 0.07%)</title><rect x="875.0" y="101" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="878.04" y="111.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Repr = R} (expanded macros 0)  (3,928 Î¼s, 0.10%)</title><rect x="425.5" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="428.47" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Out = K} (id 4786) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,613 Î¼s, 0.04%)</title><rect x="457.0" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="460.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = R} (expanded macros 0)  (15,352 Î¼s, 0.39%)</title><rect x="1029.7" y="213" width="4.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1032.74" y="223.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)   (529 Î¼s, 0.01%)</title><rect x="1036.2" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1039.18" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7622) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (525 Î¼s, 0.01%)</title><rect x="1063.2" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1066.23" y="63.5" ></text>
</g>
<g >
<title>mr.mergeStatus.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,172 Î¼s, 0.03%)</title><rect x="333.2" y="245" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="336.19" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (585 Î¼s, 0.01%)</title><rect x="348.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="351.61" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CommentContent]{type Out = K} (id 3644) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (445 Î¼s, 0.01%)</title><rect x="421.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="424.11" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (3,797 Î¼s, 0.10%)</title><rect x="1019.2" y="197" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1022.21" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (2,127 Î¼s, 0.05%)</title><rect x="419.1" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="422.09" y="191.5" ></text>
</g>
<g >
<title>F[String] =&gt; ?{def map: ?} (expanded macros 0)  (1,289 Î¼s, 0.03%)</title><rect x="74.4" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="77.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (7,809 Î¼s, 0.20%)</title><rect x="1130.4" y="197" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1133.44" y="207.5" ></text>
</g>
<g >
<title>dependency.artifactId.type =&gt; ?{def === : ?} (expanded macros 0)  (725 Î¼s, 0.02%)</title><rect x="264.4" y="245" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="267.44" y="255.5" ></text>
</g>
<g >
<title>F[List[better.files.File]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,517 Î¼s, 0.04%)</title><rect x="51.9" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="54.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4711) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,827 Î¼s, 0.05%)</title><rect x="500.1" y="181" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="503.13" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Repr = V} (id 4708) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,401 Î¼s, 0.04%)</title><rect x="499.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="502.23" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)   (662 Î¼s, 0.02%)</title><rect x="330.3" y="229" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="333.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestOut]{type Repr = V} (id 4383) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (683 Î¼s, 0.02%)</title><rect x="767.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="770.87" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)]} (id 8498) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (536 Î¼s, 0.01%)</title><rect x="917.8" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="920.78" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Out = K} (id 4966) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,371 Î¼s, 0.04%)</title><rect x="886.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="889.84" y="207.5" ></text>
</g>
<g >
<title>Option[org.scalasteward.core.forge.ForgeRepo] =&gt; ?{def toSeq: ?} (expanded macros 0)  (379 Î¼s, 0.01%)</title><rect x="145.4" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="148.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7534) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,037 Î¼s, 0.03%)</title><rect x="1019.7" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1022.73" y="175.5" ></text>
</g>
<g >
<title>(=&gt; Long) =&gt; Int (expanded macros 0)   (423 Î¼s, 0.01%)</title><rect x="18.8" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="21.75" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (1,066 Î¼s, 0.03%)</title><rect x="586.2" y="149" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="589.23" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption] (expanded macros 0)  (17,788 Î¼s, 0.46%)</title><rect x="462.6" y="229" width="5.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="465.60" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (303,151 Î¼s, 7.76%)</title><rect x="634.9" y="181" width="91.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="637.93" y="191.5" >shapeless...</text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil]] (id 2312) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,792 Î¼s, 0.25%)</title><rect x="841.8" y="213" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="844.80" y="223.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; Int (expanded macros 0)   (1,280 Î¼s, 0.03%)</title><rect x="11.6" y="245" width="0.4" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="14.57" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,925 Î¼s, 0.25%)</title><rect x="1108.5" y="165" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1111.46" y="175.5" ></text>
</g>
<g >
<title>p1.artifactId.type =&gt; ?{def === : ?} (expanded macros 0)  (886 Î¼s, 0.02%)</title><rect x="348.5" y="245" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="351.52" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version] (expanded macros 0)  (405 Î¼s, 0.01%)</title><rect x="251.1" y="213" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="254.13" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = D} (expanded macros 0)  (1,433 Î¼s, 0.04%)</title><rect x="1167.2" y="213" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1170.15" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,829 Î¼s, 0.05%)</title><rect x="986.7" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="989.69" y="111.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Int] (expanded macros 0)  (572 Î¼s, 0.01%)</title><rect x="274.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="277.00" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.AzureComment]{type Repr = V} (expanded macros 3)   (631 Î¼s, 0.02%)</title><rect x="859.4" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="862.44" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (513 Î¼s, 0.01%)</title><rect x="1154.5" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1157.48" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (1,407 Î¼s, 0.04%)</title><rect x="1096.4" y="133" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1099.44" y="143.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[cats.parse.Parser] (expanded macros 0)  (518 Î¼s, 0.01%)</title><rect x="257.9" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="260.91" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.RepositoriesOut]{type Out = K} (id 5319) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (336 Î¼s, 0.01%)</title><rect x="781.3" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="784.27" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.update.artifact.ArtifactChange] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)],List[org.scalasteward.core.update.artifact.ArtifactChange]] :: shapeless.HNil] (id 8850) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (2,314 Î¼s, 0.06%)</title><rect x="1169.5" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1172.54" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.azurerepos.Paginated[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def map: ?} (expanded macros 0)  (772 Î¼s, 0.02%)</title><rect x="113.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="116.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)]} (id 2310) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,245 Î¼s, 0.03%)</title><rect x="838.6" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="841.63" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,491 Î¼s, 0.04%)</title><rect x="888.4" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="891.43" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,459 Î¼s, 0.04%)</title><rect x="567.6" y="165" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="570.64" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.data.Version]{type Repr = R :: shapeless.HNil}] (id 2542) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,978 Î¼s, 0.08%)</title><rect x="1146.3" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1149.27" y="223.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (337 Î¼s, 0.01%)</title><rect x="143.1" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="146.10" y="239.5" ></text>
</g>
<g >
<title>updateStates.type =&gt; ?{def traverseFilter: ?} (expanded macros 0)  (459 Î¼s, 0.01%)</title><rect x="1174.5" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1177.45" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Condition] (expanded macros 0)  (722 Î¼s, 0.02%)</title><rect x="286.8" y="229" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="289.84" y="239.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def *&gt; : ?} (expanded macros 0)  (459 Î¼s, 0.01%)</title><rect x="74.9" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="77.94" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (515 Î¼s, 0.01%)</title><rect x="1072.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.82" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Out = K} (id 3411) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (461 Î¼s, 0.01%)</title><rect x="861.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="864.15" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (416 Î¼s, 0.01%)</title><rect x="948.2" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="951.16" y="111.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.RepositoryResponse] =&gt; ?{def recoverWith: ?} (expanded macros 0)  (411 Î¼s, 0.01%)</title><rect x="114.3" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="117.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.IvyRepository :+: org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil]{type Out = R} (expanded macros 0)  (1,757 Î¼s, 0.05%)</title><rect x="931.3" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="934.25" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.github.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)],List[org.scalasteward.core.forge.github.Repository]] :: shapeless.HNil] (id 5326) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,012 Î¼s, 0.05%)</title><rect x="782.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="785.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: shapeless.HNil]] (id 4713) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,067 Î¼s, 0.08%)</title><rect x="501.0" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="503.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.CommentContent]{type Repr = R} (expanded macros 0)  (3,338 Î¼s, 0.09%)</title><rect x="420.9" y="213" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="423.93" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Out = K} (id 2763) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,934 Î¼s, 0.05%)</title><rect x="631.8" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="634.83" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (745 Î¼s, 0.02%)</title><rect x="236.8" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="239.79" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (916 Î¼s, 0.02%)</title><rect x="251.3" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="254.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1973) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (541 Î¼s, 0.01%)</title><rect x="986.3" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="989.30" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2068) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (528 Î¼s, 0.01%)</title><rect x="974.5" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="977.51" y="79.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Out = K} (id 4019) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (632 Î¼s, 0.02%)</title><rect x="742.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="745.43" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7530) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,064 Î¼s, 0.03%)</title><rect x="1020.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1023.35" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Repr = V} (expanded macros 3)   (1,628 Î¼s, 0.04%)</title><rect x="498.7" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="501.74" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (expanded macros 0)  (1,875 Î¼s, 0.05%)</title><rect x="1165.6" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1168.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForArtifactId]] (id 2295) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (37,923 Î¼s, 0.97%)</title><rect x="833.3" y="245" width="11.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="836.29" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Repr = V} (expanded macros 3)   (707 Î¼s, 0.02%)</title><rect x="878.4" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="881.35" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (691 Î¼s, 0.02%)</title><rect x="978.1" y="101" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="981.08" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1832) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (358 Î¼s, 0.01%)</title><rect x="942.4" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="945.36" y="95.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] (expanded macros 0)  (1,134 Î¼s, 0.03%)</title><rect x="728.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.14" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil]] (id 8503) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,069 Î¼s, 0.05%)</title><rect x="918.0" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="921.04" y="223.5" ></text>
</g>
<g >
<title>x$3.type =&gt; ?{def &gt; : ?} (expanded macros 0)  (4,095 Î¼s, 0.10%)</title><rect x="1183.8" y="245" width="1.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1186.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)]} (id 4054) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (349 Î¼s, 0.01%)</title><rect x="874.4" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="877.41" y="143.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']]]{type R = RA} (expanded macros 0)  (3,219 Î¼s, 0.08%)</title><rect x="268.6" y="165" width="1.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="271.60" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.BranchOut]{type Repr = R} (expanded macros 0)  (6,444 Î¼s, 0.17%)</title><rect x="760.1" y="213" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="763.12" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 4594) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (4,756 Î¼s, 0.12%)</title><rect x="521.8" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="524.76" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CreateComment]{type Repr = V} (expanded macros 3)   (687 Î¼s, 0.02%)</title><rect x="423.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="426.72" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.Grouped]{type Repr = R} (expanded macros 0)  (20,420 Î¼s, 0.52%)</title><rect x="621.0" y="213" width="6.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="623.95" y="223.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Resolver] (expanded macros 0)  (663 Î¼s, 0.02%)</title><rect x="147.0" y="245" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="149.99" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.HttpJsonClient[F] (expanded macros 0)  (551 Î¼s, 0.01%)</title><rect x="347.5" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="350.47" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(String, Option[String])] (expanded macros 0)  (839 Î¼s, 0.02%)</title><rect x="248.9" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="251.95" y="255.5" ></text>
</g>
<g >
<title>cutoff.type =&gt; ?{def === : ?} (expanded macros 0)  (885 Î¼s, 0.02%)</title><rect x="262.9" y="245" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="265.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Repr = R} (expanded macros 0)  (4,448 Î¼s, 0.11%)</title><rect x="895.4" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="898.35" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (1,298 Î¼s, 0.03%)</title><rect x="233.2" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="236.19" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (670 Î¼s, 0.02%)</title><rect x="496.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.96" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil]] (id 8138) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,912 Î¼s, 0.07%)</title><rect x="1090.4" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1093.42" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.CrossDependency]] (id 1419) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,664 Î¼s, 0.17%)</title><rect x="1143.1" y="245" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1146.07" y="255.5" ></text>
</g>
<g >
<title>elems.type =&gt; ?{def parSequence: ?} (expanded macros 0)  (1,498 Î¼s, 0.04%)</title><rect x="266.0" y="245" width="0.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="268.97" y="255.5" ></text>
</g>
<g >
<title>org.http4s.QueryParamEncoder[String] (expanded macros 0)  (578 Î¼s, 0.01%)</title><rect x="337.4" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="340.37" y="255.5" ></text>
</g>
<g >
<title>org.http4s.Header.Raw =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (2,668 Î¼s, 0.07%)</title><rect x="335.4" y="245" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="338.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (expanded macros 3)   (490 Î¼s, 0.01%)</title><rect x="1089.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1092.92" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.InstallationOut]{type Out = K} (id 5303) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (548 Î¼s, 0.01%)</title><rect x="779.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="781.97" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.RepoOut] (expanded macros 0)  (16,417 Î¼s, 0.42%)</title><rect x="771.3" y="229" width="4.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="774.28" y="239.5" ></text>
</g>
<g >
<title>Unit &lt;:&lt; Unit (expanded macros 0)  (2,877 Î¼s, 0.07%)</title><rect x="190.6" y="245" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="193.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UserOut]{type Out = K} (id 4489) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (462 Î¼s, 0.01%)</title><rect x="777.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="779.95" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,089 Î¼s, 0.03%)</title><rect x="521.3" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="524.27" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)]} (id 4103) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (442 Î¼s, 0.01%)</title><rect x="748.3" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="751.29" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (1,084 Î¼s, 0.03%)</title><rect x="941.2" y="133" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="944.16" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 2077) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (912 Î¼s, 0.02%)</title><rect x="975.5" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="978.54" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (1,311 Î¼s, 0.03%)</title><rect x="1019.3" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1022.33" y="175.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.nurture.PullRequestData[Option]]] =&gt; ?{def map: ?} (expanded macros 0)  (750 Î¼s, 0.02%)</title><rect x="69.0" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="72.01" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigration] (expanded macros 0)  (768 Î¼s, 0.02%)</title><rect x="1154.2" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1157.24" y="175.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def filter: ?} (expanded macros 0)  (1,489 Î¼s, 0.04%)</title><rect x="20.0" y="245" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="23.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)]} (id 2308) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,461 Î¼s, 0.04%)</title><rect x="840.2" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="843.18" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)]} (id 2361) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,296 Î¼s, 0.03%)</title><rect x="610.2" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="613.17" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8718) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (526 Î¼s, 0.01%)</title><rect x="1159.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1161.99" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]] (expanded macros 0)  (11,712 Î¼s, 0.30%)</title><rect x="267.0" y="229" width="3.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="269.99" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.PR] (expanded macros 0)  (1,609 Î¼s, 0.04%)</title><rect x="314.7" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="317.69" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.generic.Equal[40]]{type R = RP} (expanded macros 0)  (1,863 Î¼s, 0.05%)</title><rect x="307.7" y="197" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.71" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,506 Î¼s, 0.32%)</title><rect x="542.5" y="149" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="545.53" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (618 Î¼s, 0.02%)</title><rect x="588.7" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="591.71" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Out = K} (id 4523) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,386 Î¼s, 0.04%)</title><rect x="550.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="553.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)]} (id 6591) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,087 Î¼s, 0.03%)</title><rect x="561.2" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="564.23" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)  (2,362 Î¼s, 0.06%)</title><rect x="309.0" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="311.98" y="255.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.scalasteward.core.data.Dependency] =&gt; ?{def tupleLeft: ?} (expanded macros 0)  (625 Î¼s, 0.02%)</title><rect x="222.9" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="225.89" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Boolean]] (expanded macros 0)  (468 Î¼s, 0.01%)</title><rect x="1091.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1094.16" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)]} (id 6586) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,354 Î¼s, 0.03%)</title><rect x="564.8" y="101" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="567.77" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,org.scalasteward.core.util.Timestamp :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,841 Î¼s, 0.07%)</title><rect x="576.4" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="579.40" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Repo]] (id 4167) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,006 Î¼s, 0.26%)</title><rect x="753.5" y="245" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="756.49" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (862 Î¼s, 0.02%)</title><rect x="381.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="384.16" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (722 Î¼s, 0.02%)</title><rect x="726.3" y="53" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="729.34" y="63.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (8,434 Î¼s, 0.22%)</title><rect x="1084.2" y="165" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1087.22" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2464) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,648 Î¼s, 0.09%)</title><rect x="857.4" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="860.44" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,247 Î¼s, 0.03%)</title><rect x="568.8" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="571.84" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut] (expanded macros 0)  (9,083 Î¼s, 0.23%)</title><rect x="760.0" y="229" width="2.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="763.05" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (expanded macros 0)  (777 Î¼s, 0.02%)</title><rect x="402.3" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="405.26" y="175.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,048 Î¼s, 0.03%)</title><rect x="1055.9" y="53" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1058.95" y="63.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.PullRequestGroup]] (id 7328) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (117,208 Î¼s, 3.00%)</title><rect x="793.2" y="245" width="35.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="796.20" y="255.5" >sha..</text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (684 Î¼s, 0.02%)</title><rect x="597.3" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="600.31" y="175.5" ></text>
</g>
<g >
<title>punctuation.type =&gt; ?{def contains_: ?} (expanded macros 0)  (513 Î¼s, 0.01%)</title><rect x="350.1" y="245" width="0.1" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="353.07" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.PullRequestGroup]] (expanded macros 0)  (1,446 Î¼s, 0.04%)</title><rect x="1037.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1040.08" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] (expanded macros 0)  (1,011 Î¼s, 0.03%)</title><rect x="1073.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1076.63" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucket.Reviewer] (expanded macros 0)  (571 Î¼s, 0.01%)</title><rect x="427.6" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="430.64" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[String] (expanded macros 0)  (2,838 Î¼s, 0.07%)</title><rect x="251.9" y="245" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="254.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 4267) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (517 Î¼s, 0.01%)</title><rect x="757.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="760.62" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Int] (expanded macros 0)  (442 Î¼s, 0.01%)</title><rect x="1147.6" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1150.56" y="223.5" ></text>
</g>
<g >
<title>dependencies.type =&gt; ?{def parTraverseFilter: ?} (expanded macros 0)  (457 Î¼s, 0.01%)</title><rect x="263.9" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="266.87" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8257) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,656 Î¼s, 0.04%)</title><rect x="1112.0" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1115.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig]] (id 7439) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (92,343 Î¼s, 2.37%)</title><rect x="1016.6" y="245" width="27.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1019.57" y="255.5" >s..</text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.UpdatesConfig]] (id 8233) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (135,319 Î¼s, 3.47%)</title><rect x="1091.9" y="245" width="40.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1094.90" y="255.5" >sha..</text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,org.http4s.Uri :: String :: Int :: String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = R} (expanded macros 0)  (16,337 Î¼s, 0.42%)</title><rect x="527.8" y="197" width="5.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="530.83" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] (expanded macros 0)  (901 Î¼s, 0.02%)</title><rect x="728.2" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.21" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,129 Î¼s, 0.05%)</title><rect x="888.2" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="891.24" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (expanded macros 3)   (811 Î¼s, 0.02%)</title><rect x="912.4" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="915.45" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.AzureComment]{type Out = K} (id 3427) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (357 Î¼s, 0.01%)</title><rect x="859.3" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="862.33" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: Option[org.scalasteward.core.repoconfig.VersionPattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Option[org.scalasteward.core.repoconfig.VersionPattern]] :: shapeless.HNil]] (id 8189) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,158 Î¼s, 0.16%)</title><rect x="596.4" y="213" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="599.36" y="223.5" ></text>
</g>
<g >
<title>G[B] =&gt; ?{def map: ?} (expanded macros 0)  (1,130 Î¼s, 0.03%)</title><rect x="129.5" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="132.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,115 Î¼s, 0.18%)</title><rect x="416.0" y="181" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="419.02" y="191.5" ></text>
</g>
<g >
<title>F[org.typelevel.log4cats.SelfAwareStructuredLogger[F]] =&gt; ?{def map: ?} (expanded macros 0)  (731 Î¼s, 0.02%)</title><rect x="127.8" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="130.79" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: String :: String :: Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = R} (expanded macros 0)  (14,250 Î¼s, 0.37%)</title><rect x="905.0" y="197" width="4.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="908.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7072) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (345 Î¼s, 0.01%)</title><rect x="995.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="998.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)]} (id 1648) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (416 Î¼s, 0.01%)</title><rect x="405.5" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="408.53" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[N]]]{type R = RP} (expanded macros 0)  (2,483 Î¼s, 0.06%)</title><rect x="273.2" y="229" width="0.7" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="276.17" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.User] :: shapeless.HNil] (id 4218) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (1,387 Î¼s, 0.04%)</title><rect x="436.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="439.73" y="207.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenConcurrent[[x]F[x],Throwable] (expanded macros 0)   (770 Î¼s, 0.02%)</title><rect x="279.9" y="213" width="0.3" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="282.94" y="223.5" ></text>
</g>
<g >
<title>cats.Functor[org.scalasteward.core.data.Scope] (expanded macros 0)  (568 Î¼s, 0.01%)</title><rect x="284.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="287.83" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)   (871 Î¼s, 0.02%)</title><rect x="937.3" y="181" width="0.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="940.26" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 4593) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,280 Î¼s, 0.14%)</title><rect x="521.6" y="213" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="524.60" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,154 Î¼s, 0.03%)</title><rect x="626.8" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="629.78" y="159.5" ></text>
</g>
<g >
<title>F[coursier.Fetch.Result] =&gt; ?{def attempt: ?} (expanded macros 0)  (651 Î¼s, 0.02%)</title><rect x="109.4" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="112.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Scope[A]]{type Out = K} (id 2193) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,817 Î¼s, 0.05%)</title><rect x="413.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="416.18" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.update.data.UpdateState.WithUpdate]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (638 Î¼s, 0.02%)</title><rect x="59.8" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.78" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil] (expanded macros 0)  (517 Î¼s, 0.01%)</title><rect x="1150.4" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1153.37" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[String]]] (expanded macros 0)  (584 Î¼s, 0.01%)</title><rect x="910.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="913.57" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.UpdatePattern :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (784 Î¼s, 0.02%)</title><rect x="591.2" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="594.15" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.update.artifact.ArtifactChanges] =&gt; ?{def map: ?} (expanded macros 0)  (465 Î¼s, 0.01%)</title><rect x="125.8" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] (id 1005) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,245 Î¼s, 0.13%)</title><rect x="1141.5" y="245" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1144.48" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (id 7472) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (11,614 Î¼s, 0.30%)</title><rect x="1034.5" y="197" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1037.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (7,294 Î¼s, 0.19%)</title><rect x="1084.6" y="149" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1087.56" y="159.5" ></text>
</g>
<g >
<title>cats.Semigroupal[com.monovore.decline.Opts] (expanded macros 0)  (1,140 Î¼s, 0.03%)</title><rect x="216.4" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="219.39" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Repr = V} (id 2764) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,262 Î¼s, 0.06%)</title><rect x="633.5" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="636.48" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[shapeless.HNil,shapeless.HNil]{type Out = OutT} (expanded macros 0)  (923 Î¼s, 0.02%)</title><rect x="1101.6" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1104.58" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)]} (id 6857) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (695 Î¼s, 0.02%)</title><rect x="582.4" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="585.40" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,063 Î¼s, 0.03%)</title><rect x="284.4" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="287.43" y="239.5" ></text>
</g>
<g >
<title>scala.collection.immutable.LazyList[A] =&gt; ?{def #:: : ?} (expanded macros 0)   (562 Î¼s, 0.01%)</title><rect x="352.9" y="245" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="355.91" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.DefaultReviewers] (expanded macros 0)  (818 Î¼s, 0.02%)</title><rect x="312.0" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="314.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (expanded macros 3)   (1,493 Î¼s, 0.04%)</title><rect x="1064.7" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1067.68" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.git.Branch]] (expanded macros 0)  (974 Î¼s, 0.02%)</title><rect x="299.1" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="302.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (772 Î¼s, 0.02%)</title><rect x="1091.4" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1094.44" y="223.5" ></text>
</g>
<g >
<title>a.value.type =&gt; ?{def headOption: ?} (expanded macros 0)  (854 Î¼s, 0.02%)</title><rect x="191.8" y="245" width="0.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="194.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,382 Î¼s, 0.14%)</title><rect x="874.3" y="149" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="877.25" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)]} (id 1391) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (491 Î¼s, 0.01%)</title><rect x="385.0" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="387.98" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Out = K} (id 4095) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (685 Î¼s, 0.02%)</title><rect x="746.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="749.29" y="207.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,083 Î¼s, 0.03%)</title><rect x="141.0" y="245" width="0.4" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="144.05" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (414 Î¼s, 0.01%)</title><rect x="297.4" y="229" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="300.41" y="239.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Sync[F] (expanded macros 0)  (5,724 Î¼s, 0.15%)</title><rect x="230.1" y="245" width="1.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="233.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil]] (id 7202) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,487 Î¼s, 0.24%)</title><rect x="1008.0" y="213" width="2.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1011.05" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.Grouped]] (id 2472) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (27,465 Î¼s, 0.70%)</title><rect x="620.0" y="245" width="8.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="623.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Out = K} (id 4618) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,618 Î¼s, 0.04%)</title><rect x="450.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="453.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 2461) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,305 Î¼s, 0.03%)</title><rect x="855.9" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="858.86" y="175.5" ></text>
</g>
<g >
<title>scala.collection.immutable.LazyList[List[org.scalasteward.core.edit.update.data.VersionPosition]] =&gt; ?{def #:: : ?} (expanded macros 0)   (391 Î¼s, 0.01%)</title><rect x="353.1" y="245" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="356.08" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Dependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.data.Dependency] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)],List[String]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.data.Dependency :: List[String] :: shapeless.HNil) (expanded macros 0)  (2,331 Î¼s, 0.06%)</title><rect x="387.8" y="197" width="0.7" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="390.81" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.application.Config.ForgeCfg (expanded macros 0)  (653 Î¼s, 0.02%)</title><rect x="339.0" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="341.99" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Vector[String]]] (expanded macros 0)  (796 Î¼s, 0.02%)</title><rect x="496.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="499.41" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version.Component] (expanded macros 0)  (557 Î¼s, 0.01%)</title><rect x="240.2" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="243.17" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefinedType[eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]]{type T = String} (expanded macros 0)  (13,237 Î¼s, 0.34%)</title><rect x="266.5" y="245" width="4.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="269.53" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,482 Î¼s, 0.32%)</title><rect x="1114.4" y="181" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1117.40" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (513 Î¼s, 0.01%)</title><rect x="947.8" y="117" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="950.76" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)]} (id 3932) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (424 Î¼s, 0.01%)</title><rect x="732.5" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="735.49" y="175.5" ></text>
</g>
<g >
<title>F[Process] =&gt; ?{def flatMap: ?} (expanded macros 0)  (621 Î¼s, 0.02%)</title><rect x="70.3" y="245" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="73.29" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8489) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (812 Î¼s, 0.02%)</title><rect x="915.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="918.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8351) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,006 Î¼s, 0.03%)</title><rect x="1132.4" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1135.44" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7649) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (489 Î¼s, 0.01%)</title><rect x="1068.6" y="53" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1071.56" y="63.5" ></text>
</g>
<g >
<title>F[(better.files.File, better.files.File)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (805 Î¼s, 0.02%)</title><rect x="37.5" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="40.46" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 4795) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,425 Î¼s, 0.09%)</title><rect x="460.7" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="463.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1964) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (865 Î¼s, 0.02%)</title><rect x="985.9" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="988.88" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (6,559 Î¼s, 0.17%)</title><rect x="1038.0" y="213" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1041.04" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Repr = R} (expanded macros 0)  (15,172 Î¼s, 0.39%)</title><rect x="456.0" y="213" width="4.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="458.99" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent] (expanded macros 0)  (5,818 Î¼s, 0.15%)</title><rect x="420.8" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="423.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]] (id 3436) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,969 Î¼s, 0.23%)</title><rect x="862.6" y="245" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="865.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7657) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (404 Î¼s, 0.01%)</title><rect x="1065.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1068.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,800 Î¼s, 0.28%)</title><rect x="1060.6" y="181" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1063.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1971) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (448 Î¼s, 0.01%)</title><rect x="986.8" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="989.79" y="95.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version] (expanded macros 0)  (410 Î¼s, 0.01%)</title><rect x="250.3" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="253.30" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (397 Î¼s, 0.01%)</title><rect x="254.1" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="257.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)]} (id 5485) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (619 Î¼s, 0.02%)</title><rect x="907.0" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="910.02" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (517 Î¼s, 0.01%)</title><rect x="858.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="861.32" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.buildtool.BuildToolAlg[F]]] =&gt; ?{def map: ?} (expanded macros 0)  (523 Î¼s, 0.01%)</title><rect x="52.6" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="55.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (725 Î¼s, 0.02%)</title><rect x="948.3" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="951.28" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],String] :: shapeless.HNil] (id 1668) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (2,613 Î¼s, 0.07%)</title><rect x="410.1" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="413.14" y="207.5" ></text>
</g>
<g >
<title>scala.math.Ordering[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (457 Î¼s, 0.01%)</title><rect x="354.0" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="356.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,239 Î¼s, 0.31%)</title><rect x="1107.8" y="181" width="3.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1110.76" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,703 Î¼s, 0.25%)</title><rect x="906.4" y="149" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="909.41" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],Lub0] (expanded macros 0)  (418 Î¼s, 0.01%)</title><rect x="1082.6" y="69" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1085.56" y="79.5" ></text>
</g>
<g >
<title>ForgeRepoAlg.this.config.forgeCfg.tpe.type =&gt; ?{def === : ?} (expanded macros 0)  (856 Î¼s, 0.02%)</title><rect x="129.2" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.24" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (634 Î¼s, 0.02%)</title><rect x="250.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="253.23" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (652 Î¼s, 0.02%)</title><rect x="318.2" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="321.22" y="255.5" ></text>
</g>
<g >
<title>x$4.type =&gt; ?{def &gt; : ?} (expanded macros 0)  (346 Î¼s, 0.01%)</title><rect x="1185.4" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1188.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Header]{type Repr = V} (id 1660) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (801 Î¼s, 0.02%)</title><rect x="409.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="412.05" y="207.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.edit.scalafix.ScalafixMigrationsFinder, org.scalasteward.core.repoconfig.RepoConfigLoader[F])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,762 Î¼s, 0.05%)</title><rect x="38.1" y="245" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="41.13" y="255.5" ></text>
</g>
<g >
<title>F[better.files.File] =&gt; ?{def map: ?} (expanded macros 0)  (5,997 Î¼s, 0.15%)</title><rect x="107.0" y="245" width="1.8" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="110.00" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (909 Î¼s, 0.02%)</title><rect x="276.3" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="279.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2006) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (432 Î¼s, 0.01%)</title><rect x="991.9" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="994.88" y="95.5" ></text>
</g>
<g >
<title>Ordering[Int] (expanded macros 0)  (1,782 Î¼s, 0.05%)</title><rect x="146.4" y="245" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="149.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,671 Î¼s, 0.07%)</title><rect x="1063.1" y="69" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1066.06" y="79.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)]} (id 7180) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (353 Î¼s, 0.01%)</title><rect x="1005.2" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1008.16" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]] (expanded macros 0)  (6,017 Î¼s, 0.15%)</title><rect x="751.7" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="754.67" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent]] (id 3641) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,358 Î¼s, 0.19%)</title><rect x="420.4" y="245" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="423.38" y="255.5" ></text>
</g>
<g >
<title>cats.effect.Ref.Make[F] (expanded macros 0)  (743 Î¼s, 0.02%)</title><rect x="223.1" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="226.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.ArtifactId]{type Repr = V} (expanded macros 3)   (1,130 Î¼s, 0.03%)</title><rect x="384.0" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="386.97" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)]} (id 6590) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,076 Î¼s, 0.03%)</title><rect x="562.0" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="564.99" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut] (expanded macros 0)  (8,017 Î¼s, 0.21%)</title><rect x="757.1" y="229" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="760.10" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.util.Timestamp]{type Repr = R :: shapeless.HNil}] (id 9043) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,223 Î¼s, 0.03%)</title><rect x="1148.8" y="213" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1151.78" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil] (id 8139) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (2,616 Î¼s, 0.07%)</title><rect x="1090.5" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1093.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,025 Î¼s, 0.03%)</title><rect x="976.5" y="85" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="979.52" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (16,459 Î¼s, 0.42%)</title><rect x="135.2" y="197" width="5.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="138.20" y="207.5" ></text>
</g>
<g >
<title>x$4.render.type =&gt; ?{def === : ?} (expanded macros 0)  (1,150 Î¼s, 0.03%)</title><rect x="1185.1" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1188.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)]} (id 3431) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (337 Î¼s, 0.01%)</title><rect x="859.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="862.90" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Repr = V} (expanded macros 3)   (1,368 Î¼s, 0.04%)</title><rect x="742.6" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="745.62" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = R} (expanded macros 0)   (6,592 Î¼s, 0.17%)</title><rect x="1158.5" y="213" width="1.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1161.45" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,725 Î¼s, 0.15%)</title><rect x="491.6" y="85" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="494.55" y="95.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (826 Î¼s, 0.02%)</title><rect x="982.5" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="985.46" y="159.5" ></text>
</g>
<g >
<title>(=&gt; (Nothing, Nothing)) =&gt; org.http4s.QueryParam[?T] (expanded macros 0)   (673 Î¼s, 0.02%)</title><rect x="17.9" y="245" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="20.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)]} (id 7248) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (394 Î¼s, 0.01%)</title><rect x="1000.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1003.92" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(Int, org.http4s.Uri)] (expanded macros 0)  (687 Î¼s, 0.02%)</title><rect x="248.7" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="251.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = Options} (id 8317) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (1,737 Î¼s, 0.04%)</title><rect x="1102.3" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1105.31" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,608 Î¼s, 0.04%)</title><rect x="758.2" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="761.18" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (733 Î¼s, 0.02%)</title><rect x="769.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="772.67" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (822 Î¼s, 0.02%)</title><rect x="965.4" y="101" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="968.42" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)]} (id 2780) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (676 Î¼s, 0.02%)</title><rect x="723.7" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="726.69" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) &lt;: String],Lub0] (expanded macros 0)  (514 Î¼s, 0.01%)</title><rect x="1081.1" y="117" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1084.14" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil]] (id 7078) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,203 Î¼s, 0.08%)</title><rect x="996.2" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="999.24" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 2115) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (381 Î¼s, 0.01%)</title><rect x="981.0" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="984.01" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) with String(&quot;postUpdateHooks&quot;) with String(&quot;updates&quot;) with String(&quot;scalafmt&quot;) &lt;: String],Lub0] (expanded macros 0)  (837 Î¼s, 0.02%)</title><rect x="1078.9" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1081.92" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)],String] :: shapeless.HNil] (id 4833) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,292 Î¼s, 0.08%)</title><rect x="478.9" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="481.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (355 Î¼s, 0.01%)</title><rect x="792.6" y="181" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="795.63" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (expanded macros 0)  (13,952 Î¼s, 0.36%)</title><rect x="1137.3" y="229" width="4.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1140.27" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Scheme]] (expanded macros 0)  (362 Î¼s, 0.01%)</title><rect x="233.7" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="236.70" y="255.5" ></text>
</g>
<g >
<title>F[Option[better.files.File]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (345 Î¼s, 0.01%)</title><rect x="66.1" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="69.07" y="255.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.repoconfig.RepoConfig]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,126 Î¼s, 0.03%)</title><rect x="69.3" y="245" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="72.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,970 Î¼s, 0.15%)</title><rect x="1011.8" y="149" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1014.76" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,596 Î¼s, 0.17%)</title><rect x="839.8" y="165" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="842.80" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],String] :: shapeless.HNil] (id 3434) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,210 Î¼s, 0.03%)</title><rect x="860.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="863.12" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.PR] =&gt; ?{def map: ?} (expanded macros 0)  (674 Î¼s, 0.02%)</title><rect x="115.4" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="118.39" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (657 Î¼s, 0.02%)</title><rect x="613.9" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="616.87" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Repr = R} (expanded macros 0)  (3,615 Î¼s, 0.09%)</title><rect x="435.6" y="213" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="438.55" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Out = K} (id 3684) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (492 Î¼s, 0.01%)</title><rect x="425.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="428.66" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,362 Î¼s, 0.06%)</title><rect x="409.3" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="412.29" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Author] (expanded macros 0)  (648 Î¼s, 0.02%)</title><rect x="728.3" y="149" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.29" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (779 Î¼s, 0.02%)</title><rect x="938.5" y="149" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="941.47" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = D} (expanded macros 0)  (1,525 Î¼s, 0.04%)</title><rect x="1088.1" y="213" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1091.11" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Repr = V} (id 4156) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (579 Î¼s, 0.01%)</title><rect x="878.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="881.56" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (403 Î¼s, 0.01%)</title><rect x="432.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="435.33" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CreateComment]] (id 3624) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,497 Î¼s, 0.19%)</title><rect x="422.6" y="245" width="2.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="425.61" y="255.5" ></text>
</g>
<g >
<title>cats.Traverse[org.scalasteward.core.data.Scope] (expanded macros 0)  (460 Î¼s, 0.01%)</title><rect x="1180.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1182.95" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7878) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (534 Î¼s, 0.01%)</title><rect x="1085.5" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1088.46" y="111.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; org.http4s.QueryParam[?T] (expanded macros 0)   (1,919 Î¼s, 0.05%)</title><rect x="13.3" y="245" width="0.5" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="16.26" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.UpdatePattern]] (expanded macros 0)  (1,611 Î¼s, 0.04%)</title><rect x="1119.9" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1122.87" y="191.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;{&quot;), x$2: ? &gt;: String(&quot;, &quot;), x$3: ? &gt;: String(&quot;}&quot;)): ?} (expanded macros 0)  (472 Î¼s, 0.01%)</title><rect x="220.5" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="223.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,865 Î¼s, 0.12%)</title><rect x="1062.4" y="101" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1065.40" y="111.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1914) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (799 Î¼s, 0.02%)</title><rect x="938.7" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="941.71" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.PR]] (id 4090) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,396 Î¼s, 0.57%)</title><rect x="744.4" y="245" width="6.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="747.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = D} (expanded macros 0)  (1,941 Î¼s, 0.05%)</title><rect x="993.5" y="213" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="996.46" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Repr = V} (id 4545) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,087 Î¼s, 0.05%)</title><rect x="539.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="542.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1725) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (398 Î¼s, 0.01%)</title><rect x="963.3" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="966.27" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;addToGitBlameIgnoreRevs&quot;) with String(&quot;commitMessage&quot;) with String(&quot;command&quot;) &lt;: String],Lub0] (expanded macros 0)  (459 Î¼s, 0.01%)</title><rect x="1014.1" y="181" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.05" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubLabels]{type Repr = V} (id 5287) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (709 Î¼s, 0.02%)</title><rect x="893.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="896.48" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;uuid&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (812 Î¼s, 0.02%)</title><rect x="429.1" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="432.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.RepoOut]] (id 4418) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (20,427 Î¼s, 0.52%)</title><rect x="770.1" y="245" width="6.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="773.07" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Int]] (expanded macros 0)  (453 Î¼s, 0.01%)</title><rect x="495.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="498.83" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 40} (id 6011) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (425 Î¼s, 0.01%)</title><rect x="270.3" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="273.31" y="175.5" ></text>
</g>
<g >
<title>F[(List[String], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def map: ?} (expanded macros 0)  (594 Î¼s, 0.02%)</title><rect x="32.4" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="35.40" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.github.TokenOut] =&gt; ?{def flatMap: ?} (expanded macros 0)  (592 Î¼s, 0.02%)</title><rect x="120.0" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="122.96" y="255.5" ></text>
</g>
<g >
<title>String(&quot;organization: %s, version: %s, scalaVersion: %s, scalaBinaryVersion: %s, sbtVersion: %s, gitHubUrl: %s, gitHubUserContent: %s, mainBranch: %s, gitHeadCommit: %s, millPluginArtifactName: %s, millPluginVersion: %s&quot;) =&gt; ?{def format: ?} (expanded macros 0)  (21,042 Î¼s, 0.54%)</title><rect x="155.6" y="245" width="6.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="158.60" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Repr = V} (expanded macros 3)   (929 Î¼s, 0.02%)</title><rect x="575.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="578.86" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.Version] (expanded macros 0)  (4,521 Î¼s, 0.12%)</title><rect x="1145.8" y="229" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1148.80" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (expanded macros 3)   (1,425 Î¼s, 0.04%)</title><rect x="830.5" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="833.51" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']]]{type R = RA} (expanded macros 0)  (7,512 Î¼s, 0.19%)</title><rect x="305.0" y="165" width="2.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="307.97" y="175.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.RepoOut] =&gt; ?{def map: ?} (expanded macros 0)  (1,376 Î¼s, 0.04%)</title><rect x="117.5" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="120.50" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 1825) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (935 Î¼s, 0.02%)</title><rect x="941.5" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="944.48" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ProjectId]{type Out = K} (id 5451) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (689 Î¼s, 0.02%)</title><rect x="791.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="794.34" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (2,883 Î¼s, 0.07%)</title><rect x="573.2" y="165" width="0.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="576.16" y="175.5" ></text>
</g>
<g >
<title>strings.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;(&quot;), x$2: ? &gt;: String(&quot;|&quot;), x$3: ? &gt;: String(&quot;)&quot;)): ?} (expanded macros 0)  (375 Î¼s, 0.01%)</title><rect x="1172.4" y="245" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1175.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)],String] :: shapeless.HNil] (id 5363) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,405 Î¼s, 0.04%)</title><rect x="786.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="789.66" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.CommitId]{type Repr = R} (expanded macros 0)  (7,145 Î¼s, 0.18%)</title><rect x="787.7" y="213" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="790.66" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (416 Î¼s, 0.01%)</title><rect x="1181.2" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1184.15" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,053 Î¼s, 0.18%)</title><rect x="907.2" y="117" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="910.21" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4810) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,367 Î¼s, 0.04%)</title><rect x="506.6" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="509.63" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)]} (id 1471) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (393 Î¼s, 0.01%)</title><rect x="397.9" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="400.94" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Vector[Int]]] (expanded macros 0)  (803 Î¼s, 0.02%)</title><rect x="496.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="499.17" y="191.5" ></text>
</g>
<g >
<title>Int(2) =&gt; ?{def minutes: ?} (expanded macros 0)  (545 Î¼s, 0.01%)</title><rect x="130.5" y="245" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="133.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (2,414 Î¼s, 0.06%)</title><rect x="980.9" y="133" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="983.90" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (972 Î¼s, 0.02%)</title><rect x="1142.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1145.77" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (808 Î¼s, 0.02%)</title><rect x="392.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="395.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Credentials]{type Out = K} (id 1640) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (746 Î¼s, 0.02%)</title><rect x="404.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="407.32" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.CreateComment] =&gt; ?{def map: ?} (expanded macros 0)  (675 Î¼s, 0.02%)</title><rect x="113.3" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="116.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (1,734 Î¼s, 0.04%)</title><rect x="1132.3" y="133" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1135.28" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)],Boolean] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)],Boolean] :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] :: shapeless.HNil] (id 4060) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (4,057 Î¼s, 0.10%)</title><rect x="876.1" y="197" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="879.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.InstallationOut]{type Out = K} (id 5305) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (378 Î¼s, 0.01%)</title><rect x="779.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="782.14" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Repository :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (895 Î¼s, 0.02%)</title><rect x="879.1" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="882.07" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] (expanded macros 0)  (769 Î¼s, 0.02%)</title><rect x="1122.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1125.61" y="191.5" ></text>
</g>
<g >
<title>F[(better.files.File, cats.data.NonEmptyList[String])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (346 Î¼s, 0.01%)</title><rect x="37.7" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="40.71" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (470 Î¼s, 0.01%)</title><rect x="1180.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1183.56" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 2484) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,332 Î¼s, 0.03%)</title><rect x="625.5" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="628.53" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (562 Î¼s, 0.01%)</title><rect x="1074.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.89" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.RepositoriesOut]{type Repr = R} (expanded macros 0)  (3,881 Î¼s, 0.10%)</title><rect x="780.9" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="783.92" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Vector[Int]] (expanded macros 0)  (757 Î¼s, 0.02%)</title><rect x="448.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="451.59" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Out = K} (id 6805) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (809 Î¼s, 0.02%)</title><rect x="575.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="578.61" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (812 Î¼s, 0.02%)</title><rect x="877.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="880.04" y="191.5" ></text>
</g>
<g >
<title>F[List[Option[(String, Int)]]] =&gt; ?{def map: ?} (expanded macros 0)  (531 Î¼s, 0.01%)</title><rect x="45.8" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="48.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Repr = R} (expanded macros 0)  (3,911 Î¼s, 0.10%)</title><rect x="437.7" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="440.74" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,009 Î¼s, 0.18%)</title><rect x="1032.3" y="181" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1035.26" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,709 Î¼s, 0.07%)</title><rect x="773.9" y="149" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="776.85" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = R} (expanded macros 0)   (26,843 Î¼s, 0.69%)</title><rect x="1103.3" y="213" width="8.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1106.35" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Long] (expanded macros 0)  (374 Î¼s, 0.01%)</title><rect x="780.3" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="783.29" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,272 Î¼s, 0.03%)</title><rect x="571.1" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="574.14" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (398 Î¼s, 0.01%)</title><rect x="789.7" y="181" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="792.70" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)]} (id 1599) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (684 Î¼s, 0.02%)</title><rect x="390.7" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="393.68" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(Int, String, String)] (expanded macros 0)  (878 Î¼s, 0.02%)</title><rect x="248.5" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="251.47" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4009) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (370 Î¼s, 0.01%)</title><rect x="740.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="743.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,110 Î¼s, 0.03%)</title><rect x="995.1" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="998.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2848) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (372 Î¼s, 0.01%)</title><rect x="1151.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1154.82" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[String] =&gt; ?{def contramap: ?} (expanded macros 0)  (2,032 Î¼s, 0.05%)</title><rect x="252.8" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="255.76" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit] :: shapeless.HNil] (id 4625) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,477 Î¼s, 0.09%)</title><rect x="454.0" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="456.96" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] (expanded macros 0)  (5,765 Î¼s, 0.15%)</title><rect x="739.5" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="742.53" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (12,810 Î¼s, 0.33%)</title><rect x="1079.2" y="181" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1082.17" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] (expanded macros 0)  (669 Î¼s, 0.02%)</title><rect x="914.4" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="917.37" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (672 Î¼s, 0.02%)</title><rect x="386.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="389.24" y="191.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def &gt;&gt; : ?} (expanded macros 0)  (7,493 Î¼s, 0.19%)</title><rect x="75.1" y="245" width="2.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="78.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4473) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,395 Î¼s, 0.04%)</title><rect x="884.0" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="887.02" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (391 Î¼s, 0.01%)</title><rect x="1121.7" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1124.71" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,605 Î¼s, 0.04%)</title><rect x="1068.7" y="53" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1071.71" y="63.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)]} (id 4197) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (408 Î¼s, 0.01%)</title><rect x="881.9" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="884.86" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (5,421 Î¼s, 0.14%)</title><rect x="969.0" y="133" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="972.04" y="143.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Update] (expanded macros 0)   (542 Î¼s, 0.01%)</title><rect x="571.7" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="574.72" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.Reviewer]{type Repr = R} (expanded macros 0)  (3,362 Î¼s, 0.09%)</title><rect x="428.4" y="213" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="431.36" y="223.5" ></text>
</g>
<g >
<title>repoConfig.dependencyOverrides.type =&gt; ?{def collectFirstSome: ?} (expanded macros 0)  (435 Î¼s, 0.01%)</title><rect x="350.7" y="245" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="353.72" y="255.5" ></text>
</g>
<g >
<title>io.circe.KeyEncoder[org.scalasteward.core.data.Repo] (expanded macros 0)  (416 Î¼s, 0.01%)</title><rect x="331.6" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="334.58" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubLabels]{type Out = K} (id 5284) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (553 Î¼s, 0.01%)</title><rect x="892.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="895.92" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8733) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (510 Î¼s, 0.01%)</title><rect x="1160.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1163.65" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (865 Î¼s, 0.02%)</title><rect x="842.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="845.81" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)]} (id 4160) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (423 Î¼s, 0.01%)</title><rect x="879.2" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="882.16" y="175.5" ></text>
</g>
<g >
<title>Array[Unit] =&gt; String (expanded macros 0)   (676 Î¼s, 0.02%)</title><rect x="23.1" y="245" width="0.2" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="26.14" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (3,584 Î¼s, 0.09%)</title><rect x="324.5" y="245" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="327.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7567) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,418 Î¼s, 0.04%)</title><rect x="1020.7" y="213" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1023.67" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (2,986 Î¼s, 0.08%)</title><rect x="1043.6" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1046.58" y="191.5" ></text>
</g>
<g >
<title>create.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (447 Î¼s, 0.01%)</title><rect x="262.0" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="265.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Out = K} (id 4155) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (475 Î¼s, 0.01%)</title><rect x="878.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="881.21" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 4533) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,331 Î¼s, 0.11%)</title><rect x="554.0" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="556.96" y="223.5" ></text>
</g>
<g >
<title>dependency.version.type =&gt; ?{def &lt;= : ?} (expanded macros 0)  (593 Î¼s, 0.02%)</title><rect x="265.6" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="268.60" y="255.5" ></text>
</g>
<g >
<title>(=&gt; (=&gt; String) =&gt; F[Unit]) =&gt; F[Unit] (expanded macros 0)   (344 Î¼s, 0.01%)</title><rect x="17.4" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="20.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (948 Î¼s, 0.02%)</title><rect x="431.6" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="434.56" y="207.5" ></text>
</g>
<g >
<title>F[((org.scalasteward.core.forge.data.RepoOut, org.scalasteward.core.forge.data.BranchOut), Option[org.scalasteward.core.repocache.RepoCache])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (449 Î¼s, 0.01%)</title><rect x="31.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="34.24" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (4,237 Î¼s, 0.11%)</title><rect x="237.2" y="245" width="1.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="240.18" y="255.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (429 Î¼s, 0.01%)</title><rect x="133.6" y="213" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="136.60" y="223.5" ></text>
</g>
<g >
<title>F[Option[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def map: ?} (expanded macros 0)  (2,601 Î¼s, 0.07%)</title><rect x="62.9" y="245" width="0.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="65.87" y="255.5" ></text>
</g>
<g >
<title>cats.Foldable[F] (expanded macros 0)   (663 Î¼s, 0.02%)</title><rect x="338.2" y="229" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="341.21" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (2,030 Î¼s, 0.05%)</title><rect x="419.8" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="422.77" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: Option[String] :: Option[org.scalasteward.core.repoconfig.VersionPattern] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,589 Î¼s, 0.09%)</title><rect x="595.3" y="197" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="598.27" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Repr = V} (id 4825) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,836 Î¼s, 0.05%)</title><rect x="476.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="479.17" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] (expanded macros 0)  (3,970 Î¼s, 0.10%)</title><rect x="587.4" y="181" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="590.35" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,org.http4s.Uri :: org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.forge.data.PullRequestNumber :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,024 Î¼s, 0.08%)</title><rect x="768.1" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="771.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Repr = R} (expanded macros 0)  (3,933 Î¼s, 0.10%)</title><rect x="739.6" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="742.61" y="223.5" ></text>
</g>
<g >
<title>F[java.net.http.HttpClient] =&gt; ?{def map: ?} (expanded macros 0)  (1,421 Î¼s, 0.04%)</title><rect x="110.5" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="113.47" y="255.5" ></text>
</g>
<g >
<title>Either[String,eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]] =&gt; ?{def bimap: ?} (expanded macros 0)  (368 Î¼s, 0.01%)</title><rect x="29.7" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="32.66" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,701 Î¼s, 0.07%)</title><rect x="725.7" y="69" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="728.74" y="79.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Out = K} (id 4722) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,990 Î¼s, 0.05%)</title><rect x="484.1" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="487.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,771 Î¼s, 0.15%)</title><rect x="1081.3" y="117" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1084.30" y="127.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Dependency]{type Out = K} (id 1457) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,287 Î¼s, 0.03%)</title><rect x="395.5" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="398.47" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.SemVer.Change] (expanded macros 0)  (702 Î¼s, 0.02%)</title><rect x="298.6" y="229" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="301.64" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4389) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (406 Î¼s, 0.01%)</title><rect x="768.8" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="771.81" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (428 Î¼s, 0.01%)</title><rect x="900.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="903.60" y="191.5" ></text>
</g>
<g >
<title>cats.parse.Parser[String] =&gt; ?{def filterNot: ?} (expanded macros 0)  (1,263 Î¼s, 0.03%)</title><rect x="257.7" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="260.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.TokenOut]{type Repr = V} (id 5357) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (483 Î¼s, 0.01%)</title><rect x="786.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="789.16" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (419 Î¼s, 0.01%)</title><rect x="249.5" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.49" y="223.5" ></text>
</g>
<g >
<title>groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (1,384 Î¼s, 0.04%)</title><rect x="282.9" y="245" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="285.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (860 Î¼s, 0.02%)</title><rect x="1016.3" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1019.31" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (804 Î¼s, 0.02%)</title><rect x="980.3" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="983.30" y="111.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.repoconfig.RepoConfig]] =&gt; ?{def map: ?} (expanded macros 0)  (582 Î¼s, 0.01%)</title><rect x="59.3" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.30" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.GitHubAssignees] (expanded macros 0)  (673 Î¼s, 0.02%)</title><rect x="329.0" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="331.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1707) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,180 Î¼s, 0.03%)</title><rect x="961.0" y="69" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="964.02" y="79.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Repr = V} (expanded macros 3)   (655 Î¼s, 0.02%)</title><rect x="425.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="428.92" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.util.Timestamp]] (id 9041) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,035 Î¼s, 0.08%)</title><rect x="1148.2" y="245" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1151.23" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,108 Î¼s, 0.03%)</title><rect x="515.2" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="518.21" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil]] (id 8481) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,388 Î¼s, 0.06%)</title><rect x="832.6" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="835.57" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (463 Î¼s, 0.01%)</title><rect x="980.2" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="983.16" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,432 Î¼s, 0.16%)</title><rect x="609.8" y="165" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="612.77" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,561 Î¼s, 0.07%)</title><rect x="986.5" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="989.47" y="127.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (814 Î¼s, 0.02%)</title><rect x="939.4" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="942.37" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Out = K} (id 4707) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,312 Î¼s, 0.03%)</title><rect x="498.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="501.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Repr = R} (expanded macros 0)  (10,879 Î¼s, 0.28%)</title><rect x="518.3" y="213" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="521.31" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)],String] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 4646) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (6,314 Î¼s, 0.16%)</title><rect x="515.7" y="197" width="1.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="518.69" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Ref] (expanded macros 0)  (7,017 Î¼s, 0.18%)</title><rect x="877.8" y="229" width="2.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="880.75" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Repr = R} (expanded macros 0)  (9,385 Î¼s, 0.24%)</title><rect x="745.6" y="213" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="748.65" y="223.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.forge.data.PullRequestOut, org.scalasteward.core.nurture.PullRequestData[cats.Id])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (433 Î¼s, 0.01%)</title><rect x="38.8" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="41.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,880 Î¼s, 0.05%)</title><rect x="1022.6" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1025.57" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,org.scalasteward.core.data.ArtifactId :: org.scalasteward.core.data.Version :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,445 Î¼s, 0.11%)</title><rect x="397.5" y="181" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="400.55" y="191.5" ></text>
</g>
<g >
<title>req.uri.scheme.type =&gt; ?{def === : ?} (expanded macros 0)  (807 Î¼s, 0.02%)</title><rect x="350.9" y="245" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="353.89" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,753 Î¼s, 0.04%)</title><rect x="516.5" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="519.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,709 Î¼s, 0.07%)</title><rect x="1161.3" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1164.31" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.coursier.VersionsCache.Value]{type Repr = V} (expanded macros 3)   (2,507 Î¼s, 0.06%)</title><rect x="362.7" y="197" width="0.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="365.72" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1763) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (890 Î¼s, 0.02%)</title><rect x="968.8" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="971.77" y="143.5" ></text>
</g>
<g >
<title>F[(Unit, (List[org.scalasteward.core.edit.scalafix.ScalafixMigration], List[org.scalasteward.core.edit.scalafix.ScalafixMigration]))] =&gt; ?{def flatMap: ?} (expanded macros 0)  (475 Î¼s, 0.01%)</title><rect x="34.9" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="37.89" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (418 Î¼s, 0.01%)</title><rect x="265.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="268.65" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Int] (expanded macros 0)  (497 Î¼s, 0.01%)</title><rect x="263.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="266.02" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sourceRefName&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: String :: String :: Option[List[String]] :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,067 Î¼s, 0.10%)</title><rect x="867.7" y="197" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="870.67" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Out = K} (id 4080) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (415 Î¼s, 0.01%)</title><rect x="752.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="755.11" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.PullRequestOut] (expanded macros 0)  (10,882 Î¼s, 0.28%)</title><rect x="766.8" y="229" width="3.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="769.78" y="239.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)   (511 Î¼s, 0.01%)</title><rect x="1037.8" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1040.76" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Repository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Repository] :: shapeless.HNil]] (id 4163) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,776 Î¼s, 0.05%)</title><rect x="879.3" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="882.34" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)]} (id 5403) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (576 Î¼s, 0.01%)</title><rect x="899.8" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="902.82" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)   (561 Î¼s, 0.01%)</title><rect x="568.6" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="571.64" y="175.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (542 Î¼s, 0.01%)</title><rect x="119.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="122.79" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.SemVer.Change]] (expanded macros 0)  (1,004 Î¼s, 0.03%)</title><rect x="298.5" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="301.55" y="255.5" ></text>
</g>
<g >
<title>F[(Vector[Int], org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (819 Î¼s, 0.02%)</title><rect x="36.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="39.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (865 Î¼s, 0.02%)</title><rect x="967.5" y="117" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="970.54" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.RepositoriesOut]{type Repr = V} (expanded macros 3)   (685 Î¼s, 0.02%)</title><rect x="781.4" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="784.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (4,306 Î¼s, 0.11%)</title><rect x="1043.2" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1046.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (expanded macros 0)  (787 Î¼s, 0.02%)</title><rect x="1165.9" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1168.89" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,321 Î¼s, 0.19%)</title><rect x="724.3" y="117" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="727.34" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (825 Î¼s, 0.02%)</title><rect x="385.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="388.94" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)   (539 Î¼s, 0.01%)</title><rect x="1120.2" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1123.17" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.Comment]{type Repr = V} (expanded macros 3)   (605 Î¼s, 0.02%)</title><rect x="440.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="443.67" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,091 Î¼s, 0.10%)</title><rect x="1041.3" y="181" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1044.27" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,432 Î¼s, 0.14%)</title><rect x="959.8" y="133" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="962.81" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.Repository]{type Repr = R} (expanded macros 0)  (3,571 Î¼s, 0.09%)</title><rect x="783.3" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="786.28" y="223.5" ></text>
</g>
<g >
<title>cats.UnorderedFoldable[org.scalasteward.core.util.Nel] (expanded macros 0)  (645 Î¼s, 0.02%)</title><rect x="219.8" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="222.79" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (426 Î¼s, 0.01%)</title><rect x="410.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="413.69" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (854 Î¼s, 0.02%)</title><rect x="861.8" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="864.76" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,677 Î¼s, 0.15%)</title><rect x="544.6" y="101" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="547.60" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,768 Î¼s, 0.10%)</title><rect x="471.1" y="197" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="474.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (976 Î¼s, 0.02%)</title><rect x="740.5" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="743.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (481 Î¼s, 0.01%)</title><rect x="990.5" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="993.50" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2071) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (352 Î¼s, 0.01%)</title><rect x="973.8" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="976.82" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)]} (id 3447) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (365 Î¼s, 0.01%)</title><rect x="864.2" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="867.19" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7858) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (529 Î¼s, 0.01%)</title><rect x="1052.0" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1055.01" y="95.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def attempt: ?} (expanded macros 0)  (339 Î¼s, 0.01%)</title><rect x="46.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="49.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)]} (id 2782) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (4,435 Î¼s, 0.11%)</title><rect x="635.3" y="165" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="638.26" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4104) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (341 Î¼s, 0.01%)</title><rect x="748.1" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="751.07" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = Options} (id 8862) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (384 Î¼s, 0.01%)</title><rect x="1167.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1170.47" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = D} (expanded macros 0)  (13,234 Î¼s, 0.34%)</title><rect x="1098.8" y="213" width="4.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1101.83" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (391 Î¼s, 0.01%)</title><rect x="784.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="787.70" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.EditAttempt]] =&gt; ?{def map: ?} (expanded macros 0)  (1,396 Î¼s, 0.04%)</title><rect x="56.2" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="59.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption] (expanded macros 0)  (46,947 Î¼s, 1.20%)</title><rect x="482.5" y="229" width="14.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="485.46" y="239.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (684 Î¼s, 0.02%)</title><rect x="63.4" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="66.45" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)  (1,496 Î¼s, 0.04%)</title><rect x="330.1" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="333.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil]] (id 4777) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,989 Î¼s, 0.08%)</title><rect x="472.2" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="475.23" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.IvyRepository]] (id 1819) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (38,667 Î¼s, 0.99%)</title><rect x="937.8" y="181" width="11.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="940.83" y="191.5" ></text>
</g>
<g >
<title>Option[org.scalasteward.core.nurture.PullRequestRepository.Entry] =&gt; ?{def traverse: ?} (expanded macros 0)  (1,444 Î¼s, 0.04%)</title><rect x="145.7" y="245" width="0.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="148.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.azurerepos.AzureComment] :: Int :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,170 Î¼s, 0.06%)</title><rect x="864.0" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="867.00" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 6589) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,060 Î¼s, 0.03%)</title><rect x="562.7" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="565.69" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (1,781 Î¼s, 0.05%)</title><rect x="1143.6" y="213" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1146.60" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;uuid&quot;)],String] :: shapeless.HNil] (id 3726) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (1,863 Î¼s, 0.05%)</title><rect x="429.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="432.46" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (1,094 Î¼s, 0.03%)</title><rect x="597.2" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="600.19" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Out = K} (id 2761) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,605 Î¼s, 0.04%)</title><rect x="631.3" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="634.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,176 Î¼s, 0.03%)</title><rect x="875.5" y="69" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="878.53" y="79.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)]} (id 4742) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,024 Î¼s, 0.03%)</title><rect x="487.0" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="490.00" y="191.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.util.UrlChecker[F], Some[String])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,183 Î¼s, 0.03%)</title><rect x="39.7" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="42.73" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,532 Î¼s, 0.04%)</title><rect x="379.3" y="165" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="382.31" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.CommitId]] (id 5515) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (11,499 Î¼s, 0.29%)</title><rect x="787.1" y="245" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="790.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (895 Î¼s, 0.02%)</title><rect x="1034.1" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1037.11" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Order[Int] (expanded macros 0)  (347 Î¼s, 0.01%)</title><rect x="146.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="149.79" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2488) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,318 Î¼s, 0.08%)</title><rect x="627.3" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="630.29" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]] (expanded macros 0)  (3,315 Î¼s, 0.08%)</title><rect x="1120.8" y="149" width="1.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1123.82" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.Grouped] (expanded macros 0)  (24,286 Î¼s, 0.62%)</title><rect x="851.2" y="229" width="7.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="854.21" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Resolver] (expanded macros 0)  (462 Î¼s, 0.01%)</title><rect x="248.3" y="213" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="251.33" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,825 Î¼s, 0.10%)</title><rect x="610.6" y="149" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="613.56" y="159.5" ></text>
</g>
<g >
<title>F[(Either[Throwable,Unit], org.scalasteward.core.git.CommitMsg)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (523 Î¼s, 0.01%)</title><rect x="31.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="34.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,760 Î¼s, 0.05%)</title><rect x="1005.1" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1008.05" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)]} (id 3396) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (470 Î¼s, 0.01%)</title><rect x="868.7" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="871.70" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,687 Î¼s, 0.09%)</title><rect x="1068.1" y="85" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1071.08" y="95.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7866) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (568 Î¼s, 0.01%)</title><rect x="1083.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1086.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7654) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (452 Î¼s, 0.01%)</title><rect x="1066.9" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1069.92" y="143.5" ></text>
</g>
<g >
<title>dependenciesWithNextVersion.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (405 Î¼s, 0.01%)</title><rect x="264.2" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="267.16" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (975 Î¼s, 0.02%)</title><rect x="765.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="768.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.CommitOut]] (id 4310) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,289 Î¼s, 0.26%)</title><rect x="762.8" y="245" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="765.79" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[A] (expanded macros 0)  (331 Î¼s, 0.01%)</title><rect x="285.2" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="288.24" y="255.5" ></text>
</g>
<g >
<title>F[coursier.core.Repository] =&gt; ?{def flatMap: ?} (expanded macros 0)  (737 Î¼s, 0.02%)</title><rect x="109.8" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="112.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.coursier.VersionsCache.Value]] (id 1315) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (85,850 Î¼s, 2.20%)</title><rect x="356.2" y="245" width="25.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="359.16" y="255.5" >s..</text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.PullRequestOut]{type Out = K} (id 4380) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (769 Î¼s, 0.02%)</title><rect x="767.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="770.15" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.RepoOut] (expanded macros 0)  (2,163 Î¼s, 0.06%)</title><rect x="318.4" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="321.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,133 Î¼s, 0.03%)</title><rect x="611.4" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="614.37" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Repr = R} (expanded macros 0)  (4,210 Î¼s, 0.11%)</title><rect x="734.9" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="737.94" y="223.5" ></text>
</g>
<g >
<title>org.scalasteward.core.io.ProcessAlg[F] (expanded macros 0)  (338 Î¼s, 0.01%)</title><rect x="346.2" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="349.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (4,451 Î¼s, 0.11%)</title><rect x="1015.2" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.22" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4024) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (396 Î¼s, 0.01%)</title><rect x="743.6" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="746.62" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (363 Î¼s, 0.01%)</title><rect x="578.3" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="581.26" y="191.5" ></text>
</g>
<g >
<title>F[(scala.collection.immutable.Map[org.scalasteward.core.data.Dependency,org.scalasteward.core.coursier.DependencyMetadata], scala.collection.immutable.Map[String,org.http4s.Uri])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (708 Î¼s, 0.02%)</title><rect x="40.2" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="43.24" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)] :: shapeless.HNil,A :: List[org.scalasteward.core.data.Resolver] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (10,635 Î¼s, 0.27%)</title><rect x="415.0" y="197" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="417.95" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (id 7064) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (490 Î¼s, 0.01%)</title><rect x="994.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="997.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,341 Î¼s, 0.06%)</title><rect x="831.9" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="834.86" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)],Option[org.scalasteward.core.data.GroupId]] :: org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil]] (id 8745) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,483 Î¼s, 0.11%)</title><rect x="1162.1" y="213" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1165.13" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)]} (id 7115) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (368 Î¼s, 0.01%)</title><rect x="591.2" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="594.23" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.InstallationOut]{type Repr = V} (expanded macros 3)   (818 Î¼s, 0.02%)</title><rect x="779.3" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="782.25" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.data.PullRequestState :: Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,287 Î¼s, 0.19%)</title><rect x="873.7" y="181" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="876.68" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (3,839 Î¼s, 0.10%)</title><rect x="990.9" y="149" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="993.88" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Out = K} (id 4542) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,987 Î¼s, 0.05%)</title><rect x="537.7" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="540.71" y="207.5" ></text>
</g>
<g >
<title>unwrapped.type =&gt; ?{def === : ?} (expanded macros 0)  (395 Î¼s, 0.01%)</title><rect x="1173.3" y="245" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1176.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,640 Î¼s, 0.07%)</title><rect x="973.9" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="976.93" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,467 Î¼s, 0.11%)</title><rect x="1004.2" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1007.23" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[A]] (expanded macros 0)  (489 Î¼s, 0.01%)</title><rect x="753.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="756.34" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,238 Î¼s, 0.11%)</title><rect x="1081.8" y="101" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1084.76" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] (expanded macros 0)  (3,734 Î¼s, 0.10%)</title><rect x="587.4" y="165" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="590.42" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.Repository] (expanded macros 0)  (678 Î¼s, 0.02%)</title><rect x="782.6" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="785.58" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[Int]] (expanded macros 0)  (880 Î¼s, 0.02%)</title><rect x="448.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="451.33" y="191.5" ></text>
</g>
<g >
<title>migrations.type =&gt; ?{def traverse: ?} (expanded macros 0)  (817 Î¼s, 0.02%)</title><rect x="332.7" y="245" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="335.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Out = K} (id 6803) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (877 Î¼s, 0.02%)</title><rect x="575.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="578.35" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,603 Î¼s, 0.27%)</title><rect x="562.3" y="165" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="565.31" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) with String(&quot;postUpdateHooks&quot;) with String(&quot;updates&quot;) &lt;: String],Lub0] (expanded macros 0)  (755 Î¼s, 0.02%)</title><rect x="1079.5" y="165" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1082.53" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)],cats.data.NonEmptyList[String]] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)],org.scalasteward.core.data.Version] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)],cats.data.NonEmptyList[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)],Option[String]] :: Option[cats.data.NonEmptyList[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)],Option[cats.data.NonEmptyList[String]]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)],Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] :: shapeless.HNil] (id 2786) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (9,796 Î¼s, 0.25%)</title><rect x="726.7" y="197" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="729.74" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)]} (id 5484) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (535 Î¼s, 0.01%)</title><rect x="907.4" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="910.43" y="111.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.edit.hooks.PostUpdateHook] =&gt; ?{def traverse: ?} (expanded macros 0)  (687 Î¼s, 0.02%)</title><rect x="143.0" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="145.99" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.github.InstallationOut]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (440 Î¼s, 0.01%)</title><rect x="58.5" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.51" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.repoconfig.PullRequestUpdateStrategy =&gt; ?{def === : ?} (expanded macros 0)  (472 Î¼s, 0.01%)</title><rect x="346.8" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="349.81" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (722 Î¼s, 0.02%)</title><rect x="330.5" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="333.53" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)]} (id 1327) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,583 Î¼s, 0.04%)</title><rect x="367.3" y="165" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="370.34" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Credentials]{type Out = K} (id 1642) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (566 Î¼s, 0.01%)</title><rect x="404.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="407.54" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1949) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (992 Î¼s, 0.03%)</title><rect x="983.8" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="986.77" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[shapeless.HNil,shapeless.HNil]{type Out = OutT} (expanded macros 0)  (453 Î¼s, 0.01%)</title><rect x="1056.1" y="37" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1059.13" y="47.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[40,Int] (expanded macros 0)  (1,489 Î¼s, 0.04%)</title><rect x="270.1" y="181" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="273.08" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.TokenOut]{type Out = K} (id 5356) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (434 Î¼s, 0.01%)</title><rect x="785.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="788.67" y="207.5" ></text>
</g>
<g >
<title>PostUpdateHook.this.command.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,792 Î¼s, 0.05%)</title><rect x="148.7" y="245" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="151.70" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (769 Î¼s, 0.02%)</title><rect x="979.0" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.01" y="111.5" ></text>
</g>
<g >
<title>cats.Functor[Option] (expanded macros 0)  (575 Î¼s, 0.01%)</title><rect x="210.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="213.56" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.CrossDependency] (expanded macros 0)   (577 Î¼s, 0.01%)</title><rect x="614.3" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="617.31" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigrations] (expanded macros 0)  (891 Î¼s, 0.02%)</title><rect x="311.0" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="314.05" y="255.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; Throwable (expanded macros 0)   (496 Î¼s, 0.01%)</title><rect x="12.3" y="245" width="0.1" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.29" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (expanded macros 0)  (741 Î¼s, 0.02%)</title><rect x="402.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="404.96" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)]} (id 4198) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (331 Î¼s, 0.01%)</title><rect x="881.7" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="884.67" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 2002) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (474 Î¼s, 0.01%)</title><rect x="991.4" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="994.37" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil] (id 4012) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,306 Î¼s, 0.03%)</title><rect x="740.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="743.88" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4591) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,328 Î¼s, 0.03%)</title><rect x="520.9" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="523.87" y="191.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;\n&quot;), x$2: ? &gt;: String(&quot;&quot;), x$3: ? &gt;: String(&quot;\n&quot;)): ?} (expanded macros 0)  (363 Î¼s, 0.01%)</title><rect x="220.3" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="223.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (6,101 Î¼s, 0.16%)</title><rect x="1084.9" y="133" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1087.92" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]] (id 4702) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,412 Î¼s, 0.45%)</title><rect x="496.7" y="245" width="5.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="499.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7850) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (484 Î¼s, 0.01%)</title><rect x="1052.6" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1055.64" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2439) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,375 Î¼s, 0.04%)</title><rect x="616.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="619.36" y="207.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def handleErrorWith: ?} (expanded macros 0)  (344 Î¼s, 0.01%)</title><rect x="89.0" y="245" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="91.98" y="255.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (1,901 Î¼s, 0.05%)</title><rect x="88.4" y="229" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="91.40" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Repr = R} (expanded macros 0)  (15,335 Î¼s, 0.39%)</title><rect x="871.2" y="213" width="4.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="874.25" y="223.5" ></text>
</g>
<g >
<title>to.major.type =&gt; ?{def === : ?} (expanded macros 0)  (412 Î¼s, 0.01%)</title><rect x="1172.9" y="245" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1175.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.CommitsConfig :: org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (12,716 Î¼s, 0.33%)</title><rect x="1060.0" y="197" width="3.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1063.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]] (id 4717) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (55,331 Î¼s, 1.42%)</title><rect x="479.9" y="245" width="16.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="482.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7466) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,159 Î¼s, 0.03%)</title><rect x="1033.8" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1036.76" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Repr = V} (id 4141) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (523 Î¼s, 0.01%)</title><rect x="433.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="436.89" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (1,631 Î¼s, 0.04%)</title><rect x="588.0" y="149" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="591.01" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Out = K} (id 4525) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,354 Î¼s, 0.03%)</title><rect x="550.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="553.80" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (431 Î¼s, 0.01%)</title><rect x="1180.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1183.27" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 40} (id 6010) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (581 Î¼s, 0.01%)</title><rect x="270.1" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="273.14" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,499 Î¼s, 0.06%)</title><rect x="976.1" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="979.08" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Lub0] (expanded macros 0)  (470 Î¼s, 0.01%)</title><rect x="1014.8" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.83" y="159.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[_] (expanded macros 0)  (548 Î¼s, 0.01%)</title><rect x="307.5" y="197" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="310.55" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 1840) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (992 Î¼s, 0.03%)</title><rect x="943.6" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="946.55" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Repr = V} (expanded macros 3)   (819 Î¼s, 0.02%)</title><rect x="881.1" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="884.08" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.ForkPayload]{type Repr = R} (expanded macros 0)  (6,905 Î¼s, 0.18%)</title><rect x="898.0" y="213" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="901.02" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (884 Î¼s, 0.02%)</title><rect x="1176.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1179.17" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,448 Î¼s, 0.04%)</title><rect x="913.2" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="916.18" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (337 Î¼s, 0.01%)</title><rect x="588.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="591.55" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (8,355 Î¼s, 0.21%)</title><rect x="234.2" y="245" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="237.19" y="255.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[List[String]], com.monovore.decline.Opts[List[String]], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (375 Î¼s, 0.01%)</title><rect x="15.2" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="18.23" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)]} (id 3979) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (362 Î¼s, 0.01%)</title><rect x="431.7" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="434.69" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil] (id 2366) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (8,666 Î¼s, 0.22%)</title><rect x="611.9" y="197" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="614.89" y="207.5" ></text>
</g>
<g >
<title>org.http4s.EntityDecoder[F,Unit] (expanded macros 0)  (331 Î¼s, 0.01%)</title><rect x="334.5" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="337.50" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,966 Î¼s, 0.05%)</title><rect x="774.1" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="777.08" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (6,613 Î¼s, 0.17%)</title><rect x="1099.9" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1102.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: String :: Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,398 Î¼s, 0.32%)</title><rect x="905.6" y="181" width="3.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="908.59" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,601 Î¼s, 0.04%)</title><rect x="613.1" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="616.06" y="175.5" ></text>
</g>
<g >
<title>Float =&gt; Int (expanded macros 0)   (1,078 Î¼s, 0.03%)</title><rect x="128.9" y="245" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="131.87" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version] (expanded macros 0)  (1,651 Î¼s, 0.04%)</title><rect x="240.3" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="243.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.AzureComment]{type Repr = V} (id 3428) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (522 Î¼s, 0.01%)</title><rect x="859.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="862.63" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (3,974 Î¼s, 0.10%)</title><rect x="1096.3" y="165" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1099.26" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (427 Î¼s, 0.01%)</title><rect x="406.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="409.83" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.IvyRepository :+: org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil]{type Out = R} (expanded macros 0)  (1,506 Î¼s, 0.04%)</title><rect x="928.4" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="931.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,066 Î¼s, 0.10%)</title><rect x="1077.0" y="133" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1079.98" y="143.5" ></text>
</g>
<g >
<title>F[(Option[String], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def map: ?} (expanded macros 0)  (546 Î¼s, 0.01%)</title><rect x="34.3" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="37.26" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[List] (expanded macros 0)  (1,211 Î¼s, 0.03%)</title><rect x="210.2" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="213.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForGroupId]{type Repr = R} (expanded macros 0)  (12,962 Î¼s, 0.33%)</title><rect x="615.3" y="213" width="4.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="618.33" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,968 Î¼s, 0.05%)</title><rect x="1101.3" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1104.27" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] (expanded macros 0)  (357 Î¼s, 0.01%)</title><rect x="751.1" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="754.05" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.RepoConfig]] (id 7603) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (139,903 Î¼s, 3.58%)</title><rect x="1044.5" y="245" width="42.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1047.48" y="255.5" >sha..</text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Repr = V} (id 3389) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,233 Î¼s, 0.03%)</title><rect x="867.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="870.30" y="207.5" ></text>
</g>
<g >
<title>p.groupId.value.type =&gt; ?{def === : ?} (expanded macros 0)  (392 Î¼s, 0.01%)</title><rect x="348.4" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="351.40" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (800 Î¼s, 0.02%)</title><rect x="896.5" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="899.46" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (440 Î¼s, 0.01%)</title><rect x="501.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="504.78" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (372 Î¼s, 0.01%)</title><rect x="429.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="432.81" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.github.Repository]] (expanded macros 0)  (1,137 Î¼s, 0.03%)</title><rect x="782.4" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="785.44" y="191.5" ></text>
</g>
<g >
<title>x$15.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (473 Î¼s, 0.01%)</title><rect x="1180.9" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1183.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Repr = V} (expanded macros 3)   (648 Î¼s, 0.02%)</title><rect x="436.0" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="439.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)]} (id 1665) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (419 Î¼s, 0.01%)</title><rect x="409.4" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="412.43" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CreateComment]{type Repr = V} (id 3630) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (476 Î¼s, 0.01%)</title><rect x="423.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="426.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Out = K} (id 4192) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (502 Î¼s, 0.01%)</title><rect x="880.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="883.93" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = Labels} (id 2877) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (410 Î¼s, 0.01%)</title><rect x="1150.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1153.94" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.CommitOut] (expanded macros 0)  (6,596 Î¼s, 0.17%)</title><rect x="763.9" y="229" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="766.91" y="239.5" ></text>
</g>
<g >
<title>RepoConfig.this.type =&gt; ?{def asJson: ?} (expanded macros 0)  (724 Î¼s, 0.02%)</title><rect x="149.2" y="245" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="152.24" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)]} (id 4738) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,059 Î¼s, 0.03%)</title><rect x="489.9" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="492.85" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (expanded macros 3)   (589 Î¼s, 0.02%)</title><rect x="995.7" y="197" width="0.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="998.66" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],List[String]] :: shapeless.HNil] (id 5293) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (1,758 Î¼s, 0.05%)</title><rect x="894.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="897.24" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (3,093 Î¼s, 0.08%)</title><rect x="1100.9" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1103.93" y="143.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.repoconfig.RepoConfigAlg.ConfigParsingResult, Option[org.scalasteward.core.repoconfig.RepoConfig], Option[String], org.scalasteward.core.repoconfig.RepoConfig)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (394 Î¼s, 0.01%)</title><rect x="39.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="42.23" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (expanded macros 3)   (808 Î¼s, 0.02%)</title><rect x="760.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="763.80" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.GitHubAssignees]{type Repr = R} (expanded macros 0)  (3,955 Î¼s, 0.10%)</title><rect x="890.3" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="893.34" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (795 Î¼s, 0.02%)</title><rect x="945.9" y="101" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="948.87" y="111.5" ></text>
</g>
<g >
<title>&quot;), x$3: ? &gt;: String(&quot;&quot;)): ?} (expanded macros 0)  (717 Î¼s, 0.02%)</title><rect x="352.3" y="213" width="0.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="355.33" y="223.5" ></text>
</g>
<g >
<title>F[scala.collection.immutable.Map[org.scalasteward.core.data.Dependency,org.scalasteward.core.coursier.DependencyMetadata]] =&gt; ?{def map: ?} (expanded macros 0)  (615 Î¼s, 0.02%)</title><rect x="128.0" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="131.01" y="255.5" ></text>
</g>
<g >
<title>F[Map[(org.scalasteward.core.data.GroupId, String),org.scalasteward.core.util.Timestamp]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (534 Î¼s, 0.01%)</title><rect x="61.4" y="245" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="64.38" y="255.5" ></text>
</g>
<g >
<title>cats.ApplicativeError[F,Throwable] (expanded macros 0)  (2,617 Î¼s, 0.07%)</title><rect x="195.1" y="245" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="198.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;artifactIdAfter&quot;) with String(&quot;artifactIdBefore&quot;) &lt;: String],Lub0] (expanded macros 0)  (576 Î¼s, 0.01%)</title><rect x="1164.6" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1167.61" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Version]] (expanded macros 0)  (1,893 Î¼s, 0.05%)</title><rect x="379.2" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="382.20" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]{type Repr = R :: shapeless.HNil}] (id 1007) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,124 Î¼s, 0.05%)</title><rect x="1142.4" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1145.43" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.User :: shapeless.HNil]{type Out = R} (expanded macros 0)  (926 Î¼s, 0.02%)</title><rect x="436.4" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="439.36" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (400 Î¼s, 0.01%)</title><rect x="882.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="885.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UpdateState]{type Repr = V} (expanded macros 3)   (651 Î¼s, 0.02%)</title><rect x="883.6" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="886.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)]} (id 4531) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,117 Î¼s, 0.03%)</title><rect x="552.6" y="181" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="555.62" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (14,887 Î¼s, 0.38%)</title><rect x="1078.5" y="197" width="4.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1081.54" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Repr = V} (expanded macros 3)   (1,736 Î¼s, 0.04%)</title><rect x="904.0" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="907.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)],cats.data.NonEmptyList[String]] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)],org.scalasteward.core.data.Version] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)],cats.data.NonEmptyList[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)],Option[String]] :: Option[cats.data.NonEmptyList[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)],Option[cats.data.NonEmptyList[String]]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)],Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] :: shapeless.HNil]] (id 2785) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,417 Î¼s, 0.27%)</title><rect x="726.6" y="213" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="729.56" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1948) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (779 Î¼s, 0.02%)</title><rect x="983.2" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="986.23" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (1,137 Î¼s, 0.03%)</title><rect x="965.3" y="117" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="968.33" y="127.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[[_]F[_]] (expanded macros 0)  (1,105 Î¼s, 0.03%)</title><rect x="261.7" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="264.66" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (415 Î¼s, 0.01%)</title><rect x="583.4" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="586.45" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 2483) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,515 Î¼s, 0.04%)</title><rect x="626.3" y="149" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="629.32" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (644 Î¼s, 0.02%)</title><rect x="1010.6" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1013.55" y="175.5" ></text>
</g>
<g >
<title>F[(Unit, String, F[Option[org.scalasteward.core.git.Commit]])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (425 Î¼s, 0.01%)</title><rect x="35.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="38.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.PullRequestOut]{type Out = K} (id 4382) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (612 Î¼s, 0.02%)</title><rect x="767.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="770.38" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[String]] (expanded macros 0)  (466 Î¼s, 0.01%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1191.01" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (2,625 Î¼s, 0.07%)</title><rect x="1086.0" y="85" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.97" y="95.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (1,909 Î¼s, 0.05%)</title><rect x="613.0" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="615.97" y="191.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.util.Timestamp] =&gt; io.circe.Json (expanded macros 0)   (847 Î¼s, 0.02%)</title><rect x="381.9" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="384.85" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,092 Î¼s, 0.03%)</title><rect x="1178.0" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1181.04" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Credentials]] (id 1637) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (12,467 Î¼s, 0.32%)</title><rect x="403.2" y="245" width="3.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="406.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)]} (id 2777) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (748 Î¼s, 0.02%)</title><rect x="725.0" y="85" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="728.04" y="95.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (814 Î¼s, 0.02%)</title><rect x="1157.6" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.58" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Update] (expanded macros 0)  (1,289 Î¼s, 0.03%)</title><rect x="571.5" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="574.52" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (689 Î¼s, 0.02%)</title><rect x="467.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="470.77" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (3,353 Î¼s, 0.09%)</title><rect x="948.5" y="149" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="951.50" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)  (1,453 Î¼s, 0.04%)</title><rect x="295.8" y="229" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="298.82" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (1,718 Î¼s, 0.04%)</title><rect x="1001.4" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.41" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)],String] :: shapeless.HNil]] (id 4832) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,787 Î¼s, 0.10%)</title><rect x="478.8" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="481.78" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChanges] (expanded macros 0)  (13,137 Î¼s, 0.34%)</title><rect x="1166.8" y="229" width="4.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1169.83" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)] :: shapeless.HNil,String :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,038 Î¼s, 0.05%)</title><rect x="384.6" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="387.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Out = K} (id 3990) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (522 Î¼s, 0.01%)</title><rect x="737.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="740.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,018 Î¼s, 0.15%)</title><rect x="563.7" y="133" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="566.70" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] (expanded macros 0)  (759 Î¼s, 0.02%)</title><rect x="828.4" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="831.40" y="175.5" ></text>
</g>
<g >
<title>Ordering[A] (expanded macros 0)  (531 Î¼s, 0.01%)</title><rect x="146.2" y="245" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="149.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,557 Î¼s, 0.09%)</title><rect x="973.7" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="976.65" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.AzureComment]{type Out = K} (id 3425) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (474 Î¼s, 0.01%)</title><rect x="859.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="862.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7854) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (511 Î¼s, 0.01%)</title><rect x="1052.3" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1055.33" y="127.5" ></text>
</g>
<g >
<title>from.preRelease.type =&gt; ?{def =!= : ?} (expanded macros 0)  (619 Î¼s, 0.02%)</title><rect x="277.3" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="280.26" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: shapeless.HNil] (id 4395) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,254 Î¼s, 0.08%)</title><rect x="769.1" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="772.09" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.Comment] (expanded macros 0)  (1,489 Î¼s, 0.04%)</title><rect x="316.4" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="319.35" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Link] (expanded macros 0)  (8,332 Î¼s, 0.21%)</title><rect x="741.9" y="229" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="744.91" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.data.Repo,Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,725 Î¼s, 0.04%)</title><rect x="123.1" y="245" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="126.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,126 Î¼s, 0.03%)</title><rect x="507.0" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="510.05" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.UserOut :: Option[org.scalasteward.core.forge.data.RepoOut] :: org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,204 Î¼s, 0.11%)</title><rect x="773.4" y="181" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="776.40" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (657 Î¼s, 0.02%)</title><rect x="965.7" y="101" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="968.74" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7451) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,268 Î¼s, 0.03%)</title><rect x="1029.1" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1032.07" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Branch] (expanded macros 0)  (840 Î¼s, 0.02%)</title><rect x="313.9" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="316.87" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.Grouped] (expanded macros 0)  (24,690 Î¼s, 0.63%)</title><rect x="620.8" y="229" width="7.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="623.83" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: shapeless.HNil]] (id 4497) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,446 Î¼s, 0.04%)</title><rect x="777.8" y="213" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="780.77" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,475 Î¼s, 0.09%)</title><rect x="545.3" y="85" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="548.26" y="95.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (1,081 Î¼s, 0.03%)</title><rect x="985.6" y="133" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="988.56" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,331 Î¼s, 0.09%)</title><rect x="941.8" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="944.77" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.Reviewer]] (id 3714) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,341 Î¼s, 0.19%)</title><rect x="427.8" y="245" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="430.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Out = K} (id 4824) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,677 Î¼s, 0.04%)</title><rect x="475.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="478.12" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,621 Î¼s, 0.04%)</title><rect x="1055.8" y="69" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1058.78" y="79.5" ></text>
</g>
<g >
<title>cats.Functor[[+A]cats.effect.kernel.Resource[F,A]] (expanded macros 0)  (2,194 Î¼s, 0.06%)</title><rect x="229.4" y="229" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="232.43" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Out = K} (id 3925) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (665 Î¼s, 0.02%)</title><rect x="731.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="734.36" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,180 Î¼s, 0.03%)</title><rect x="1184.7" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1187.71" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (expanded macros 3)   (468 Î¼s, 0.01%)</title><rect x="1169.0" y="197" width="0.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1171.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (id 7445) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,463 Î¼s, 0.04%)</title><rect x="1026.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1029.28" y="207.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.data.Version]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (825 Î¼s, 0.02%)</title><rect x="67.4" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="70.41" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] (expanded macros 0)  (337 Î¼s, 0.01%)</title><rect x="256.3" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="259.30" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(cats.data.NonEmptyList[org.scalasteward.core.data.CrossDependency], cats.data.NonEmptyList[org.scalasteward.core.data.Version])] (expanded macros 0)  (2,000 Î¼s, 0.05%)</title><rect x="249.2" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (8,774 Î¼s, 0.22%)</title><rect x="1010.9" y="213" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1013.91" y="223.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.generic.Equal[40]]{type R = RP} (expanded macros 0)  (1,874 Î¼s, 0.05%)</title><rect x="270.0" y="197" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="272.96" y="207.5" ></text>
</g>
<g >
<title>cats.UnorderedFoldable[Comparable] (expanded macros 0)   (387 Î¼s, 0.01%)</title><rect x="152.1" y="229" width="0.1" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="155.08" y="239.5" ></text>
</g>
<g >
<title>((org.scalasteward.core.data.GroupId, String)) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (371 Î¼s, 0.01%)</title><rect x="17.3" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="20.25" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (1,518 Î¼s, 0.04%)</title><rect x="272.5" y="213" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="275.46" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.InstallationOut] (expanded macros 0)  (5,609 Î¼s, 0.14%)</title><rect x="778.7" y="229" width="1.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="781.71" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1822) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (896 Î¼s, 0.02%)</title><rect x="940.7" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="943.65" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (924 Î¼s, 0.02%)</title><rect x="762.5" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="765.51" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (583 Î¼s, 0.01%)</title><rect x="522.5" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="525.54" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'f'} (id 6002) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (539 Î¼s, 0.01%)</title><rect x="268.2" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="271.23" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7868) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (547 Î¼s, 0.01%)</title><rect x="1083.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1086.72" y="191.5" ></text>
</g>
<g >
<title>F[(A, org.http4s.Headers)] =&gt; ?{def map: ?} (expanded macros 0)  (1,418 Î¼s, 0.04%)</title><rect x="31.4" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="34.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Repr = V} (expanded macros 3)   (1,741 Î¼s, 0.04%)</title><rect x="551.2" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="554.21" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,495 Î¼s, 0.06%)</title><rect x="944.1" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="947.12" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branches] (expanded macros 0)  (6,231 Î¼s, 0.16%)</title><rect x="734.9" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="737.86" y="239.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (572 Î¼s, 0.01%)</title><rect x="523.0" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="526.00" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)],Boolean] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.User] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],String] :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] :: shapeless.HNil]] (id 4564) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,499 Î¼s, 0.22%)</title><rect x="546.3" y="213" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="549.31" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Repr = V} (expanded macros 3)   (638 Î¼s, 0.02%)</title><rect x="863.6" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="866.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Out = K} (id 4209) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (463 Î¼s, 0.01%)</title><rect x="435.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="438.75" y="207.5" ></text>
</g>
<g >
<title>h.type =&gt; ?{def show: ?} (expanded macros 0)  (365 Î¼s, 0.01%)</title><rect x="283.5" y="245" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="286.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,String :: String :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,780 Î¼s, 0.07%)</title><rect x="888.0" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="891.04" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Repr = V} (expanded macros 3)   (1,800 Î¼s, 0.05%)</title><rect x="475.6" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="478.63" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.forge.data.RepoOut] :: org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,471 Î¼s, 0.09%)</title><rect x="773.6" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="776.62" y="175.5" ></text>
</g>
<g >
<title>cats.Traverse[org.scalasteward.core.util.Nel] (expanded macros 0)  (712 Î¼s, 0.02%)</title><rect x="219.3" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="222.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)],String] :: shapeless.HNil]] (id 5362) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,686 Î¼s, 0.04%)</title><rect x="786.6" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="789.58" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7469) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (921 Î¼s, 0.02%)</title><rect x="1032.0" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1034.98" y="191.5" ></text>
</g>
<g >
<title>F[Throwable] =&gt; ?{def flatMap: ?} (expanded macros 0)  (332 Î¼s, 0.01%)</title><rect x="74.8" y="245" width="0.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="77.84" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (1,306 Î¼s, 0.03%)</title><rect x="569.2" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="572.21" y="191.5" ></text>
</g>
<g >
<title>F[Option[(K, Option[V])]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (750 Î¼s, 0.02%)</title><rect x="62.4" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="65.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (566 Î¼s, 0.01%)</title><rect x="1170.4" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1173.38" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.InstallationOut]] (id 5300) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,259 Î¼s, 0.19%)</title><rect x="778.2" y="245" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="781.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Header]] (id 1654) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,146 Î¼s, 0.34%)</title><rect x="407.0" y="245" width="3.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="409.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,081 Î¼s, 0.03%)</title><rect x="1007.7" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1010.72" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2061) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,520 Î¼s, 0.04%)</title><rect x="972.4" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="975.44" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = D} (expanded macros 0)  (3,830 Î¼s, 0.10%)</title><rect x="1001.2" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.25" y="223.5" ></text>
</g>
<g >
<title>F[Long] =&gt; ?{def map: ?} (expanded macros 0)  (1,747 Î¼s, 0.04%)</title><rect x="60.9" y="245" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="63.85" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (893 Î¼s, 0.02%)</title><rect x="1072.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1075.31" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)]} (id 1679) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (463 Î¼s, 0.01%)</title><rect x="931.6" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="934.63" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)],String] :: shapeless.HNil]] (id 3652) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,223 Î¼s, 0.06%)</title><rect x="421.9" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="424.94" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (963 Î¼s, 0.02%)</title><rect x="1074.2" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1077.23" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.RepositoryResponse] (expanded macros 0)  (4,188 Î¼s, 0.11%)</title><rect x="312.6" y="245" width="1.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="315.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = D} (expanded macros 0)  (3,789 Î¼s, 0.10%)</title><rect x="939.0" y="149" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="941.95" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,433 Î¼s, 0.04%)</title><rect x="738.2" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="741.20" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8236) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,472 Î¼s, 0.06%)</title><rect x="1104.0" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1107.04" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (1,365 Î¼s, 0.03%)</title><rect x="380.1" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="383.14" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (9,152 Î¼s, 0.23%)</title><rect x="961.5" y="149" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="964.45" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7624) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (492 Î¼s, 0.01%)</title><rect x="1062.6" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1065.59" y="95.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (478 Î¼s, 0.01%)</title><rect x="534.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="537.12" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] =&gt; ?{def map: ?} (expanded macros 0)  (2,132 Î¼s, 0.05%)</title><rect x="119.3" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="122.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,934 Î¼s, 0.05%)</title><rect x="883.9" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="886.90" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1824) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (773 Î¼s, 0.02%)</title><rect x="940.9" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="943.92" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver]{type Repr = R} (expanded macros 0)   (6,297 Î¼s, 0.16%)</title><rect x="927.0" y="213" width="1.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="929.98" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (6,553 Î¼s, 0.17%)</title><rect x="1076.2" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1079.23" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Update.ForArtifactIdDecoder.type =&gt; ?{def widen: ?} (expanded macros 0)  (1,057 Î¼s, 0.03%)</title><rect x="342.3" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="345.29" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)],org.scalasteward.core.git.Sha1] :: org.scalasteward.core.data.Update with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)],org.scalasteward.core.data.Update] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: Option[org.scalasteward.core.forge.data.PullRequestNumber] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Option[org.scalasteward.core.forge.data.PullRequestNumber]] :: Option[org.scalasteward.core.git.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)],Option[org.scalasteward.core.git.Branch]] :: shapeless.HNil] (id 6594) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (28,151 Î¼s, 0.72%)</title><rect x="565.7" y="197" width="8.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="568.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver]{type Repr = R} (expanded macros 0)  (9,619 Î¼s, 0.25%)</title><rect x="928.9" y="213" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="931.88" y="223.5" ></text>
</g>
</g>
</svg>
